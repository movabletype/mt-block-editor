{"version":3,"file":"component-B9cS8gTI.js","sources":["../../../node_modules/svelte/src/version.js","../../../node_modules/svelte/src/internal/disclose-version.js","../../../node_modules/svelte/src/constants.js","../../../node_modules/esm-env/false.js","../../../node_modules/svelte/src/internal/client/constants.js","../../../node_modules/svelte/src/internal/shared/utils.js","../../../node_modules/svelte/src/internal/client/dom/task.js","../../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../../node_modules/svelte/src/internal/client/errors.js","../../../node_modules/svelte/src/internal/flags/index.js","../../../node_modules/svelte/src/internal/client/proxy.js","../../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../../node_modules/svelte/src/internal/client/warnings.js","../../../node_modules/svelte/src/internal/client/dom/hydration.js","../../../node_modules/svelte/src/internal/client/dom/operations.js","../../../node_modules/svelte/src/internal/client/runtime.js","../../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../../node_modules/svelte/src/internal/shared/errors.js","../../../node_modules/svelte/src/internal/client/context.js","../../../node_modules/svelte/src/utils.js","../../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../../node_modules/svelte/src/internal/client/dom/template.js","../../../node_modules/svelte/src/internal/client/render.js","../../../node_modules/svelte/src/internal/client/dom/css.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../../../node_modules/svelte/src/internal/client/reactivity/store.js","../../../node_modules/svelte/src/internal/client/reactivity/props.js","../../../node_modules/svelte/src/legacy/legacy-client.js","../../../node_modules/svelte/src/internal/client/dom/elements/custom-element.js","../src/util/html.ts","../src/constant.ts","../src/tooltip/Tooltip.svelte","../src/tooltip/index.ts","../src/ui/item/element.ts","../src/toolbar/item/element.css?raw","../src/toolbar/item/element.ts","../src/statusbar/item/element.ts","../src/paste-menu/item/element.css?raw","../src/paste-menu/item/element.ts","../src/quick-action/item/element.css?raw","../src/quick-action/item/element.ts"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.25.6';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","export default false;\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\nexport const EFFECT_IS_UPDATING = 1 << 21;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect, active_reaction, set_active_reaction } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { state as source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/** @type {ProxyMetadata | null} */\nvar parent_metadata = null;\n\n/**\n * @template T\n * @param {T} value\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, prev) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar reaction = active_reaction;\n\n\t/**\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tvar previous_reaction = active_reaction;\n\t\tset_active_reaction(reaction);\n\n\t\t/** @type {T} */\n\t\tvar result;\n\n\t\tif (DEV) {\n\t\t\tvar previous_metadata = parent_metadata;\n\t\t\tparent_metadata = metadata;\n\t\t\tresult = fn();\n\t\t\tparent_metadata = previous_metadata;\n\t\t} else {\n\t\t\tresult = fn();\n\t\t}\n\n\t\tset_active_reaction(previous_reaction);\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent: parent_metadata,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent_metadata === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => source(descriptor.value, stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(descriptor.value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\tprop,\n\t\t\t\t\t\twith_parent(() => source(UNINITIALIZED, stack))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => source(proxy(exists ? target[prop] : UNINITIALIZED), stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => source(has ? proxy(target[prop]) : UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t\t);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\treaction_sources,\n\tset_reaction_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_IS_UPDATING\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { proxy } from '../proxy.js';\n\nexport let inspect_effects = new Set();\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t!reaction_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value, source) : value;\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nfunction execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : 'The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value'}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : 'Hydration failed because the initial UI does not match what was rendered on the server'}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : 'Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead'}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}\n\n/**\n * The `slide` transition does not work correctly for elements with `display: %value%`\n * @param {string} value\n */\nexport function transition_slide_display(value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] transition_slide_display\\n%cThe \\`slide\\` transition does not work correctly for elements with \\`display: ${value}\\`\\nhttps://svelte.dev/e/transition_slide_display`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/transition_slide_display`);\n\t}\n}","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT,\n\tEFFECT_IS_UPDATING\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nlet is_throwing_error = false;\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them should not cause a re-run\n * @type {null | Source[]}\n */\nexport let reaction_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_reaction_sources(sources) {\n\treaction_sources = sources;\n}\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && active_reaction.f & EFFECT_IS_UPDATING) {\n\t\tif (reaction_sources === null) {\n\t\t\tset_reaction_sources([value]);\n\t\t} else {\n\t\t\treaction_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = is_firefox ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif (reaction_sources?.includes(signal)) continue;\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_reaction_sources = reaction_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\treaction_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\treaction.f |= EFFECT_IS_UPDATING;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\treaction_sources = previous_reaction_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\n\t\treaction.f ^= EFFECT_IS_UPDATING;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t\told_values.clear();\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t// because we're flushing the current effect\n\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\ttry {\n\t\t\t\t\tactive_reaction = effect;\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t\t} finally {\n\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tresult = fn();\n\t}\n\n\tflush_tasks();\n\n\twhile (queued_root_effects.length > 0) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tflush_tasks();\n\t}\n\n\treturn /** @type {T} */ (result);\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (!reaction_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\t\t\tif (signal.rv < read_version) {\n\t\t\t\tsignal.rv = read_version;\n\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\tskipped_deps++;\n\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\tif (is_destroying_effect && old_values.has(signal)) {\n\t\treturn old_values.get(signal);\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tvar ctx = (component_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\td: false,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t});\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tteardown(() => {\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\n\t});\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","import { DEV } from 'esm-env';\nimport { queue_micro_task } from './task.js';\nimport { register_style } from '../dev/css.js';\n\n/**\n * @param {Node} anchor\n * @param {{ hash: string, code: string }} css\n */\nexport function append_styles(anchor, css) {\n\t// Use `queue_micro_task` to ensure `anchor` is in the DOM, otherwise getRootNode() will yield wrong results\n\tqueue_micro_task(() => {\n\t\tvar root = anchor.getRootNode();\n\n\t\tvar target = /** @type {ShadowRoot} */ (root).host\n\t\t\t? /** @type {ShadowRoot} */ (root)\n\t\t\t: /** @type {Document} */ (root).head ?? /** @type {Document} */ (root.ownerDocument).head;\n\n\t\t// Always querying the DOM is roughly the same perf as additionally checking for presence in a map first assuming\n\t\t// that you'll get cache hits half of the time, so we just always query the dom for simplicity and code savings.\n\t\tif (!target.querySelector('#' + css.hash)) {\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.id = css.hash;\n\t\t\tstyle.textContent = css.code;\n\n\t\t\ttarget.appendChild(style);\n\n\t\t\tif (DEV) {\n\t\t\t\tregister_style(css.hash, style);\n\t\t\t}\n\t\t}\n\t});\n}\n","import { STATE_SYMBOL } from '../../../constants.js';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, captured_signals, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP, LEGACY_PROPS, STATE_SYMBOL } from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @param {Derived} current_value\n * @returns {boolean}\n */\nfunction has_destroyed_component_ctx(current_value) {\n\treturn current_value.ctx?.d ?? false;\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\t// Ensure we eagerly capture the initial value if it's bindable\n\tif (bindable) {\n\t\tget(current_value);\n\t}\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\n\t\t\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\treturn current_value.v;\n\t\t}\n\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, LEGACY_PROPS, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport { active_effect, flushSync, get, set_signal_status } from '../internal/client/runtime.js';\nimport { lifecycle_outside_component } from '../internal/shared/errors.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\nimport { component_context, dev_current_component_function } from '../internal/client/context.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Support using the component as both a class and function during the transition period\n * @typedef  {{new (o: ComponentConstructorOptions): SvelteComponent;(...args: Parameters<Component<Record<string, any>>>): ReturnType<Component<Record<string, any>, Record<string, any>>>;}} LegacyComponentType\n */\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is incremented on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\t// Necessary to not throw \"invalid binding\" validation errors on the component side\n\t\t\t\t\tif (prop === LEGACY_PROPS) return true;\n\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tanchor: options.anchor,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flushSync for custom element wrappers or if the user doesn't want it\n\t\tif (!options?.props?.$$host || options.sync === false) {\n\t\t\tflushSync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n","import { createClassComponent } from '../../../../legacy/legacy-client.js';\nimport { destroy_effect, effect_root, render_effect } from '../../reactivity/effects.js';\nimport { append } from '../template.js';\nimport { define_property, get_descriptor, object_keys } from '../../../shared/utils.js';\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n/** @type {any} */\nlet SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** @type {any} The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** @type {Record<string, any>} Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, EventListenerOrEventListenerObject[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<EventListenerOrEventListenerObject, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\t\t/** @type {any} The managed render effect for reflecting attributes */\n\t\t$$me;\n\n\t\t/**\n\t\t * @param {*} $$componentCtor\n\t\t * @param {*} $$slots\n\t\t * @param {*} use_shadow_dom\n\t\t */\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/** @param {string} name */\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {Element} anchor\n\t\t\t\t\t */\n\t\t\t\t\treturn (anchor) => {\n\t\t\t\t\t\tconst slot = document.createElement('slot');\n\t\t\t\t\t\tif (name !== 'default') slot.name = name;\n\n\t\t\t\t\t\tappend(anchor, slot);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\tif (name === 'default' && !this.$$d.children) {\n\t\t\t\t\t\t\tthis.$$d.children = create_slot(name);\n\t\t\t\t\t\t\t$$slots.default = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$$slots[name] = create_slot(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = createClassComponent({\n\t\t\t\t\tcomponent: this.$$ctor,\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$host: this\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tthis.$$me = effect_root(() => {\n\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\t\tfor (const key of object_keys(this.$$c)) {\n\t\t\t\t\t\t\tif (!this.$$p_d[key]?.reflect) continue;\n\t\t\t\t\t\t\tthis.$$d[key] = this.$$c[key];\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$$r = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\n\t\t/**\n\t\t * @param {string} attr\n\t\t * @param {string} _oldValue\n\t\t * @param {string} newValue\n\t\t */\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$me();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} attribute_name\n\t\t */\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tobject_keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @param {HTMLElement} element\n */\nfunction get_custom_elements_slots(element) {\n\t/** @type {Record<string, true>} */\n\tconst result = {};\n\telement.childNodes.forEach((node) => {\n\t\tresult[/** @type {Element} node */ (node).slot || 'default'] = true;\n\t});\n\treturn result;\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {any} Component  A Svelte component function\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} exports  Explicitly exported values, other than props\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\texports,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn object_keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tobject_keys(props_definition).forEach((prop) => {\n\t\tdefine_property(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tvar component = this.$$c;\n\n\t\t\t\tif (component) {\n\t\t\t\t\t// // If the instance has an accessor, use that instead\n\t\t\t\t\tvar setter = get_descriptor(component, prop)?.get;\n\n\t\t\t\t\tif (setter) {\n\t\t\t\t\t\tcomponent[prop] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomponent.$set({ [prop]: value });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\texports.forEach((property) => {\n\t\tdefine_property(Class.prototype, property, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[property];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ Class;\n\treturn Class;\n}\n","const isEditable = (element: HTMLElement): boolean =>\n  !element.closest(\"div[data-mt-rich-text-editor-embed-object]\");\n\nexport const preprocessHTML = (html: string): string => {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(`<body>${html}</body>`, \"text/html\");\n  const body = doc.body;\n\n  body.querySelectorAll(\"a\").forEach((a) => {\n    if (!isEditable(a)) {\n      return;\n    }\n\n    if (\n      a.querySelector(\n        \"address, article, aside, blockquote, details, dialog, div, dl, figure, figcaption, footer, header, h1, h2, h3, h4, h5, h6, hr, main, nav, ol, p, pre, section, table, td, thead, tr, ul\"\n      )\n    ) {\n      a.dataset.mtRichTextEditorBlock = \"true\";\n    }\n  });\n\n  body.querySelectorAll(\"script\").forEach((script) => {\n    if (!isEditable(script)) {\n      return;\n    }\n\n    const element = document.createElement(\"mt-rich-text-editor-script\");\n    element.textContent = script.textContent;\n    Array.from(script.attributes).forEach((attr) => {\n      element.setAttribute(attr.name, attr.value);\n    });\n    script.parentNode?.replaceChild(element, script);\n  });\n\n  body\n    .querySelectorAll<HTMLElement>(\n      \"div, blockquote, main, article, ul, ol, section, aside, nav, header, footer, figure, figcaption, details, dialog, td, th\"\n    )\n    .forEach((div) => {\n      if (!isEditable(div)) {\n        return;\n      }\n\n      const hasDirectTextNode = Array.from(div.childNodes).some(\n        (node) =>\n          node instanceof HTMLImageElement ||\n          (node.nodeType === Node.TEXT_NODE && node.textContent?.trim()) ||\n          (node.nodeType === Node.ELEMENT_NODE && node.nodeName === \"BR\")\n      );\n\n      if (hasDirectTextNode) {\n        const encoder = document.createElement(\"div\");\n\n        for (let i = 0; i < div.childNodes.length; i++) {\n          const headChild = div.childNodes[i];\n          if (\n            headChild instanceof HTMLImageElement ||\n            headChild.nodeType === Node.TEXT_NODE ||\n            (headChild.nodeType === Node.ELEMENT_NODE && headChild.nodeName === \"BR\")\n          ) {\n            const textBlock = document.createElement(\"mt-text-block\");\n            let content = \"\";\n            while (i < div.childNodes.length) {\n              const child = div.childNodes[i];\n              if (child.nodeType === Node.TEXT_NODE) {\n                encoder.textContent = child.textContent;\n                content += encoder.innerHTML;\n              } else if (child.nodeName === \"BR\") {\n                content += \"<br>\";\n              } else if (child instanceof HTMLImageElement) {\n                content += child.outerHTML;\n              } else {\n                break;\n              }\n              child.remove();\n            }\n            div.insertBefore(textBlock, div.childNodes[i]);\n            textBlock.innerHTML = content;\n            i--;\n          }\n        }\n      }\n    });\n\n  return body.innerHTML;\n};\n\nexport const normalizeHTML = (html: string): string => {\n  if (/^<p[^>]*><\\/p>$/i.test(html)) {\n    return \"\";\n  }\n\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, \"text/html\");\n\n  doc.body.querySelectorAll(\"mt-text-block\").forEach((textBlock) => {\n    const parent = textBlock.parentNode;\n    if (!parent) return;\n\n    while (textBlock.firstChild) {\n      parent.insertBefore(textBlock.firstChild, textBlock);\n    }\n    textBlock.remove();\n  });\n\n  doc.body.querySelectorAll(`[textalign=\"\"]`).forEach((element) => {\n    element.removeAttribute(\"textalign\");\n  });\n\n  doc.body.querySelectorAll(`[data-mt-indent]`).forEach((element) => {\n    element.removeAttribute(\"data-mt-indent\");\n  });\n\n  doc.body\n    .querySelectorAll<HTMLElement>(`[data-mt-rich-text-editor-event-attributes]`)\n    .forEach((element) => {\n      const eventAttrs = JSON.parse(\n        element.dataset.mtRichTextEditorEventAttributes ?? \"{}\"\n      ) as Record<string, string>;\n      Object.entries(eventAttrs).forEach(([key, value]) => {\n        element.setAttribute(key, value);\n      });\n      element.removeAttribute(\"data-mt-rich-text-editor-event-attributes\");\n    });\n\n  doc.body\n    .querySelectorAll<HTMLElement>(`[data-mt-rich-text-editor-content]`)\n    .forEach((element) => {\n      element.innerHTML = element.getAttribute(\"data-mt-rich-text-editor-content\") ?? \"\";\n      element.removeAttribute(\"data-mt-rich-text-editor-content\");\n    });\n\n  doc.body.querySelectorAll(\"mt-rich-text-editor-script\").forEach((script) => {\n    const element = document.createElement(\"script\");\n    element.textContent = script.textContent;\n    Array.from(script.attributes).forEach((attr) => {\n      element.setAttribute(attr.name, attr.value);\n    });\n    script.parentNode?.replaceChild(element, script);\n  });\n\n  const res = doc.body.innerHTML;\n  if (/^<p[^>]*><\\/p>$/i.test(res)) {\n    return \"\";\n  }\n  return res;\n};\n\nexport const cssSize = (value: string): string => {\n  if (value !== \"0\" && /^-?(\\d+|\\d*\\.\\d+)$/.test(value)) {\n    return `${value}px`;\n  }\n  return value;\n};\n","export const WINDOW_EDGE_MARGIN = 10;\n","<script lang=\"ts\">\n  import { WINDOW_EDGE_MARGIN } from \"../constant\";\n  const { title }: { title: string } = $props();\n  let tooltipEl: HTMLDivElement;\n  $effect(() => {\n    if (tooltipEl) {\n      const rect = tooltipEl.getBoundingClientRect();\n      if (rect.x < WINDOW_EDGE_MARGIN) {\n        tooltipEl.style.left = `calc(50% + ${-(rect.x - WINDOW_EDGE_MARGIN)}px)`;\n      } else if (rect.x + rect.width > window.innerWidth - WINDOW_EDGE_MARGIN) {\n        tooltipEl.style.left = `calc(50% - ${rect.x + rect.width - window.innerWidth + WINDOW_EDGE_MARGIN}px)`;\n      }\n    }\n  });\n</script>\n\n<div bind:this={tooltipEl} id=\"mt-rich-text-editor-tooltip\" class=\"mt-rich-text-editor-tooltip\">\n  {title}\n</div>\n\n<style>\n  div {\n    position: absolute;\n    top: 110%;\n    left: 50%;\n    transform: translateX(-50%);\n    color: white;\n    background: black;\n    padding: 4px;\n    border-radius: 5px;\n    width: max-content;\n    white-space: nowrap;\n    font-size: 90%;\n    z-index: 2000;\n  }\n</style>\n","import { mount, unmount } from \"svelte\";\nimport Tooltip from \"./Tooltip.svelte\";\n\nconst DEFAULT_SHOW_DELAY = 1000; // time before tooltip appears in undisplayed state (ms)\nconst ACTIVE_SHOW_DELAY = 10; // time before tooltip appears once displayed (ms)\nconst RESET_DELAY = 1000; // time until display state is reset after mouse release (ms)\n\nlet showCount = 0;\nlet showDelay = DEFAULT_SHOW_DELAY;\nlet resetTimerId: ReturnType<typeof setTimeout> | undefined;\n\nexport const tooltip = (node: HTMLElement, title?: string) => {\n  if (window.matchMedia(\"(any-hover: none)\").matches) {\n    return;\n  }\n\n  let tooltipMount: ReturnType<typeof mount> | undefined;\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  if (title) {\n    node.title = title;\n  } else {\n    title = node.title;\n  }\n  if (!title) {\n    return;\n  }\n  node.addEventListener(\"mouseenter\", () => {\n    node.title = \"\";\n\n    clearTimeout(timerId);\n    timerId = setTimeout(() => {\n      if (tooltipMount) {\n        return;\n      }\n      node.setAttribute(\"aria-describedby\", \"mt-rich-text-editor-tooltip\");\n      tooltipMount = mount(Tooltip, {\n        target: node,\n        props: {\n          title,\n        },\n      });\n      showCount++;\n      showDelay = ACTIVE_SHOW_DELAY;\n    }, showDelay);\n  });\n  node.addEventListener(\"mouseleave\", () => {\n    node.title = title;\n\n    clearTimeout(timerId);\n\n    if (!tooltipMount) {\n      return;\n    }\n    node.removeAttribute(\"aria-describedby\");\n    unmount(tooltipMount);\n    tooltipMount = undefined;\n    showCount--;\n\n    clearTimeout(resetTimerId);\n    resetTimerId = setTimeout(() => {\n      if (showCount === 0) {\n        showDelay = DEFAULT_SHOW_DELAY;\n      }\n    }, RESET_DELAY);\n  });\n};\n","import type { Editor as TiptapEditor } from \"@tiptap/core\";\nimport type { Editor } from \"../../editor\";\n\nexport class PanelItemElement<\n  Options extends Record<string, unknown> = Record<string, unknown>,\n> extends HTMLElement {\n  get shadowRoot(): ShadowRoot {\n    return super.shadowRoot!;\n  }\n\n  editor: Editor | undefined;\n  options: Options = {} as Options;\n  get tiptap(): TiptapEditor | undefined {\n    return this.editor?.tiptap;\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n  }\n\n  onEditorInit(editor: Editor, options: Options) {\n    this.editor = editor;\n    this.options = options;\n  }\n\n  onEditorUpdate() {}\n}\n","export default \"/* Default color of buttons on iOS is different from others, unify them. */\\nbutton:not(:disabled) {\\n  color: inherit;\\n}\\n\\n:host > button {\\n  width: 34px;\\n  height: 34px;\\n  background: none;\\n  border: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer;\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 4px;\\n  font-size: 14px;\\n\\n  & svg {\\n    width: 24px;\\n    height: 24px;\\n  }\\n\\n  &:not(.is-disabled):hover,\\n  &.is-active {\\n    background: #dee0e2;\\n  }\\n\\n  &.button-with-text-label {\\n    width: auto;\\n\\n    & svg + span {\\n      padding: 0 0.25rem;\\n    }\\n  }\\n}\\n\\n:host > button.tooltip-disabled .mt-rich-text-editor-tooltip {\\n  display: none;\\n}\\n\\n:host > button:disabled *:not(.mt-rich-text-editor-tooltip) {\\n  opacity: 0.5;\\n  cursor: default;\\n}\\n\"","import { tooltip } from \"../../tooltip\";\nimport { PanelItemElement } from \"../../ui/item/element\";\nimport css from \"./element.css?raw\";\n\nconst toolbarItemStyle = document.createElement(\"style\");\ntoolbarItemStyle.textContent = css;\n\n/**\n * Base class for toolbar item\n *\n * @example\n *\n *  customElements.define(\n *    \"mt-rich-text-editor-toolbar-item-myitem\",\n *    class extends ToolbarItemElement {\n *      constructor() {\n *        super();\n *        const button = document.createElement(\"button\");\n *        button.title = \"My Item\";\n *        button.textContent = \"My Item\";\n *        this.shadowRoot.appendChild(button);\n *      }\n *\n *      connectedCallback() {\n *        super.connectedCallback();\n *        this.addEventListener(\"click\", () => {\n *          this.tiptap?.commands.insertContent(\"<p>Hello</p>\");\n *        });\n *      }\n *    }\n *  );\n */\nexport class ToolbarItemElement<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Options extends Record<string, any> = Record<string, unknown>,\n> extends PanelItemElement<Options> {\n  constructor() {\n    super();\n    this.shadowRoot.appendChild(toolbarItemStyle.cloneNode(true));\n  }\n\n  connectedCallback() {\n    const button = this.shadowRoot.querySelector(\"button\");\n    if (button) {\n      tooltip(button);\n    }\n  }\n}\n","import { PanelItemElement } from \"../../ui/item/element\";\n\n/**\n * Base class for statusbar item\n *\n * @example\n *\n *  customElements.define(\n *    \"mt-rich-text-editor-statusbar-item-myitem\",\n *    class extends StatusbarItemElement {\n *      constructor() {\n *        super();\n *        const button = document.createElement(\"button\");\n *        button.textContent = \"My Item\";\n *        this.shadowRoot.appendChild(button);\n *      }\n *\n *      onEditorUpdate() {\n *        const tiptap = this.tiptap;\n *        // update the item\n *      }\n *    }\n *  );\n */\nexport class StatusbarItemElement<\n  Options extends Record<string, unknown> = Record<string, unknown>,\n> extends PanelItemElement<Options> {}\n","export default \":host > button {\\n  background: none;\\n  border: none;\\n  padding: 0;\\n  margin: 0;\\n  display: flex;\\n  align-items: center;\\n  font-size: initial;\\n  padding: 5px 10px 5px 30px;\\n  width: 100%;\\n\\n  & svg {\\n    width: 12px;\\n    height: 12px;\\n  }\\n\\n  &:not(.is-disabled):hover {\\n    background: #dee0e2;\\n  }\\n}\\n\"","import { PanelItemElement } from \"../../ui/item/element\";\nimport { preprocessHTML } from \"../../util/html\";\nimport css from \"./element.css?raw\";\n\nconst pasteMenuItemStyle = document.createElement(\"style\");\npasteMenuItemStyle.textContent = css;\n\nexport const PasteMenuItemPriority = {\n  Default: 1,\n  High: 2,\n} as const;\nexport type PasteMenuItemPriorityValue =\n  (typeof PasteMenuItemPriority)[keyof typeof PasteMenuItemPriority];\n\n/**\n * Base class for paste menu item\n *\n * @example\n *\n *  customElements.define(\n *    \"mt-rich-text-editor-paste-menu-item-myitem\",\n *    class extends PasteMenuItemElement {\n *      constructor() {\n *        super();\n *        const button = document.createElement(\"button\");\n *        button.textContent = \"My Paste Item\";\n *        this.shadowRoot.appendChild(button);\n *      }\n *\n *      isEditorItemAvailable() {\n *        return /^https?:\\/\\//.test(this.content?.plainText);\n *      }\n *\n *      async onEditorPaste() {\n *        this.insertContent(this.content?.plainText);\n *      }\n *\n *      connectedCallback() {\n *        this.addEventListener('click', () => {\n *          this.onEditorPaste();\n *        });\n *      }\n *    }\n *  );\n */\nexport abstract class PasteMenuItemElement<\n  Options extends Record<string, unknown> = Record<string, unknown>,\n> extends PanelItemElement<Options> {\n  static Priority = PasteMenuItemPriority;\n  public content?:\n    | {\n        plainText: string;\n        htmlDocument: Document | null;\n        targetDomNode: HTMLElement | Text | null;\n        clipboardData: DataTransfer;\n        transaction: (cb: () => void | Promise<void>) => void;\n      }\n    | undefined = undefined;\n\n  constructor() {\n    super();\n    this.shadowRoot.appendChild(pasteMenuItemStyle.cloneNode(true));\n  }\n\n  isEditorItemAvailable():\n    | boolean\n    | PasteMenuItemPriorityValue\n    | Promise<boolean | PasteMenuItemPriorityValue> {\n    return Promise.resolve(PasteMenuItemPriority.Default);\n  }\n\n  onEditorSetPasteContent(content: {\n    plainText: string;\n    htmlDocument: Document | null;\n    targetDomNode: HTMLElement | Text | null;\n    clipboardData: DataTransfer;\n    transaction: (cb: () => void | Promise<void>) => void;\n  }) {\n    this.content = content;\n  }\n\n  insertContent(content: string) {\n    this.content?.transaction(() => {\n      this.tiptap?.chain().undo().focus().run();\n      this.tiptap?.commands.insertContent(\n        typeof content === \"string\" ? preprocessHTML(content) : content\n      );\n    });\n    this.parentElement?.dispatchEvent(new Event(\"paste-menu-item-applied\"));\n  }\n\n  onEditorPaste() {\n    throw new Error(\"onEditorPaste is not implemented\");\n  }\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace svelteHTML {\n    interface HTMLAttributes {\n      \"onpaste-menu-item-applied\"?: (event: CustomEvent) => void;\n    }\n  }\n}\n","export default \":host > button {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  background: none;\\n  border: none;\\n  margin: 0;\\n  padding: 0;\\n  cursor: pointer;\\n  font-size: inherit;\\n\\n  .icon:not(svg) {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 4px;\\n  }\\n}\\n\"","import { PanelItemElement } from \"../../ui/item/element\";\nimport css from \"./element.css?raw\";\n\n/**\n * QuickActionItemElement\n */\nconst quickActionItemStyle = document.createElement(\"style\");\nquickActionItemStyle.textContent = css;\nexport class QuickActionItemElement extends PanelItemElement {\n  aliases?: string[];\n  variant?: string;\n\n  constructor() {\n    super();\n    this.shadowRoot.appendChild(quickActionItemStyle.cloneNode(true));\n  }\n\n  connectedCallback() {\n    this.variant = this.dataset.mtRichTextEditorPanelItemVariant;\n  }\n\n  insertContent(content: string) {\n    this.tiptap\n      ?.chain()\n      .focus()\n      .selectParentNode()\n      // .deleteSelection()\n      .insertContent(content)\n      .run();\n  }\n}\n"],"names":["PUBLIC_VERSION","_a","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_IS_CONTROLLED","EACH_IS_ANIMATED","EACH_ITEM_IMMUTABLE","PROPS_IS_IMMUTABLE","PROPS_IS_RUNES","PROPS_IS_UPDATED","PROPS_IS_BINDABLE","PROPS_IS_LAZY_INITIAL","TRANSITION_IN","TRANSITION_OUT","TRANSITION_GLOBAL","TEMPLATE_FRAGMENT","TEMPLATE_USE_IMPORT_NODE","HYDRATION_START","HYDRATION_START_ELSE","HYDRATION_END","HYDRATION_ERROR","UNINITIALIZED","NAMESPACE_HTML","NAMESPACE_SVG","DEV","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","HEAD_EFFECT","EFFECT_HAS_DERIVED","EFFECT_IS_UPDATING","STATE_SYMBOL","LEGACY_PROPS","LOADING_ATTR_SYMBOL","is_array","index_of","array_from","object_keys","define_property","get_descriptor","get_descriptors","object_prototype","array_prototype","get_prototype_of","is_extensible","is_function","thing","noop","run","fn","run_all","arr","i","request_idle_callback","cb","micro_tasks","idle_tasks","run_micro_tasks","tasks","run_idle_tasks","queue_micro_task","queue_idle_task","flush_tasks","equals","value","safe_not_equal","a","b","safe_equals","effect_in_teardown","rune","effect_in_unowned_derived","effect_orphan","effect_update_depth_exceeded","hydration_failed","props_invalid_value","key","state_descriptors_fixed","state_prototype_fixed","state_unsafe_mutation","legacy_mode_flag","tracing_mode_flag","enable_legacy_mode_flag","proxy","prev","prototype","sources","is_proxied_array","version","source","reaction","active_reaction","with_parent","previous_reaction","set_active_reaction","result","_","prop","descriptor","e.state_descriptors_fixed","s","set","target","ls","n","update_version","receiver","exists","v","get","has","active_effect","other_s","own_keys","e.state_prototype_fixed","signal","d","get_proxied_value","is","old_values","stack","state","push_reaction_value","mutable_source","initial_value","immutable","component_context","should_proxy","untracking","is_runes","reaction_sources","e.state_unsafe_mutation","new_value","internal_set","old_value","is_destroying_effect","increment_write_version","mark_reactions","untracked_writes","set_untracked_writes","status","reactions","runes","length","flags","set_signal_status","schedule_effect","derived","parent_derived","user_derived","derived_safe_equal","destroy_derived_effects","effects","destroy_effect","get_derived_parent_effect","parent","execute_derived","prev_active_effect","set_active_effect","update_reaction","update_derived","skip_reaction","hydration_mismatch","location","hydrating","set_hydrating","hydrate_node","set_hydrate_node","node","w.hydration_mismatch","hydrate_next","get_next_sibling","reset","next","count","remove_nodes","depth","data","$window","is_firefox","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","text_prototype","create_text","get_first_child","child","is_text","text","first_child","fragment","first","sibling","next_sibling","last_sibling","type","clear_text_content","is_throwing_error","is_flushing","last_scheduled_effect","is_updating_effect","set_is_destroying_effect","queued_root_effects","effect","set_reaction_sources","new_deps","skipped_deps","write_version","read_version","check_dirtiness","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","propagate_error","error","current","should_rethrow_error","handle_error","previous_effect","schedule_possible_effect_self_invalidation","root","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","previous_reaction_sources","previous_component_context","previous_untracking","set_component_context","deps","remove_reactions","remove_reaction","index","new_length","start_index","update_effect","was_updating_effect","destroy_block_effect_children","destroy_effect_children","execute_effect_teardown","teardown","dep","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","flush_count","root_effects","collected_effects","process_effects","flush_queued_effects","unlink_effect","is_branch","is_skippable_branch","previous_active_reaction","flushSync","is_derived","untrack","STATUS_MASK","deep_read_state","deep_read","visited","proto","descriptors","validate_effect","e.effect_orphan","e.effect_in_unowned_derived","e.effect_in_teardown","push_effect","parent_effect","parent_last","create_effect","sync","push","e","inert","user_effect","defer","context","user_pre_effect","render_effect","effect_root","component_root","options","fulfil","pause_effect","legacy_pre_effect","token","legacy_pre_effect_reset","template_effect","thunks","deriveds","block","branch","previously_destroying_effect","remove_dom","removed","end","transitions","transition","callback","pause_children","run_out_transitions","remaining","check","local","transparent","resume_effect","resume_children","lifecycle_outside_component","name","getContext","get_or_init_context_map","setContext","props","ctx","pop","component","context_stack_item","component_effects","component_effect","get_parent_context","context_map","is_capture_event","DELEGATED_EVENTS","is_delegated","event_name","ATTRIBUTE_ALIASES","normalize_attribute","PASSIVE_EVENTS","is_passive_event","RAW_TEXT_ELEMENTS","is_raw_text_element","autofocus","dom","body","remove_textarea_child","listening_to_form_reset","add_form_reset_listener","evt","without_reactive_context","listen_to_event_and_reset_event","element","event","handler","on_reset","all_registered_events","root_event_handles","create_event","target_handler","handle_event_propagation","capture","passive","delegate","events","handler_element","owner_document","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","create_fragment_from_html","html","elem","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","clone","t","comment","frag","anchor","append","should_intro","set_should_intro","set_text","str","mount","_mount","hydrate","was_hydrating","previous_hydrate_node","instance","e.hydration_failed","document_listeners","Component","intro","registered_events","event_handle","unmount","anchor_node","mounted_components","append_styles","css","style","is_bound_this","bound_value","element_or_component","bind_this","update","get_value","get_parts","old_parts","parts","is_store_binding","capture_store_binding","previous_is_store_binding","has_destroyed_component_ctx","current_value","fallback","bindable","lazy","is_store_sub","prop_value","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","getter","derived_getter","legacy_parent","mutation","from_child","inner_current_value","parent_value","child_value","createClassComponent","Svelte4Component","_events","_instance","__privateAdd","add_source","__privateSet","__privateGet","args","SvelteElement","$$componentCtor","$$slots","use_shadow_dom","__publicField","listener","unsub","create_slot","slot","existing_slots","get_custom_elements_slots","attribute","get_custom_element_value","attribute_value","attr","_oldValue","newValue","attribute_name","props_definition","transform","create_custom_element","slots","exports","extend","Class","property","isEditable","preprocessHTML","script","div","encoder","headChild","textBlock","normalizeHTML","doc","eventAttrs","res","cssSize","WINDOW_EDGE_MARGIN","title","$.prop","$$props","tooltipEl","$.user_effect","rect","$.bind_this","$$value","DEFAULT_SHOW_DELAY","ACTIVE_SHOW_DELAY","RESET_DELAY","showCount","showDelay","resetTimerId","tooltip","tooltipMount","timerId","Tooltip","PanelItemElement","editor","css$2","toolbarItemStyle","ToolbarItemElement","button","StatusbarItemElement","css$1","pasteMenuItemStyle","PasteMenuItemPriority","PasteMenuItemElement","_b","quickActionItemStyle","QuickActionItemElement"],"mappings":";;;;;;;AAOO,MAAMA,KAAiB;AAP9B,IAAAC;ACEI,OAAO,SAAW,SAEnBA,KAAA,OAAO,aAAP,OAAO,WAAa,CAAE,IAAE,MAAxBA,GAAwB,IAAM,oBAAI,IAAG,IAAI,IAAID,EAAc;ACJlD,MAACE,KAAqB,GACrBC,KAAsB,GAEtBC,KAAqB,GACrBC,KAAmB,GACnBC,KAAsB,IAEtBC,KAAqB,GACrBC,KAAiB,GACjBC,KAAmB,GACnBC,KAAoB,GACpBC,KAAwB,IAExBC,KAAgB,GAChBC,KAAiB,GACjBC,KAAoB,GAEpBC,KAAoB,GACpBC,KAA2B,GAE3BC,KAAkB,KAElBC,KAAuB,MACvBC,KAAgB,KAChBC,KAAkB,CAAA,GAKlBC,IAAgB,OAAM,GAMtBC,KAAiB,gCACjBC,KAAgB,8BCpC7BC,KAAe,ICAFC,IAAU,GACVC,KAAS,GACTC,KAAgB,GAChBC,KAAe,IACfC,IAAgB,IAChBC,KAAc,IACdC,KAAkB,KAClBC,IAAU,KACVC,KAAe,KACfC,IAAQ,MACRC,IAAQ,MACRC,KAAc,MACdC,KAAQ,MACRC,KAAY,OACZC,KAAa,OAEbC,KAAqB,OAErBC,KAAsB,KAAK,IAE3BC,KAAc,KAAK,IACnBC,KAAqB,KAAK,IAC1BC,KAAqB,KAAK,IAE1BC,IAAe,OAAO,QAAQ,GAE9BC,KAAe,OAAO,cAAc,GACpCC,KAAsB,OAAO,EAAE;ACzBlC,IAACC,KAAW,MAAM,SACjBC,KAAW,MAAM,UAAU,SAC3BC,KAAa,MAAM,MACnBC,KAAc,OAAO,MACrBC,KAAkB,OAAO,gBACzBC,KAAiB,OAAO,0BACxBC,KAAkB,OAAO,2BACzBC,KAAmB,OAAO,WAC1BC,KAAkB,MAAM,WACxBC,KAAmB,OAAO,gBAC1BC,KAAgB,OAAO;AAM3B,SAASC,GAAYC,GAAO;AAClC,SAAO,OAAOA,KAAU;AACzB;AAEY,MAACC,KAAO,MAAM;AAAA;AAenB,SAASC,GAAIC,GAAI;AACvB,SAAOA,EAAI;AACZ;AAGO,SAASC,GAAQC,GAAK;AAC5B,WAASC,IAAI,GAAGA,IAAID,EAAI,QAAQC;AAC/B,IAAAD,EAAIC,CAAC,EAAG;AAEV;AC3CA,MAAMC,KACL,OAAO,sBAAwB,MAC5B,CAA2BC,MAAO,WAAWA,GAAI,CAAC,IAClD;AAGJ,IAAIC,KAAc,CAAE,GAGhBC,KAAa,CAAE;AAEnB,SAASC,KAAkB;AAC1B,MAAIC,IAAQH;AACZ,EAAAA,KAAc,CAAE,GAChBL,GAAQQ,CAAK;AACd;AAEA,SAASC,KAAiB;AACzB,MAAID,IAAQF;AACZ,EAAAA,KAAa,CAAE,GACfN,GAAQQ,CAAK;AACd;AAKO,SAASE,GAAiBX,GAAI;AACpC,EAAIM,GAAY,WAAW,KAC1B,eAAeE,EAAe,GAG/BF,GAAY,KAAKN,CAAE;AACpB;AAKO,SAASY,GAAgBZ,GAAI;AACnC,EAAIO,GAAW,WAAW,KACzBH,GAAsBM,EAAc,GAGrCH,GAAW,KAAKP,CAAE;AACnB;AAKO,SAASa,KAAc;AAC7B,EAAIP,GAAY,SAAS,KACxBE,GAAiB,GAGdD,GAAW,SAAS,KACvBG,GAAgB;AAElB;ACzDO,SAASI,GAAOC,GAAO;AAC7B,SAAOA,MAAU,KAAK;AACvB;AAOO,SAASC,GAAeC,GAAGC,GAAG;AACpC,SAAOD,KAAKA,IACTC,KAAKA,IACLD,MAAMC,KAAMD,MAAM,QAAQ,OAAOA,KAAM,YAAa,OAAOA,KAAM;AACrE;AAYO,SAASE,GAAYJ,GAAO;AAClC,SAAO,CAACC,GAAeD,GAAO,KAAK,CAAC;AACrC;ACmGO,SAASK,GAAmBC,GAAM;AAOvC,QAAM,IAAI,MAAM,yCAAyC;AAE3D;AAMO,SAASC,KAA4B;AAO1C,QAAM,IAAI,MAAM,gDAAgD;AAElE;AAOO,SAASC,GAAcF,GAAM;AAOlC,QAAM,IAAI,MAAM,oCAAoC;AAEtD;AAMO,SAASG,KAA+B;AAO7C,QAAM,IAAI,MAAM,mDAAmD;AAErE;AAMO,SAASC,KAAmB;AAOjC,QAAM,IAAI,MAAM,uCAAuC;AAEzD;AAsCO,SAASC,GAAoBC,GAAK;AAOvC,QAAM,IAAI,MAAM,0CAA0C;AAE5D;AAsCO,SAASC,KAA0B;AAOxC,QAAM,IAAI,MAAM,8CAA8C;AAEhE;AAMO,SAASC,KAAwB;AAOtC,QAAM,IAAI,MAAM,4CAA4C;AAE9D;AAMO,SAASC,KAAwB;AAOtC,QAAM,IAAI,MAAM,4CAA4C;AAE9D;AClUU,IAACC,KAAmB,IACnBC,KAAoB;AAExB,SAASC,KAA0B;AACzC,EAAAF,KAAmB;AACpB;ACuBO,SAASG,GAAMnB,GAAOoB,GAAM;AAElC,MAAI,OAAOpB,KAAU,YAAYA,MAAU,QAAQjC,KAAgBiC;AAClE,WAAOA;AAGR,QAAMqB,IAAY1C,GAAiBqB,CAAK;AAExC,MAAIqB,MAAc5C,MAAoB4C,MAAc3C;AACnD,WAAOsB;AAIR,MAAIsB,IAAU,oBAAI,IAAK,GACnBC,IAAmBrD,GAAS8B,CAAK,GACjCwB,IAAUC,EAAO,CAAC,GAGlBC,IAAWC,GAMXC,IAAc,CAAC3C,MAAO;AACzB,QAAI4C,IAAoBF;AACxB,IAAAG,EAAoBJ,CAAQ;AAG5B,QAAIK;AAQH,WAAAA,IAAS9C,EAAI,GAGd6C,EAAoBD,CAAiB,GAC9BE;AAAA,EACP;AAED,SAAIR,KAGHD,EAAQ,IAAI,UAAUG;AAAAA;AAAAA,IAA6BzB,EAAO;AAAA,EAAa,CAAC,GA4BlE,IAAI;AAAA;AAAA,IAA0BA;AAAA,IAAQ;AAAA,MAC5C,eAAegC,GAAGC,GAAMC,GAAY;AACnC,SACC,EAAE,WAAWA,MACbA,EAAW,iBAAiB,MAC5BA,EAAW,eAAe,MAC1BA,EAAW,aAAa,OAMxBC,GAA2B;AAG5B,YAAIC,IAAId,EAAQ,IAAIW,CAAI;AAExB,eAAIG,MAAM,UACTA,IAAIR,EAAY,MAAMH,EAAOS,EAAW,KAAY,CAAC,GACrDZ,EAAQ,IAAIW,GAAMG,CAAC,KAEnBC;AAAA,UACCD;AAAA,UACAR,EAAY,MAAMT,GAAMe,EAAW,KAAK,CAAC;AAAA,QACzC,GAGK;AAAA,MACP;AAAA,MAED,eAAeI,GAAQL,GAAM;AAC5B,YAAIG,IAAId,EAAQ,IAAIW,CAAI;AAExB,YAAIG,MAAM;AACT,UAAIH,KAAQK,KACXhB,EAAQ;AAAA,YACPW;AAAA,YACAL,EAAY,MAAMH,EAAOlF,CAAoB,CAAC;AAAA,UAC9C;AAAA,aAEI;AAGN,cAAIgF,KAAoB,OAAOU,KAAS,UAAU;AACjD,gBAAIM;AAAA;AAAA,cAAoCjB,EAAQ,IAAI,QAAQ;AAAA,eACxDkB,IAAI,OAAOP,CAAI;AAEnB,YAAI,OAAO,UAAUO,CAAC,KAAKA,IAAID,EAAG,KACjCF,EAAIE,GAAIC,CAAC;AAAA,UAEf;AACI,UAAAH,EAAID,GAAG7F,CAAa,GACpBkG,GAAejB,CAAO;AAAA,QAC1B;AAEG,eAAO;AAAA,MACP;AAAA,MAED,IAAIc,GAAQL,GAAMS,GAAU;AVjK9B,YAAAvH;AUsKG,YAAI8G,MAASlE;AACZ,iBAAOiC;AAGR,YAAIoC,IAAId,EAAQ,IAAIW,CAAI,GACpBU,IAASV,KAAQK;AAQrB,YALIF,MAAM,WAAc,CAACO,MAAUxH,IAAAoD,GAAe+D,GAAQL,CAAI,MAA3B,QAAA9G,EAA8B,cAChEiH,IAAIR,EAAY,MAAMH,EAAON,GAAMwB,IAASL,EAAOL,CAAI,IAAI1F,CAAa,CAAQ,CAAC,GACjF+E,EAAQ,IAAIW,GAAMG,CAAC,IAGhBA,MAAM,QAAW;AACpB,cAAIQ,IAAIC,EAAIT,CAAC;AAiBb,iBAAOQ,MAAMrG,IAAgB,SAAYqG;AAAA,QAC7C;AAEG,eAAO,QAAQ,IAAIN,GAAQL,GAAMS,CAAQ;AAAA,MACzC;AAAA,MAED,yBAAyBJ,GAAQL,GAAM;AACtC,YAAIC,IAAa,QAAQ,yBAAyBI,GAAQL,CAAI;AAE9D,YAAIC,KAAc,WAAWA,GAAY;AACxC,cAAIE,IAAId,EAAQ,IAAIW,CAAI;AACxB,UAAIG,MAAGF,EAAW,QAAQW,EAAIT,CAAC;AAAA,QACnC,WAAcF,MAAe,QAAW;AACpC,cAAIT,IAASH,EAAQ,IAAIW,CAAI,GACzBjC,IAAQyB,KAAA,gBAAAA,EAAQ;AAEpB,cAAIA,MAAW,UAAazB,MAAUzD;AACrC,mBAAO;AAAA,cACN,YAAY;AAAA,cACZ,cAAc;AAAA,cACd,OAAAyD;AAAA,cACA,UAAU;AAAA,YACV;AAAA,QAEN;AAEG,eAAOkC;AAAA,MACP;AAAA,MAED,IAAII,GAAQL,GAAM;AVlOpB,YAAA9G;AUuOG,YAAI8G,MAASlE;AACZ,iBAAO;AAGR,YAAIqE,IAAId,EAAQ,IAAIW,CAAI,GACpBa,IAAOV,MAAM,UAAaA,EAAE,MAAM7F,KAAkB,QAAQ,IAAI+F,GAAQL,CAAI;AAEhF,YACCG,MAAM,UACLW,MAAkB,SAAS,CAACD,MAAO3H,IAAAoD,GAAe+D,GAAQL,CAAI,MAA3B,QAAA9G,EAA8B,WACjE;AACD,UAAIiH,MAAM,WACTA,IAAIR,EAAY,MAAMH,EAAOqB,IAAM3B,GAAMmB,EAAOL,CAAI,CAAC,IAAI1F,CAAoB,CAAC,GAC9E+E,EAAQ,IAAIW,GAAMG,CAAC;AAGpB,cAAIpC,IAAQ6C,EAAIT,CAAC;AACjB,cAAIpC,MAAUzD;AACb,mBAAO;AAAA,QAEZ;AAEG,eAAOuG;AAAA,MACP;AAAA,MAED,IAAIR,GAAQL,GAAMjC,GAAO0C,GAAU;AVhQrC,YAAAvH;AUiQG,YAAIiH,IAAId,EAAQ,IAAIW,CAAI,GACpBa,IAAMb,KAAQK;AAGlB,YAAIf,KAAoBU,MAAS;AAChC,mBAAS7C,IAAIY,GAAOZ;AAAA,UAAmCgD,EAAG,GAAGhD,KAAK,GAAG;AACpE,gBAAI4D,IAAU1B,EAAQ,IAAIlC,IAAI,EAAE;AAChC,YAAI4D,MAAY,SACfX,EAAIW,GAASzG,CAAa,IAChB6C,KAAKkD,MAIfU,IAAUpB,EAAY,MAAMH,EAAOlF,CAAoB,CAAC,GACxD+E,EAAQ,IAAIlC,IAAI,IAAI4D,CAAO;AAAA,UAEjC;AAOG,QAAIZ,MAAM,UACL,CAACU,MAAO3H,IAAAoD,GAAe+D,GAAQL,CAAI,MAA3B,QAAA9G,EAA8B,cACzCiH,IAAIR,EAAY,MAAMH,EAAO,MAAgB,CAAC,GAC9CY;AAAA,UACCD;AAAA,UACAR,EAAY,MAAMT,GAAMnB,CAAK,CAAC;AAAA,QAC9B,GACDsB,EAAQ,IAAIW,GAAMG,CAAC,MAGpBU,IAAMV,EAAE,MAAM7F,GACd8F;AAAA,UACCD;AAAA,UACAR,EAAY,MAAMT,GAAMnB,CAAK,CAAC;AAAA,QAC9B;AAYF,YAAIkC,IAAa,QAAQ,yBAAyBI,GAAQL,CAAI;AAO9D,YAJIC,KAAA,QAAAA,EAAY,OACfA,EAAW,IAAI,KAAKQ,GAAU1C,CAAK,GAGhC,CAAC8C,GAAK;AAKT,cAAIvB,KAAoB,OAAOU,KAAS,UAAU;AACjD,gBAAIM;AAAA;AAAA,cAAoCjB,EAAQ,IAAI,QAAQ;AAAA,eACxDkB,IAAI,OAAOP,CAAI;AAEnB,YAAI,OAAO,UAAUO,CAAC,KAAKA,KAAKD,EAAG,KAClCF,EAAIE,GAAIC,IAAI,CAAC;AAAA,UAEnB;AAEI,UAAAC,GAAejB,CAAO;AAAA,QAC1B;AAEG,eAAO;AAAA,MACP;AAAA,MAED,QAAQc,GAAQ;AACf,QAAAO,EAAIrB,CAAO;AAEX,YAAIyB,IAAW,QAAQ,QAAQX,CAAM,EAAE,OAAO,CAAC1B,MAAQ;AACtD,cAAIa,IAASH,EAAQ,IAAIV,CAAG;AAC5B,iBAAOa,MAAW,UAAaA,EAAO,MAAMlF;AAAA,QAChD,CAAI;AAED,iBAAS,CAACqE,GAAKa,CAAM,KAAKH;AACzB,UAAIG,EAAO,MAAMlF,KAAiB,EAAEqE,KAAO0B,MAC1CW,EAAS,KAAKrC,CAAG;AAInB,eAAOqC;AAAA,MACP;AAAA,MAED,iBAAiB;AAChBC,QAAAA,GAAyB;AAAA,MAC5B;AAAA,IACA;AAAA,EAAE;AACF;AAMA,SAAST,GAAeU,GAAQC,IAAI,GAAG;AACtC,EAAAf,EAAIc,GAAQA,EAAO,IAAIC,CAAC;AACzB;AAKO,SAASC,GAAkBrD,GAAO;AACxC,MAAI;AACH,QAAIA,MAAU,QAAQ,OAAOA,KAAU,YAAYjC,KAAgBiC;AAClE,aAAOA,EAAMjC,CAAY;AAAA,EAE5B,QAAS;AAAA,EAQT;AAEC,SAAOiC;AACR;AAMO,SAASsD,GAAGpD,GAAGC,GAAG;AACxB,SAAO,OAAO,GAAGkD,GAAkBnD,CAAC,GAAGmD,GAAkBlD,CAAC,CAAC;AAC5D;AC/VO,MAAMoD,KAAa,oBAAI,IAAK;AAgB5B,SAAS9B,GAAOmB,GAAGY,GAAO;AAEhC,MAAIL,IAAS;AAAA,IACZ,GAAG;AAAA;AAAA,IACH,GAAAP;AAAA,IACA,WAAW;AAAA,IACX,QAAA7C;AAAA,IACA,IAAI;AAAA,IACJ,IAAI;AAAA,EACJ;AAOD,SAAOoD;AACR;AAOO,SAASM,EAAMb,GAAGY,GAAO;AAC/B,QAAMpB,IAAIX,GAAOmB,CAAQ;AAEzB,SAAAc,GAAoBtB,CAAC,GAEdA;AACR;AAAA;AASO,SAASuB,GAAeC,GAAeC,IAAY,IAAO;AX/FjE,MAAA1I;AWgGC,QAAMiH,IAAIX,GAAOmC,CAAa;AAC9B,SAAKC,MACJzB,EAAE,SAAShC,KAKRY,MAAoB8C,MAAsB,QAAQA,EAAkB,MAAM,UAC5E3I,IAAA2I,EAAkB,GAAE,MAApB3I,EAAoB,IAAM,CAAA,IAAI,KAAKiH,CAAC,GAG/BA;AACR;AAsBO,SAASC,EAAIZ,GAAQzB,GAAO+D,IAAe,IAAO;AACxD,EACCpC,MAAoB,QACpB,CAACqC,KACDC,GAAU,MACTtC,EAAgB,KAAKhF,IAAUG,SAAmB,KACnD,EAACoH,KAAA,QAAAA,EAAkB,SAASzC,OAE5B0C,GAAyB;AAG1B,MAAIC,IAAYL,IAAe5C,GAAMnB,CAAa,IAAIA;AAEtD,SAAOqE,GAAa5C,GAAQ2C,CAAS;AACtC;AAQO,SAASC,GAAa5C,GAAQzB,GAAO;AAC3C,MAAI,CAACyB,EAAO,OAAOzB,CAAK,GAAG;AAC1B,QAAIsE,IAAY7C,EAAO;AAEvB,IAAI8C,KACHhB,GAAW,IAAI9B,GAAQzB,CAAK,IAE5BuD,GAAW,IAAI9B,GAAQ6C,CAAS,GAGjC7C,EAAO,IAAIzB,GACXyB,EAAO,KAAK+C,GAAyB,GAUrCC,GAAehD,GAAQpE,CAAK,GAO3B4G,GAAU,KACVlB,MAAkB,SACjBA,EAAc,IAAI3F,OAAW,MAC7B2F,EAAc,KAAKhG,IAAgBC,SAAkB,MAElD0H,MAAqB,OACxBC,GAAqB,CAAClD,CAAM,CAAC,IAE7BiD,EAAiB,KAAKjD,CAAM;AAAA,EAoBhC;AAEC,SAAOzB;AACR;AAoCA,SAASyE,GAAetB,GAAQyB,GAAQ;AACvC,MAAIC,IAAY1B,EAAO;AACvB,MAAI0B,MAAc;AAKlB,aAHIC,IAAQb,GAAU,GAClBc,IAASF,EAAU,QAEd,IAAI,GAAG,IAAIE,GAAQ,KAAK;AAChC,UAAIrD,IAAWmD,EAAU,CAAC,GACtBG,IAAQtD,EAAS;AAGrB,OAAKsD,IAAQ3H,OAAW,MAGpB,CAACyH,KAASpD,MAAaqB,MAQ3BkC,EAAkBvD,GAAUkD,CAAM,IAG7BI,KAAS5H,IAAQF,QAAc,OAC9B8H,IAAQrI,OAAa,IACzB8H;AAAA;AAAA,QAAuC/C;AAAA,QAAWpE;AAAA,MAAW,IAE7D4H;AAAA;AAAA,QAAuCxD;AAAA,MAAU;AAAA,IAGrD;AACA;AAAA;AC9PO,SAASyD,GAAQlG,GAAI;AAC3B,MAAI+F,IAAQrI,IAAUU,GAClB+H,IACHzD,MAAoB,SAASA,EAAgB,IAAIhF,OAAa;AAAA;AAAA,IACnCgF;AAAA,MACxB;AAEJ,SAAIoB,MAAkB,QAASqC,MAAmB,SAASA,EAAe,IAAIlI,OAAa,IAC1F8H,KAAS9H,IAIT6F,EAAc,KAAKlF,IAIL;AAAA,IACd,KAAKiG;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,QAAA/D;AAAA,IACA,GAAGiF;AAAA,IACH,IAAA/F;AAAA,IACA,WAAW;AAAA,IACX,IAAI;AAAA,IACJ;AAAA;AAAA,MAAqB;AAAA;AAAA,IACrB,IAAI;AAAA,IACJ,QAAQmG,KAAkBrC;AAAA,EAC1B;AAOF;AAOO,SAASsC,GAAapG,GAAI;AAChC,QAAMmE,IAAI,gBAAA+B,GAAQlG,CAAE;AAEpB,SAAAyE,GAAoBN,CAAC,GAEdA;AACR;AAAA;AAQO,SAASkC,GAAmBrG,GAAI;AACtC,QAAMkE,IAAS,gBAAAgC,GAAQlG,CAAE;AACzB,SAAAkE,EAAO,SAAS/C,IACT+C;AACR;AAMO,SAASoC,GAAwBJ,GAAS;AAChD,MAAIK,IAAUL,EAAQ;AAEtB,MAAIK,MAAY,MAAM;AACrB,IAAAL,EAAQ,UAAU;AAElB,aAAS/F,IAAI,GAAGA,IAAIoG,EAAQ,QAAQpG,KAAK;AACxC,MAAAqG;AAAA;AAAA,QAAsCD,EAAQpG,CAAC;AAAA,MAAG;AAAA,EAErD;AACA;AAaA,SAASsG,GAA0BP,GAAS;AAE3C,WADIQ,IAASR,EAAQ,QACdQ,MAAW,QAAM;AACvB,SAAKA,EAAO,IAAIhJ,OAAa;AAC5B;AAAA;AAAA,QAA8BgJ;AAAA;AAE/B,IAAAA,IAASA,EAAO;AAAA,EAClB;AACC,SAAO;AACR;AAOA,SAASC,GAAgBT,GAAS;AACjC,MAAInF,GACA6F,IAAqB9C;AAEzB,EAAA+C,EAAkBJ,GAA0BP,CAAO,CAAC;AAoBnD,MAAI;AACH,IAAAI,GAAwBJ,CAAO,GAC/BnF,IAAQ+F,GAAgBZ,CAAO;AAAA,EAClC,UAAY;AACT,IAAAW,EAAkBD,CAAkB;AAAA,EACvC;AAGC,SAAO7F;AACR;AAMO,SAASgG,GAAeb,GAAS;AACvC,MAAInF,IAAQ4F,GAAgBT,CAAO,GAC/BP,KACFqB,MAAkBd,EAAQ,IAAIjI,OAAa,MAAMiI,EAAQ,SAAS,OAAO7H,KAAcF;AAEzF,EAAA6H,EAAkBE,GAASP,CAAM,GAE5BO,EAAQ,OAAOnF,CAAK,MACxBmF,EAAQ,IAAInF,GACZmF,EAAQ,KAAKX,GAAyB;AAExC;AC9FO,SAAS0B,GAAmBC,GAAU;AAI3C,UAAQ,KAAK,yCAAyC;AAExD;AC/EU,IAACC,IAAY;AAGhB,SAASC,GAAcrG,GAAO;AACpC,EAAAoG,IAAYpG;AACb;AASU,IAACsG;AAGJ,SAASC,EAAiBC,GAAM;AACtC,MAAIA,MAAS;AACZC,UAAAA,GAAsB,GAChBnK;AAGP,SAAQgK,IAAeE;AACxB;AAEO,SAASE,KAAe;AAC9B,SAAOH;AAAA;AAAA,IAA8C,gBAAAI,EAAiBL,CAAY;AAAA,EAAG;AACtF;AAGO,SAASM,GAAMJ,GAAM;AAC3B,MAAKJ,GAGL;AAAA,QAAI,gBAAAO,EAAiBL,CAAY,MAAM;AACtCG,YAAAA,GAAsB,GAChBnK;AAGP,IAAAgK,IAAeE;AAAA;AAChB;AAYO,SAASK,GAAKC,IAAQ,GAAG;AAC/B,MAAIV,GAAW;AAId,aAHIhH,IAAI0H,GACJN,IAAOF,GAEJlH;AACN,MAAAoH;AAAA,MAAoC,gBAAAG,EAAiBH,CAAI;AAG1D,IAAAF,IAAeE;AAAA,EACjB;AACA;AAKO,SAASO,KAAe;AAI9B,WAHIC,IAAQ,GACRR,IAAOF,OAEE;AACZ,QAAIE,EAAK,aAAa,GAAG;AACxB,UAAIS;AAAA;AAAA,QAA+BT,EAAM;AAAA;AAEzC,UAAIS,MAAS5K,IAAe;AAC3B,YAAI2K,MAAU,EAAG,QAAOR;AACxB,QAAAQ,KAAS;AAAA,MACT,MAAM,EAAIC,MAAS9K,MAAmB8K,MAAS7K,QAC/C4K,KAAS;AAAA,IAEb;AAEE,QAAIH;AAAA;AAAA,MAAoC,gBAAAF,EAAiBH,CAAI;AAAA;AAC7D,IAAAA,EAAK,OAAQ,GACbA,IAAOK;AAAA,EACT;AACA;AChGO,IAAIK,IAMAC,IAGPC,IAEAC;AAMG,SAASC,KAAkB;AACjC,MAAIJ,OAAY,QAIhB;AAAA,IAAAA,KAAU,QAEVC,KAAa,UAAU,KAAK,UAAU,SAAS;AAE/C,QAAII,IAAoB,QAAQ,WAC5BC,IAAiB,KAAK,WACtBC,IAAiB,KAAK;AAG1B,IAAAL,KAAqB7I,GAAeiJ,GAAgB,YAAY,EAAE,KAElEH,KAAsB9I,GAAeiJ,GAAgB,aAAa,EAAE,KAEhE5I,GAAc2I,CAAiB,MAGlCA,EAAkB,UAAU,QAE5BA,EAAkB,cAAc,QAEhCA,EAAkB,eAAe,MAEjCA,EAAkB,UAAU,QAE5BA,EAAkB,MAAM,SAGrB3I,GAAc6I,CAAc,MAE/BA,EAAe,MAAM;AAAA;AASvB;AAMO,SAASC,GAAY1H,IAAQ,IAAI;AACvC,SAAO,SAAS,eAAeA,CAAK;AACrC;AAAA;AAQO,SAAS2H,GAAgBnB,GAAM;AACrC,SAAOY,GAAmB,KAAKZ,CAAI;AACpC;AAAA;AAQO,SAASG,EAAiBH,GAAM;AACtC,SAAOa,GAAoB,KAAKb,CAAI;AACrC;AASO,SAASoB,GAAMpB,GAAMqB,GAAS;AACpC,MAAI,CAACzB;AACJ,WAAO,gBAAAuB,GAAgBnB,CAAI;AAG5B,MAAIoB;AAAA;AAAA,IAAqC,gBAAAD,GAAgBrB,CAAY;AAAA;AAGrE,MAAIsB,MAAU;AACb,IAAAA,IAAQtB,EAAa,YAAYoB,IAAa;AAAA,WACpCG,KAAWD,EAAM,aAAa,GAAG;AAC3C,QAAIE,IAAOJ,GAAa;AACxB,WAAAE,KAAA,QAAAA,EAAO,OAAOE,IACdvB,EAAiBuB,CAAI,GACdA;AAAA,EACT;AAEC,SAAAvB,EAAiBqB,CAAK,GACfA;AACR;AAQO,SAASG,GAAYC,GAAUH,GAAS;AAC9C,MAAI,CAACzB,GAAW;AAEf,QAAI6B;AAAA;AAAA,MAAyC,gBAAAN;AAAA;AAAA,QAAqCK;AAAA;;AAGlF,WAAIC,aAAiB,WAAWA,EAAM,SAAS,KAAW,gBAAAtB,EAAiBsB,CAAK,IAEzEA;AAAA,EACT;AAYC,SAAO3B;AACR;AASO,SAAS4B,GAAQ1B,GAAMM,IAAQ,GAAGe,IAAU,IAAO;AACzD,MAAIM,IAAe/B,IAAYE,IAAeE;AAG9C,WAFI4B,GAEGtB;AACN,IAAAsB,IAAeD,GACfA;AAAA,IAA4C,gBAAAxB,EAAiBwB,CAAY;AAG1E,MAAI,CAAC/B;AACJ,WAAO+B;AAGR,MAAIE,IAAOF,KAAA,gBAAAA,EAAc;AAIzB,MAAIN,KAAWQ,MAAS,GAAG;AAC1B,QAAIP,IAAOJ,GAAa;AAIxB,WAAIS,MAAiB,OACpBC,KAAA,QAAAA,EAAc,MAAMN,KAEpBK,EAAa,OAAOL,CAAI,GAEzBvB,EAAiBuB,CAAI,GACdA;AAAA,EACT;AAEC,SAAAvB,EAAiB4B,CAAY;AAAA,EACOA;AACrC;AAOO,SAASG,GAAmB9B,GAAM;AACxC,EAAAA,EAAK,cAAc;AACpB;AC/JA,IAAI+B,KAAoB,IAEpBC,KAAc,IAGdC,KAAwB,MAExBC,KAAqB,IAEdnE,KAAuB;AAG3B,SAASoE,GAAyB3I,GAAO;AAC/C,EAAAuE,KAAuBvE;AACxB;AAKA,IAAI4I,KAAsB,CAAE;AAOlB,IAACjH,IAAkB,MAElBqC,IAAa;AAGjB,SAASlC,EAAoBJ,GAAU;AAC7C,EAAAC,IAAkBD;AACnB;AAGU,IAACqB,IAAgB;AAGpB,SAAS+C,EAAkB+C,GAAQ;AACzC,EAAA9F,IAAgB8F;AACjB;AAOO,IAAI3E,IAAmB;AAKvB,SAAS4E,GAAqBxH,GAAS;AAC7C,EAAA4C,IAAmB5C;AACpB;AAGO,SAASoC,GAAoB1D,GAAO;AAC1C,EAAI2B,MAAoB,QAAQA,EAAgB,IAAI7D,OAC/CoG,MAAqB,OACxB4E,GAAqB,CAAC9I,CAAK,CAAC,IAE5BkE,EAAiB,KAAKlE,CAAK;AAG9B;AAQA,IAAI+I,IAAW,MAEXC,IAAe,GAORtE,IAAmB;AAGvB,SAASC,GAAqB3E,GAAO;AAC3C,EAAA0E,IAAmB1E;AACpB;AAMA,IAAIiJ,KAAgB,GAGhBC,KAAe,GAIRjD,IAAgB;AAUpB,SAASzB,KAA0B;AACzC,SAAO,EAAEyE;AACV;AAQO,SAASE,GAAgBzH,GAAU;AhBvK1C,MAAAvG;AgBwKC,MAAI6J,IAAQtD,EAAS;AAErB,OAAKsD,IAAQ3H,OAAW;AACvB,WAAO;AAGR,OAAK2H,IAAQ1H,QAAiB,GAAG;AAChC,QAAI8L,IAAe1H,EAAS,MACxB2H,KAAcrE,IAAQ9H,OAAa;AAEvC,QAAIkM,MAAiB,MAAM;AAC1B,UAAIhK,GACAkK,GACAC,KAAmBvE,IAAQ7H,QAAkB,GAC7CqM,IAAuBH,KAActG,MAAkB,QAAQ,CAACkD,GAChElB,IAASqE,EAAa;AAI1B,UAAIG,KAAmBC,GAAsB;AAC5C,YAAIrE;AAAA;AAAA,UAAkCzD;AAAA,WAClCiE,IAASR,EAAQ;AAErB,aAAK/F,IAAI,GAAGA,IAAI2F,GAAQ3F;AACvB,UAAAkK,IAAaF,EAAahK,CAAC,IAKvBmK,KAAmB,GAACpO,IAAAmO,KAAA,gBAAAA,EAAY,cAAZ,QAAAnO,EAAuB,SAASgK,SACtDmE,EAAW,cAAXA,EAAW,YAAc,KAAI,KAAKnE,CAAO;AAI5C,QAAIoE,MACHpE,EAAQ,KAAKhI,KAKVqM,KAAwB7D,MAAW,SAASA,EAAO,IAAIzI,OAAa,MACvEiI,EAAQ,KAAKjI;AAAA,MAElB;AAEG,WAAKkC,IAAI,GAAGA,IAAI2F,GAAQ3F;AAOvB,YANAkK,IAAaF,EAAahK,CAAC,GAEvB+J;AAAA;AAAA,UAAwCG;AAAA,aAC3CtD;AAAA;AAAA,UAAuCsD;AAAA,QAAY,GAGhDA,EAAW,KAAK5H,EAAS;AAC5B,iBAAO;AAAA,IAGZ;AAIE,KAAI,CAAC2H,KAAetG,MAAkB,QAAQ,CAACkD,MAC9ChB,EAAkBvD,GAAUtE,CAAK;AAAA,EAEpC;AAEC,SAAO;AACR;AAMA,SAASqM,GAAgBC,GAAOb,GAAQ;AAIvC,WAFIc,IAAUd,GAEPc,MAAY,QAAM;AACxB,SAAKA,EAAQ,IAAI1M,QAAqB;AACrC,UAAI;AAEH,QAAA0M,EAAQ,GAAGD,CAAK;AAChB;AAAA,MACJ,QAAW;AAEP,QAAAC,EAAQ,KAAK1M;AAAA,MACjB;AAGE,IAAA0M,IAAUA,EAAQ;AAAA,EACpB;AAEC,QAAApB,KAAoB,IACdmB;AACP;AAKA,SAASE,GAAqBf,GAAQ;AACrC,UACEA,EAAO,IAAIrL,QAAe,MAC1BqL,EAAO,WAAW,SAASA,EAAO,OAAO,IAAI5L,QAAqB;AAErE;AAYO,SAAS4M,GAAaH,GAAOb,GAAQiB,GAAiBhG,GAAmB;AAC/E,MAAIyE,IAAmB;AAKtB,QAJIuB,MAAoB,SACvBvB,KAAoB,KAGjBqB,GAAqBf,CAAM;AAC9B,YAAMa;AAGP;AAAA,EACF;AAEC,EAAII,MAAoB,SACvBvB,KAAoB;AAQnB;AACD,IAAAkB,GAAgBC,GAAOb,CAAM;AAC7B;AAAA,EACF;AA4DA;AAOA,SAASkB,GAA2C5G,GAAQ0F,GAAQmB,IAAO,IAAM;AAChF,MAAInF,IAAY1B,EAAO;AACvB,MAAI0B,MAAc;AAElB,aAASzF,IAAI,GAAGA,IAAIyF,EAAU,QAAQzF,KAAK;AAC1C,UAAIsC,IAAWmD,EAAUzF,CAAC;AAE1B,MAAI8E,KAAA,QAAAA,EAAkB,SAASf,QAE1BzB,EAAS,IAAI/E,OAAa,IAC9BoN;AAAA;AAAA,QAAmErI;AAAA,QAAWmH;AAAA,QAAQ;AAAA,MAAK,IACjFA,MAAWnH,MACjBsI,IACH/E,EAAkBvD,GAAUrE,CAAK,KACtBqE,EAAS,IAAItE,OAAW,KACnC6H,EAAkBvD,GAAUpE,EAAW,GAExC4H;AAAA;AAAA,QAAuCxD;AAAA,MAAU;AAAA,IAEpD;AACA;AAOO,SAASqE,GAAgBrE,GAAU;AhBlZ1C,MAAAvG;AgBmZC,MAAI8O,IAAgBlB,GAChBmB,IAAwBlB,GACxBmB,IAA4BzF,GAC5B7C,IAAoBF,GACpByI,IAAyBnE,GACzBoE,IAA4BnG,GAC5BoG,IAA6BxG,GAC7ByG,IAAsBvG,GAEtBgB,IAAQtD,EAAS;AAErB,EAAAqH;AAAA,EAA0C,MAC1CC,IAAe,GACftE,IAAmB,MACnBuB,KACEjB,IAAQ9H,OAAa,MAAM8G,KAAc,CAAC0E,MAAsB/G,MAAoB,OACtFA,KAAmBqD,KAASjI,IAAgBC,SAAkB,IAAI0E,IAAW,MAE7EwC,IAAmB,MACnBsG,GAAsB9I,EAAS,GAAG,GAClCsC,IAAa,IACbkF,MAEAxH,EAAS,KAAK5D;AAEd,MAAI;AACH,QAAIiE;AAAA;AAAA,UAAqCL,EAAS,IAAK;AAAA,OACnD+I,IAAO/I,EAAS;AAEpB,QAAIqH,MAAa,MAAM;AACtB,UAAI3J;AAIJ,UAFAsL,GAAiBhJ,GAAUsH,CAAY,GAEnCyB,MAAS,QAAQzB,IAAe;AAEnC,aADAyB,EAAK,SAASzB,IAAeD,EAAS,QACjC3J,IAAI,GAAGA,IAAI2J,EAAS,QAAQ3J;AAChC,UAAAqL,EAAKzB,IAAe5J,CAAC,IAAI2J,EAAS3J,CAAC;AAAA;AAGpC,QAAAsC,EAAS,OAAO+I,IAAO1B;AAGxB,UAAI,CAAC9C;AACJ,aAAK7G,IAAI4J,GAAc5J,IAAIqL,EAAK,QAAQrL;AACvC,YAACjE,IAAAsP,EAAKrL,CAAC,GAAE,cAARjE,EAAQ,YAAc,CAAE,IAAE,KAAKuG,CAAQ;AAAA,IAG1C,MAAM,CAAI+I,MAAS,QAAQzB,IAAeyB,EAAK,WAC/CC,GAAiBhJ,GAAUsH,CAAY,GACvCyB,EAAK,SAASzB;AAMf,QACC/E,GAAU,KACVS,MAAqB,QACrB,CAACV,KACDyG,MAAS,SACR/I,EAAS,KAAK/E,IAAUW,KAAcD,QAAY;AAEnD,WAAK+B,IAAI,GAAGA;AAAA,MAA6BsF,EAAkB,QAAQtF;AAClE,QAAA2K;AAAA,UACCrF,EAAiBtF,CAAC;AAAA;AAAA,UACKsC;AAAA,QACvB;AAQH,WAAIG,MAAsB,SACzBqH,MAEIxE,MAAqB,SACpByF,MAA8B,OACjCA,IAA4BzF,IAE5ByF,EAA0B,KAAK;AAAA,IAA4BzF,CAAiB,KAKxE3C;AAAA,EACT,UAAW;AACT,IAAAgH,IAAWkB,GACXjB,IAAekB,GACfxF,IAAmByF,GACnBxI,IAAkBE,GAClBoE,IAAgBmE,GAChBlG,IAAmBmG,GACnBG,GAAsBF,CAA0B,GAChDtG,IAAauG,GAEb7I,EAAS,KAAK5D;AAAA,EAChB;AACA;AAQA,SAAS6M,GAAgBxH,GAAQmG,GAAY;AAC5C,MAAIzE,IAAYyE,EAAW;AAC3B,MAAIzE,MAAc,MAAM;AACvB,QAAI+F,IAAQzM,GAAS,KAAK0G,GAAW1B,CAAM;AAC3C,QAAIyH,MAAU,IAAI;AACjB,UAAIC,IAAahG,EAAU,SAAS;AACpC,MAAIgG,MAAe,IAClBhG,IAAYyE,EAAW,YAAY,QAGnCzE,EAAU+F,CAAK,IAAI/F,EAAUgG,CAAU,GACvChG,EAAU,IAAK;AAAA,IAEnB;AAAA,EACA;AAGC,EACCA,MAAc,SACbyE,EAAW,IAAI3M,OAAa;AAAA;AAAA;AAAA,GAI5BoM,MAAa,QAAQ,CAACA,EAAS,SAASO,CAAU,OAEnDrE,EAAkBqE,GAAYhM,EAAW,IAGpCgM,EAAW,KAAKpM,IAAUC,SAAmB,MACjDmM,EAAW,KAAKnM,KAGjBoI;AAAA;AAAA,IAAiD+D;AAAA,EAAY,GAC7DoB;AAAA;AAAA,IAA0CpB;AAAA,IAAa;AAAA,EAAC;AAE1D;AAOO,SAASoB,GAAiBvH,GAAQ2H,GAAa;AACrD,MAAI1B,IAAejG,EAAO;AAC1B,MAAIiG,MAAiB;AAErB,aAAShK,IAAI0L,GAAa1L,IAAIgK,EAAa,QAAQhK;AAClD,MAAAuL,GAAgBxH,GAAQiG,EAAahK,CAAC,CAAC;AAEzC;AAMO,SAAS2L,GAAclC,GAAQ;AACrC,MAAI7D,IAAQ6D,EAAO;AAEnB,OAAK7D,IAAQxH,QAAe,GAI5B;AAAA,IAAAyH,EAAkB4D,GAAQzL,CAAK;AAE/B,QAAI0M,IAAkB/G,GAClBuH,IAA6BxG,GAC7BkH,IAAsBtC;AAE1B,IAAA3F,IAAgB8F,GAChBH,KAAqB;AAOrB,QAAI;AACH,OAAK1D,IAAQlI,QAAkB,IAC9BmO,GAA8BpC,CAAM,IAEpCqC,GAAwBrC,CAAM,GAG/BsC,GAAwBtC,CAAM;AAC9B,UAAIuC,IAAWrF,GAAgB8C,CAAM;AACrC,MAAAA,EAAO,WAAW,OAAOuC,KAAa,aAAaA,IAAW,MAC9DvC,EAAO,KAAKI;AAEZ,UAAIwB,IAAO5B,EAAO,MAMpBwC;AAAE,MAAI3O,MAAOuE,MAAsB4H,EAAO,IAAIxL;AAAA,IAc5C,SAAQqM,GAAO;AACf,MAAAG,GAAaH,GAAOb,GAAQiB,GAAiBQ,KAA8BzB,EAAO,GAAG;AAAA,IACvF,UAAW;AACT,MAAAH,KAAqBsC,GACrBjI,IAAgB+G;AAAA,IAKlB;AAAA;AACA;AAWA,SAASwB,KAAsB;AAC9B,MAAI;AACHC,IAAAA,GAAgC;AAAA,EAChC,SAAQ7B,GAAO;AASf,QAAIjB,OAA0B;AAU5B,MAAAoB,GAAaH,GAAOjB,IAAuB,IAAU;AAAA;AAMtD,YAAMiB;AAAA,EAET;AACA;AAEA,SAAS8B,KAA4B;AACpC,MAAIR,IAAsBtC;AAE1B,MAAI;AACH,QAAI+C,IAAc;AAGlB,SAFA/C,KAAqB,IAEdE,GAAoB,SAAS,KAAG;AACtC,MAAI6C,MAAgB,OACnBH,GAAqB;AAGtB,UAAII,IAAe9C,IACf7D,IAAS2G,EAAa;AAE1B,MAAA9C,KAAsB,CAAE;AAExB,eAASxJ,IAAI,GAAGA,IAAI2F,GAAQ3F,KAAK;AAChC,YAAIuM,IAAoBC,GAAgBF,EAAatM,CAAC,CAAC;AACvD,QAAAyM,GAAqBF,CAAiB;AAAA,MAC1C;AAAA,IACA;AAAA,EACA,UAAW;AACT,IAAAnD,KAAc,IACdE,KAAqBsC,GAErBvC,KAAwB,MAIxBlF,GAAW,MAAO;AAAA,EACpB;AACA;AAMA,SAASsI,GAAqBrG,GAAS;AACtC,MAAIT,IAASS,EAAQ;AACrB,MAAIT,MAAW;AAEf,aAAS3F,IAAI,GAAGA,IAAI2F,GAAQ3F,KAAK;AAChC,UAAIyJ,IAASrD,EAAQpG,CAAC;AAEtB,WAAKyJ,EAAO,KAAKrL,KAAYD,SAAY;AACxC,YAAI;AACH,UAAI4L,GAAgBN,CAAM,MACzBkC,GAAclC,CAAM,GAOhBA,EAAO,SAAS,QAAQA,EAAO,UAAU,QAAQA,EAAO,gBAAgB,SACvEA,EAAO,aAAa,OAEvBiD,GAAcjD,CAAM,IAGpBA,EAAO,KAAK;AAAA,QAIf,SAAQa,GAAO;AACf,UAAAG,GAAaH,GAAOb,GAAQ,MAAMA,EAAO,GAAG;AAAA,QAChD;AAAA,IAEA;AACA;AAMO,SAAS3D,GAAgB/B,GAAQ;AACvC,EAAKqF,OACJA,KAAc,IACd,eAAegD,EAAyB;AAKzC,WAFI3C,IAAUJ,KAAwBtF,GAE/B0F,EAAO,WAAW,QAAM;AAC9B,IAAAA,IAASA,EAAO;AAChB,QAAI7D,IAAQ6D,EAAO;AAEnB,SAAK7D,KAAShI,KAAcD,QAAoB,GAAG;AAClD,WAAKiI,IAAQ5H,OAAW,EAAG;AAC3B,MAAAyL,EAAO,KAAKzL;AAAA,IACf;AAAA,EACA;AAEC,EAAAwL,GAAoB,KAAKC,CAAM;AAChC;AAYA,SAAS+C,GAAgB5B,GAAM;AAO9B,WALIxE,IAAU,CAAE,GAGZqD,IAASmB,GAENnB,MAAW,QAAM;AACvB,QAAI7D,IAAQ6D,EAAO,GACfkD,KAAa/G,KAASjI,IAAgBC,SAAkB,GACxDgP,IAAsBD,MAAc/G,IAAQ5H,OAAW;AAE3D,QAAI,CAAC4O,MAAwBhH,IAAQzH,QAAW,GAAG;AAClD,WAAKyH,IAAQpI,QAAY;AACxB,QAAA4I,EAAQ,KAAKqD,CAAM;AAAA,eACTkD;AACV,QAAAlD,EAAO,KAAKzL;AAAA,WACN;AAIN,YAAI6O,IAA2BtK;AAC/B,YAAI;AACH,UAAAA,IAAkBkH,GACdM,GAAgBN,CAAM,KACzBkC,GAAclC,CAAM;AAAA,QAErB,SAAQa,GAAO;AACf,UAAAG,GAAaH,GAAOb,GAAQ,MAAMA,EAAO,GAAG;AAAA,QACjD,UAAc;AACT,UAAAlH,IAAkBsK;AAAA,QACvB;AAAA,MACA;AAGG,UAAIrE,IAAQiB,EAAO;AAEnB,UAAIjB,MAAU,MAAM;AACnB,QAAAiB,IAASjB;AACT;AAAA,MACJ;AAAA,IACA;AAEE,QAAIjC,IAASkD,EAAO;AAGpB,SAFAA,IAASA,EAAO,MAETA,MAAW,QAAQlD,MAAW;AACpC,MAAAkD,IAASlD,EAAO,MAChBA,IAASA,EAAO;AAAA,EAEnB;AAEC,SAAOH;AACR;AASO,SAAS0G,GAAUjN,GAAI;AAC7B,MAAI8C;AAUJ,OAFAjC,GAAa,GAEN8I,GAAoB,SAAS;AACnC,IAAAJ,KAAc,IACdgD,GAA2B,GAC3B1L,GAAa;AAGd;AAAA;AAAA,IAAyBiC;AAAA;AAC1B;AAkBO,SAASc,EAAIM,GAAQ;AAC3B,MAAI6B,IAAQ7B,EAAO,GACfgJ,KAAcnH,IAAQrI,OAAa;AAOvC,MAAIgF,MAAoB,QAAQ,CAACqC;AAChC,QAAI,EAACE,KAAA,QAAAA,EAAkB,SAASf,KAAS;AACxC,UAAIsH,IAAO9I,EAAgB;AAC3B,MAAIwB,EAAO,KAAK+F,OACf/F,EAAO,KAAK+F,IAIRH,MAAa,QAAQ0B,MAAS,QAAQA,EAAKzB,CAAY,MAAM7F,IAChE6F,MACUD,MAAa,OACvBA,IAAW,CAAC5F,CAAM,KACR,CAAC8C,KAAiB,CAAC8C,EAAS,SAAS5F,CAAM,MAIrD4F,EAAS,KAAK5F,CAAM;AAAA,IAGzB;AAAA,aAEEgJ;AAAA,EACwBhJ,EAAQ,SAAS;AAAA,EACjBA,EAAQ,YAAY,MAC3C;AACD,QAAIgC;AAAA;AAAA,MAAkChC;AAAA,OAClCwC,IAASR,EAAQ;AAErB,IAAIQ,MAAW,SAASA,EAAO,IAAIzI,OAAa,MAI/CiI,EAAQ,KAAKjI;AAAA,EAEhB;AAgCC,SA9BIiP,MACHhH;AAAA,EAAkChC,GAE9BgG,GAAgBhE,CAAO,KAC1Ba,GAAeb,CAAO,IA0BpBZ,MAAwBhB,GAAW,IAAIJ,CAAM,IACzCI,GAAW,IAAIJ,CAAM,IAGtBA,EAAO;AACf;AA6EO,SAASiJ,GAAQnN,GAAI;AAC3B,MAAIsL,IAAsBvG;AAC1B,MAAI;AACH,WAAAA,IAAa,IACN/E,EAAI;AAAA,EACb,UAAW;AACT,IAAA+E,IAAauG;AAAA,EACf;AACA;AAEA,MAAM8B,KAAc;AAOb,SAASpH,EAAkB9B,GAAQyB,GAAQ;AACjD,EAAAzB,EAAO,IAAKA,EAAO,IAAIkJ,KAAezH;AACvC;AA0BO,SAAS0H,GAAgBtM,GAAO;AACtC,MAAI,SAAOA,KAAU,YAAY,CAACA,KAASA,aAAiB;AAI5D,QAAIjC,KAAgBiC;AACnB,MAAAuM,GAAUvM,CAAK;AAAA,aACL,CAAC,MAAM,QAAQA,CAAK;AAC9B,eAASY,KAAOZ,GAAO;AACtB,cAAMiC,IAAOjC,EAAMY,CAAG;AACtB,QAAI,OAAOqB,KAAS,YAAYA,KAAQlE,KAAgBkE,KACvDsK,GAAUtK,CAAI;AAAA,MAElB;AAAA;AAEA;AASO,SAASsK,GAAUvM,GAAOwM,IAAU,oBAAI,IAAG,GAAI;AACrD,MACC,OAAOxM,KAAU,YACjBA,MAAU;AAAA,EAEV,EAAEA,aAAiB,gBACnB,CAACwM,EAAQ,IAAIxM,CAAK,GACjB;AACD,IAAAwM,EAAQ,IAAIxM,CAAK,GAGbA,aAAiB,QACpBA,EAAM,QAAS;AAEhB,aAASY,KAAOZ;AACf,UAAI;AACH,QAAAuM,GAAUvM,EAAMY,CAAG,GAAG4L,CAAO;AAAA,MAC7B,QAAW;AAAA,MAEf;AAEE,UAAMC,IAAQ9N,GAAiBqB,CAAK;AACpC,QACCyM,MAAU,OAAO,aACjBA,MAAU,MAAM,aAChBA,MAAU,IAAI,aACdA,MAAU,IAAI,aACdA,MAAU,KAAK,WACd;AACD,YAAMC,IAAclO,GAAgBiO,CAAK;AACzC,eAAS7L,KAAO8L,GAAa;AAC5B,cAAM7J,IAAM6J,EAAY9L,CAAG,EAAE;AAC7B,YAAIiC;AACH,cAAI;AACH,YAAAA,EAAI,KAAK7C,CAAK;AAAA,UACd,QAAW;AAAA,UAEjB;AAAA,MAEA;AAAA,IACA;AAAA,EACA;AACA;AC3kCO,SAAS2M,GAAgBrM,GAAM;AACrC,EAAIyC,MAAkB,QAAQpB,MAAoB,QACjDiL,GAAoB,GAGjBjL,MAAoB,SAASA,EAAgB,IAAIzE,OAAa,KAAK6F,MAAkB,QACxF8J,GAA6B,GAG1BtI,MACHuI,GAAyB;AAE3B;AAMA,SAASC,GAAYlE,GAAQmE,GAAe;AAC3C,MAAIC,IAAcD,EAAc;AAChC,EAAIC,MAAgB,OACnBD,EAAc,OAAOA,EAAc,QAAQnE,KAE3CoE,EAAY,OAAOpE,GACnBA,EAAO,OAAOoE,GACdD,EAAc,OAAOnE;AAEvB;AASA,SAASqE,GAAc7E,GAAMpJ,GAAIkO,GAAMC,IAAO,IAAM;AACnD,MAAIzH,IAAS5C,GAUT8F,IAAS;AAAA,IACZ,KAAK/E;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,IACb,WAAW;AAAA,IACX,GAAGuE,IAAOhL;AAAA,IACV,OAAO;AAAA,IACP,IAAA4B;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAA0G;AAAA,IACA,MAAM;AAAA,IACN,UAAU;AAAA,IACV,aAAa;AAAA,IACb,IAAI;AAAA,EACJ;AAMD,MAAIwH;AACH,QAAI;AACH,MAAApC,GAAclC,CAAM,GACpBA,EAAO,KAAKpL;AAAA,IACZ,SAAQ4P,GAAG;AACX,YAAA5H,EAAeoD,CAAM,GACfwE;AAAA,IACT;AAAA,MACQ,CAAIpO,MAAO,QACjBiG,GAAgB2D,CAAM;AAKvB,MAAIyE,IACHH,KACAtE,EAAO,SAAS,QAChBA,EAAO,UAAU,QACjBA,EAAO,gBAAgB,QACvBA,EAAO,aAAa,SACnBA,EAAO,KAAKhL,KAAqBZ,SAAsB;AAEzD,MAAI,CAACqQ,KAASF,MACTzH,MAAW,QACdoH,GAAYlE,GAAQlD,CAAM,GAIvBhE,MAAoB,SAASA,EAAgB,IAAIhF,OAAa,IAAG;AACpE,QAAIwI;AAAA;AAAA,MAAkCxD;AAAA;AACtC,KAACwD,EAAQ,YAARA,EAAQ,UAAY,KAAI,KAAK0D,CAAM;AAAA,EACvC;AAGC,SAAOA;AACR;AAaO,SAASuC,GAASnM,GAAI;AAC5B,QAAM4J,IAASqE,GAAcrQ,IAAe,MAAM,EAAK;AACvD,SAAAoI,EAAkB4D,GAAQzL,CAAK,GAC/ByL,EAAO,WAAW5J,GACX4J;AACR;AAMO,SAAS0E,GAAYtO,GAAI;AAC/B,EAAA0N,GAAyB;AAIzB,MAAIa,IACHzK,MAAkB,SACjBA,EAAc,IAAIhG,OAAmB,KACtC+G,MAAsB,QACtB,CAACA,EAAkB;AAQpB,MAAI0J,GAAO;AACV,QAAIC;AAAA;AAAA,MAA2C3J;AAAA;AAC/C,KAAC2J,EAAQ,MAARA,EAAQ,IAAM,CAAE,IAAE,KAAK;AAAA,MACvB,IAAAxO;AAAA,MACA,QAAQ8D;AAAA,MACR,UAAUpB;AAAA,IACb,CAAG;AAAA,EACH,OAAQ;AACN,QAAIwB,IAAS0F,GAAO5J,CAAE;AACtB,WAAOkE;AAAA,EACT;AACA;AAOO,SAASuK,GAAgBzO,GAAI;AACnC,SAAA0N,GAA6B,GAMtBgB,GAAc1O,CAAE;AACxB;AAYO,SAAS2O,GAAY3O,GAAI;AAC/B,QAAM4J,IAASqE,GAAclQ,IAAaiC,GAAI,EAAI;AAElD,SAAO,MAAM;AACZ,IAAAwG,EAAeoD,CAAM;AAAA,EACrB;AACF;AAOO,SAASgF,GAAe5O,GAAI;AAClC,QAAM4J,IAASqE,GAAclQ,IAAaiC,GAAI,EAAI;AAElD,SAAO,CAAC6O,IAAU,OACV,IAAI,QAAQ,CAACC,MAAW;AAC9B,IAAID,EAAQ,QACXE,GAAanF,GAAQ,MAAM;AAC1B,MAAApD,EAAeoD,CAAM,GACrBkF,EAAO,MAAS;AAAA,IACrB,CAAK,KAEDtI,EAAeoD,CAAM,GACrBkF,EAAO,MAAS;AAAA,EAEpB,CAAG;AAEH;AAMO,SAASlF,GAAO5J,GAAI;AAC1B,SAAOiO,GAActQ,IAAQqC,GAAI,EAAK;AACvC;AAOO,SAASgP,GAAkBxD,GAAMxL,GAAI;AAC3C,MAAIwO;AAAA;AAAA,IAAiD3J;AAAA,KAGjDoK,IAAQ,EAAE,QAAQ,MAAM,KAAK,GAAO;AACxC,EAAAT,EAAQ,EAAE,GAAG,KAAKS,CAAK,GAEvBA,EAAM,SAASP,GAAc,MAAM;AAKlC,IAJAlD,EAAM,GAIF,CAAAyD,EAAM,QAEVA,EAAM,MAAM,IACZ7L,EAAIoL,EAAQ,EAAE,IAAI,EAAI,GACtBrB,GAAQnN,CAAE;AAAA,EACZ,CAAE;AACF;AAEO,SAASkP,KAA0B;AACzC,MAAIV;AAAA;AAAA,IAAiD3J;AAAA;AAErD,EAAA6J,GAAc,MAAM;AACnB,QAAK9K,EAAI4K,EAAQ,EAAE,EAAE,GAGrB;AAAA,eAASS,KAAST,EAAQ,EAAE,IAAI;AAC/B,YAAI5E,IAASqF,EAAM;AAInB,SAAKrF,EAAO,IAAIzL,OAAW,KAC1B6H,EAAkB4D,GAAQvL,EAAW,GAGlC6L,GAAgBN,CAAM,KACzBkC,GAAclC,CAAM,GAGrBqF,EAAM,MAAM;AAAA,MACf;AAEE,MAAAT,EAAQ,EAAE,GAAG,IAAI;AAAA;AAAA,EACnB,CAAE;AACF;AAMO,SAASE,GAAc1O,GAAI;AACjC,SAAOiO,GAAcrQ,IAAeoC,GAAI,EAAI;AAC7C;AAOO,SAASmP,GAAgBnP,GAAIoP,IAAS,CAAA,GAAIjL,IAAI+B,IAAS;AAC7D,QAAMmJ,IAAWD,EAAO,IAAIjL,CAAC;AAS7B,SAAOmL,GARQ,MAAMtP,EAAG,GAAGqP,EAAS,IAAIzL,CAAG,CAAC,CAQzB;AACpB;AAMO,SAAS0L,GAAMtP,GAAI+F,IAAQ,GAAG;AACpC,SAAOkI,GAAcrQ,KAAgBC,KAAekI,GAAO/F,GAAI,EAAI;AACpE;AAMO,SAASuP,GAAOvP,GAAImO,IAAO,IAAM;AACvC,SAAOF,GAAcrQ,KAAgBE,GAAekC,GAAI,IAAMmO,CAAI;AACnE;AAKO,SAASjC,GAAwBtC,GAAQ;AAC/C,MAAIuC,IAAWvC,EAAO;AACtB,MAAIuC,MAAa,MAAM;AACtB,UAAMqD,IAA+BlK,IAC/B1C,IAAoBF;AAC1B,IAAAgH,GAAyB,EAAI,GAC7B7G,EAAoB,IAAI;AACxB,QAAI;AACH,MAAAsJ,EAAS,KAAK,IAAI;AAAA,IACrB,UAAY;AACT,MAAAzC,GAAyB8F,CAA4B,GACrD3M,EAAoBD,CAAiB;AAAA,IACxC;AAAA,EACA;AACA;AAOO,SAASqJ,GAAwB/H,GAAQuL,IAAa,IAAO;AACnE,MAAI7F,IAAS1F,EAAO;AAGpB,OAFAA,EAAO,QAAQA,EAAO,OAAO,MAEtB0F,MAAW,QAAM;AACvB,QAAIhC,IAAOgC,EAAO;AAElB,KAAKA,EAAO,IAAI7L,QAAiB,IAEhC6L,EAAO,SAAS,OAEhBpD,EAAeoD,GAAQ6F,CAAU,GAGlC7F,IAAShC;AAAA,EACX;AACA;AAMO,SAASoE,GAA8B9H,GAAQ;AAGrD,WAFI0F,IAAS1F,EAAO,OAEb0F,MAAW,QAAM;AACvB,QAAIhC,IAAOgC,EAAO;AAClB,KAAKA,EAAO,IAAI9L,OAAmB,KAClC0I,EAAeoD,CAAM,GAEtBA,IAAShC;AAAA,EACX;AACA;AAOO,SAASpB,EAAeoD,GAAQ6F,IAAa,IAAM;AACzD,MAAIC,IAAU;AAEd,OAAKD,MAAe7F,EAAO,IAAIjL,QAAiB,MAAMiL,EAAO,gBAAgB,MAAM;AAKlF,aAHIrC,IAAOqC,EAAO,aACd+F,IAAM/F,EAAO,WAEVrC,MAAS,QAAM;AAErB,UAAIK,IAAOL,MAASoI,IAAM;AAAA;AAAA,QAAoC,gBAAAjI,EAAiBH,CAAI;AAAA;AAEnF,MAAAA,EAAK,OAAQ,GACbA,IAAOK;AAAA,IACV;AAEE,IAAA8H,IAAU;AAAA,EACZ;AAEC,EAAAzD,GAAwBrC,GAAQ6F,KAAc,CAACC,CAAO,GACtDjE,GAAiB7B,GAAQ,CAAC,GAC1B5D,EAAkB4D,GAAQrL,EAAS;AAEnC,MAAIqR,IAAchG,EAAO;AAEzB,MAAIgG,MAAgB;AACnB,eAAWC,KAAcD;AACxB,MAAAC,EAAW,KAAM;AAInB,EAAA3D,GAAwBtC,CAAM;AAE9B,MAAIlD,IAASkD,EAAO;AAGpB,EAAIlD,MAAW,QAAQA,EAAO,UAAU,QACvCmG,GAAcjD,CAAM,GASrBA,EAAO,OACNA,EAAO,OACPA,EAAO,WACPA,EAAO,MACPA,EAAO,OACPA,EAAO,KACPA,EAAO,cACPA,EAAO,YACN;AACH;AAOO,SAASiD,GAAcjD,GAAQ;AACrC,MAAIlD,IAASkD,EAAO,QAChBzH,IAAOyH,EAAO,MACdhC,IAAOgC,EAAO;AAElB,EAAIzH,MAAS,SAAMA,EAAK,OAAOyF,IAC3BA,MAAS,SAAMA,EAAK,OAAOzF,IAE3BuE,MAAW,SACVA,EAAO,UAAUkD,MAAQlD,EAAO,QAAQkB,IACxClB,EAAO,SAASkD,MAAQlD,EAAO,OAAOvE;AAE5C;AAWO,SAAS4M,GAAanF,GAAQkG,GAAU;AAE9C,MAAIF,IAAc,CAAE;AAEpB,EAAAG,GAAenG,GAAQgG,GAAa,EAAI,GAExCI,GAAoBJ,GAAa,MAAM;AACtC,IAAApJ,EAAeoD,CAAM,GACjBkG,KAAUA,EAAU;AAAA,EAC1B,CAAE;AACF;AAMO,SAASE,GAAoBJ,GAAa5P,GAAI;AACpD,MAAIiQ,IAAYL,EAAY;AAC5B,MAAIK,IAAY,GAAG;AAClB,QAAIC,IAAQ,MAAM,EAAED,KAAajQ,EAAI;AACrC,aAAS6P,KAAcD;AACtB,MAAAC,EAAW,IAAIK,CAAK;AAAA,EAEvB;AACE,IAAAlQ,EAAI;AAEN;AAOO,SAAS+P,GAAenG,GAAQgG,GAAaO,GAAO;AAC1D,OAAKvG,EAAO,IAAItL,QAAW,GAG3B;AAAA,QAFAsL,EAAO,KAAKtL,IAERsL,EAAO,gBAAgB;AAC1B,iBAAWiG,KAAcjG,EAAO;AAC/B,SAAIiG,EAAW,aAAaM,MAC3BP,EAAY,KAAKC,CAAU;AAO9B,aAFIlH,IAAQiB,EAAO,OAEZjB,MAAU,QAAM;AACtB,UAAIM,IAAUN,EAAM,MAChByH,KAAezH,EAAM,IAAIlK,QAAwB,MAAMkK,EAAM,IAAI7K,OAAmB;AAIxF,MAAAiS,GAAepH,GAAOiH,GAAaQ,IAAcD,IAAQ,EAAK,GAC9DxH,IAAQM;AAAA,IACV;AAAA;AACA;AAOO,SAASoH,GAAczG,GAAQ;AACrC,EAAA0G,GAAgB1G,GAAQ,EAAI;AAC7B;AAMA,SAAS0G,GAAgB1G,GAAQuG,GAAO;AACvC,OAAKvG,EAAO,IAAItL,QAAW,GAC3B;AAAA,IAAAsL,EAAO,KAAKtL,KAIPsL,EAAO,IAAIzL,OAAW,MAC1ByL,EAAO,KAAKzL,IAKT+L,GAAgBN,CAAM,MACzB5D,EAAkB4D,GAAQxL,CAAK,GAC/B6H,GAAgB2D,CAAM;AAKvB,aAFIjB,IAAQiB,EAAO,OAEZjB,MAAU,QAAM;AACtB,UAAIM,IAAUN,EAAM,MAChByH,KAAezH,EAAM,IAAIlK,QAAwB,MAAMkK,EAAM,IAAI7K,OAAmB;AAIxF,MAAAwS,GAAgB3H,GAAOyH,IAAcD,IAAQ,EAAK,GAClDxH,IAAQM;AAAA,IACV;AAEC,QAAIW,EAAO,gBAAgB;AAC1B,iBAAWiG,KAAcjG,EAAO;AAC/B,SAAIiG,EAAW,aAAaM,MAC3BN,EAAW,GAAI;AAAA;AAInB;ACjlBO,SAASU,GAA4BC,GAAM;AAOhD,QAAM,IAAI,MAAM,kDAAkD;AAEpE;AChBU,IAAC3L,IAAoB;AAGxB,SAAS0G,GAAsBiD,GAAS;AAC9C,EAAA3J,IAAoB2J;AACrB;AA2BO,SAASiC,GAAW9O,GAAK;AAG/B;AAAA;AAAA,IAFoB+O,GAAoC,EACX,IAAI/O,CAAG;AAAA;AAErD;AAcO,SAASgP,GAAWhP,GAAK6M,GAAS;AAWxC,SAVoBkC,GAAoC,EAU5C,IAAI/O,GAAK6M,CAAO,GACrBA;AACR;AAiCO,SAASL,GAAKyC,GAAO/K,IAAQ,IAAO7F,GAAI;AAC9C,MAAI6Q,IAAOhM,IAAoB;AAAA,IAC9BA;AAAA,IACA,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG+L;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAEC,EAAI7O,MAAoB,CAAC8D,MACxBhB,EAAkB,IAAI;AAAA,IACrB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,IAAI,CAAE;AAAA,IACN,IAAIrC,GAAO,EAAK;AAAA,EAChB,IAGF2J,GAAS,MAAM;AACkB,IAAC0E,EAAK,IAAI;AAAA,EAC5C,CAAE;AAOF;AAOO,SAASC,GAAIC,GAAW;AAC9B,QAAMC,IAAqBnM;AAC3B,MAAImM,MAAuB,MAAM;AAChC,IAAID,MAAc,WACjBC,EAAmB,IAAID;AAExB,UAAME,IAAoBD,EAAmB;AAC7C,QAAIC,MAAsB,MAAM;AAC/B,UAAIpG,IAAkB/G,GAClBlB,IAAoBF;AACxB,MAAAsO,EAAmB,IAAI;AACvB,UAAI;AACH,iBAAS7Q,IAAI,GAAGA,IAAI8Q,EAAkB,QAAQ9Q,KAAK;AAClD,cAAI+Q,IAAmBD,EAAkB9Q,CAAC;AAC1C,UAAA0G,EAAkBqK,EAAiB,MAAM,GACzCrO,EAAoBqO,EAAiB,QAAQ,GAC7CtH,GAAOsH,EAAiB,EAAE;AAAA,QAC/B;AAAA,MACA,UAAa;AACT,QAAArK,EAAkBgE,CAAe,GACjChI,EAAoBD,CAAiB;AAAA,MACzC;AAAA,IACA;AACE,IAAAiC,IAAoBmM,EAAmB,GAIvCA,EAAmB,IAAI;AAAA,EACzB;AAGC,SAAOD;AAAA,EAA+B,CAAA;AACvC;AAGO,SAAS/L,KAAW;AAC1B,SAAO,CAACjD,MAAqB8C,MAAsB,QAAQA,EAAkB,MAAM;AACpF;AAMA,SAAS6L,GAAwBF,GAAM;AACtC,SAAI3L,MAAsB,QACzB0L,GAAgC,GAGzB1L,EAAkB,MAAlBA,EAAkB,IAAM,IAAI,IAAIsM,GAAmBtM,CAAiB,KAAK,MAAS;AAC3F;AAMA,SAASsM,GAAmBtM,GAAmB;AAC9C,MAAI6B,IAAS7B,EAAkB;AAC/B,SAAO6B,MAAW,QAAM;AACvB,UAAM0K,IAAc1K,EAAO;AAC3B,QAAI0K,MAAgB;AACnB,aAAOA;AAER,IAAA1K,IAASA,EAAO;AAAA,EAClB;AACC,SAAO;AACR;AC/GO,SAAS2K,GAAiBb,GAAM;AACtC,SAAOA,EAAK,SAAS,SAAS,KAAKA,MAAS,uBAAuBA,MAAS;AAC7E;AAGA,MAAMc,KAAmB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD;AAMO,SAASC,GAAaC,GAAY;AACxC,SAAOF,GAAiB,SAASE,CAAU;AAC5C;AAmDA,MAAMC,KAAoB;AAAA;AAAA,EAEzB,gBAAgB;AAAA,EAChB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,aAAa;AAAA,EACb,UAAU;AAAA,EACV,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,iBAAiB;AAAA,EACjB,yBAAyB;AAAA,EACzB,uBAAuB;AACxB;AAKO,SAASC,GAAoBlB,GAAM;AACzC,SAAAA,IAAOA,EAAK,YAAa,GAClBiB,GAAkBjB,CAAI,KAAKA;AACnC;AA+CA,MAAMmB,KAAiB,CAAC,cAAc,WAAW;AAM1C,SAASC,GAAiBpB,GAAM;AACtC,SAAOmB,GAAe,SAASnB,CAAI;AACpC;AA6LA,MAAMqB;AAAA;AAAA,EAA0C,CAAC,YAAY,UAAU,SAAS,OAAO;AAAA;AAGhF,SAASC,GAAoBtB,GAAM;AACzC,SAAOqB,GAAkB;AAAA;AAAA,IAAmDrB;AAAA,EAAM;AACnF;ACtcO,SAASuB,GAAUC,GAAKjR,GAAO;AACrC,MAAIA,GAAO;AACV,UAAMkR,IAAO,SAAS;AACtB,IAAAD,EAAI,YAAY,IAEhBrR,GAAiB,MAAM;AACtB,MAAI,SAAS,kBAAkBsR,KAC9BD,EAAI,MAAO;AAAA,IAEf,CAAG;AAAA,EACH;AACA;AAQO,SAASE,GAAsBF,GAAK;AAC1C,EAAI7K,KAAa,gBAAAuB,GAAgBsJ,CAAG,MAAM,QACzC3I,GAAmB2I,CAAG;AAExB;AAEA,IAAIG,KAA0B;AAEvB,SAASC,KAA0B;AACzC,EAAKD,OACJA,KAA0B,IAC1B,SAAS;AAAA,IACR;AAAA,IACA,CAACE,MAAQ;AAGR,cAAQ,UAAU,KAAK,MAAM;ArB5CjC,YAAAnW;AqB6CK,YAAI,CAACmW,EAAI;AACR;AAAA,kBAAWjE;AAAA;AAAA,YAAoCiE,EAAI,OAAQ;AAAA;AAE1D,aAAAnW,IAAAkS,EAAE,WAAF,QAAAlS,EAAA,KAAAkS;AAAA,MAGP,CAAK;AAAA,IACD;AAAA;AAAA,IAED,EAAE,SAAS,GAAI;AAAA,EACf;AAEH;ACpBO,SAASkE,GAAyBtS,GAAI;AAC5C,MAAI4C,IAAoBF,GACpBmI,IAAkB/G;AACtB,EAAAjB,EAAoB,IAAI,GACxBgE,EAAkB,IAAI;AACtB,MAAI;AACH,WAAO7G,EAAI;AAAA,EACb,UAAW;AACT,IAAA6C,EAAoBD,CAAiB,GACrCiE,EAAkBgE,CAAe;AAAA,EACnC;AACA;AAUO,SAAS0H,GAAgCC,GAASC,GAAOC,GAASC,IAAWD,GAAS;AAC5F,EAAAF,EAAQ,iBAAiBC,GAAO,MAAMH,GAAyBI,CAAO,CAAC;AAEvE,QAAMvQ,IAAOqQ,EAAQ;AACrB,EAAIrQ,IAGHqQ,EAAQ,SAAS,MAAM;AACtB,IAAArQ,EAAM,GACNwQ,EAAS,EAAI;AAAA,EACb,IAGDH,EAAQ,SAAS,MAAMG,EAAS,EAAI,GAGrCP,GAAyB;AAC1B;AC3DO,MAAMQ,KAAwB,oBAAI,IAAK,GAGjCC,KAAqB,oBAAI,IAAK;AAmCpC,SAASC,GAAatB,GAAYQ,GAAKU,GAAS7D,IAAU,CAAA,GAAI;AAIpE,WAASkE,EAAoCN,GAAO;AAKnD,QAJK5D,EAAQ,WAEZmE,GAAyB,KAAKhB,GAAKS,CAAK,GAErC,CAACA,EAAM;AACV,aAAOH,GAAyB,MACxBI,KAAA,gBAAAA,EAAS,KAAK,MAAMD,EAC3B;AAAA,EAEJ;AAMC,SACCjB,EAAW,WAAW,SAAS,KAC/BA,EAAW,WAAW,OAAO,KAC7BA,MAAe,UAEf7Q,GAAiB,MAAM;AACtB,IAAAqR,EAAI,iBAAiBR,GAAYuB,GAAgBlE,CAAO;AAAA,EAC3D,CAAG,IAEDmD,EAAI,iBAAiBR,GAAYuB,GAAgBlE,CAAO,GAGlDkE;AACR;AA4BO,SAASN,GAAMjB,GAAYQ,GAAKU,GAASO,GAASC,GAAS;AACjE,MAAIrE,IAAU,EAAE,SAAAoE,GAAS,SAAAC,EAAS,GAC9BH,IAAiBD,GAAatB,GAAYQ,GAAKU,GAAS7D,CAAO;AAGnE,GAAImD,MAAQ,SAAS,QAAQA,MAAQ,UAAUA,MAAQ,aACtD7F,GAAS,MAAM;AACd,IAAA6F,EAAI,oBAAoBR,GAAYuB,GAAgBlE,CAAO;AAAA,EAC9D,CAAG;AAEH;AAMO,SAASsE,GAASC,GAAQ;AAChC,WAASjT,IAAI,GAAGA,IAAIiT,EAAO,QAAQjT;AAClC,IAAAyS,GAAsB,IAAIQ,EAAOjT,CAAC,CAAC;AAGpC,WAASH,KAAM6S;AACd,IAAA7S,EAAGoT,CAAM;AAEX;AAOO,SAASJ,GAAyBP,GAAO;AvBlJhD,MAAAvW;AuBmJC,MAAImX,IAAkB,MAClBC;AAAA;AAAA,IAAsCD,EAAiB;AAAA,KACvD7B,IAAaiB,EAAM,MACnBc,MAAOrX,IAAAuW,EAAM,iBAAN,gBAAAvW,EAAA,KAAAuW,OAA0B,CAAE,GACnCe;AAAA;AAAA,IAAgDD,EAAK,CAAC,KAAKd,EAAM;AAAA,KAMjEgB,IAAW,GAGXC,IAAajB,EAAM;AAEvB,MAAIiB,GAAY;AACf,QAAIC,IAASJ,EAAK,QAAQG,CAAU;AACpC,QACCC,MAAW,OACVN,MAAoB,YAAYA;AAAA,IAAwC,SACxE;AAKD,MAAAZ,EAAM,SAASY;AACf;AAAA,IACH;AAOE,QAAIO,IAAcL,EAAK,QAAQF,CAAe;AAC9C,QAAIO,MAAgB;AAGnB;AAGD,IAAID,KAAUC,MACbH,IAAWE;AAAA,EAEd;AAMC,MAJAH;AAAA,EAAyCD,EAAKE,CAAQ,KAAKhB,EAAM,QAI7De,MAAmBH,GAGvB;AAAA,IAAAhU,GAAgBoT,GAAO,iBAAiB;AAAA,MACvC,cAAc;AAAA,MACd,MAAM;AACL,eAAOe,KAAkBF;AAAA,MAC5B;AAAA,IACA,CAAE;AAOD,QAAI1Q,IAAoBF,GACpBmI,IAAkB/G;AACtB,IAAAjB,EAAoB,IAAI,GACxBgE,EAAkB,IAAI;AAEtB,QAAI;AAUH,eANIgN,GAIAC,IAAe,CAAE,GAEdN,MAAmB,QAAM;AAE/B,YAAIO,IACHP,EAAe,gBACfA,EAAe;AAAA,QACKA,EAAgB,QACpC;AAED,YAAI;AAEH,cAAIQ,IAAYR,EAAe,OAAOhC,CAAU;AAEhD,cACCwC,KAAa,SACZ;AAAA,UAAsBR,EAAgB;AAAA;AAAA,UAGtCf,EAAM,WAAWe;AAElB,gBAAIvU,GAAS+U,CAAS,GAAG;AACxB,kBAAI,CAAChU,GAAI,GAAGgI,CAAI,IAAIgM;AACpB,cAAAhU,EAAG,MAAMwT,GAAgB,CAACf,GAAO,GAAGzK,CAAI,CAAC;AAAA,YAC/C;AACM,cAAAgM,EAAU,KAAKR,GAAgBf,CAAK;AAAA,QAGtC,SAAQhI,GAAO;AACf,UAAIoJ,IACHC,EAAa,KAAKrJ,CAAK,IAEvBoJ,IAAcpJ;AAAA,QAEnB;AACG,YAAIgI,EAAM,gBAAgBsB,MAAmBV,KAAmBU,MAAmB;AAClF;AAED,QAAAP,IAAiBO;AAAA,MACpB;AAEE,UAAIF,GAAa;AAChB,iBAASpJ,KAASqJ;AAEjB,yBAAe,MAAM;AACpB,kBAAMrJ;AAAA,UACX,CAAK;AAEF,cAAMoJ;AAAA,MACT;AAAA,IACA,UAAW;AAET,MAAApB,EAAM,SAASY,GAEf,OAAOZ,EAAM,eACb5P,EAAoBD,CAAiB,GACrCiE,EAAkBgE,CAAe;AAAA,IACnC;AAAA;AACA;AC1RO,SAASoJ,GAA0BC,GAAM;AAC/C,MAAIC,IAAO,SAAS,cAAc,UAAU;AAC5C,SAAAA,EAAK,YAAYD,GACVC,EAAK;AACb;ACMO,SAASC,EAAaC,GAAO1E,GAAK;AACxC,MAAI/F;AAAA;AAAA,IAAgC9F;AAAA;AACpC,EAAI8F,EAAO,gBAAgB,SAC1BA,EAAO,cAAcyK,GACrBzK,EAAO,YAAY+F;AAErB;AAAA;AAQO,SAAS2E,GAASC,GAASxO,GAAO;AACxC,MAAIyO,KAAezO,IAAQ/I,QAAuB,GAC9CyX,KAAmB1O,IAAQ9I,QAA8B,GAGzDsK,GAMAmN,IAAY,CAACH,EAAQ,WAAW,KAAK;AAEzC,SAAO,MAAM;AACZ,QAAIpN;AACH,aAAAiN,EAAa/M,GAAc,IAAI,GACxBA;AAGR,IAAIE,MAAS,WACZA,IAAO0M,GAA0BS,IAAYH,IAAU,QAAQA,CAAO,GACjEC,MAAajN;AAAA,IAA4B,gBAAAmB,GAAgBnB,CAAI;AAGnE,QAAIoN;AAAA;AAAA,MACHF,KAAmBvM,KAAa,SAAS,WAAWX,GAAM,EAAI,IAAIA,EAAK,UAAU,EAAI;AAAA;AAGtF,QAAIiN,GAAa;AAChB,UAAIH;AAAA;AAAA,QAAqC,gBAAA3L,GAAgBiM,CAAK;AAAA,SAC1DhF;AAAA;AAAA,QAAmCgF,EAAM;AAAA;AAE7C,MAAAP,EAAaC,GAAO1E,CAAG;AAAA,IAC1B;AACG,MAAAyE,EAAaO,GAAOA,CAAK;AAG1B,WAAOA;AAAA,EACP;AACF;AAmIO,SAAS9L,GAAK9H,IAAQ,IAAI;AAChC,MAAI,CAACoG,GAAW;AACf,QAAIyN,IAAInM,GAAY1H,IAAQ,EAAE;AAC9B,WAAAqT,EAAaQ,GAAGA,CAAC,GACVA;AAAA,EACT;AAEC,MAAIrN,IAAOF;AAEX,SAAIE,EAAK,aAAa,MAErBA,EAAK,OAAQA,IAAOkB,IAAe,GACnCnB,EAAiBC,CAAI,IAGtB6M,EAAa7M,GAAMA,CAAI,GAChBA;AACR;AAEO,SAASsN,KAAU;AAEzB,MAAI1N;AACH,WAAAiN,EAAa/M,GAAc,IAAI,GACxBA;AAGR,MAAIyN,IAAO,SAAS,uBAAwB,GACxCT,IAAQ,SAAS,cAAc,EAAE,GACjCU,IAAStM,GAAa;AAC1B,SAAAqM,EAAK,OAAOT,GAAOU,CAAM,GAEzBX,EAAaC,GAAOU,CAAM,GAEnBD;AACR;AAQO,SAASE,GAAOD,GAAQ/C,GAAK;AACnC,MAAI7K,GAAW;AACQ,IAACrD,EAAe,YAAYuD,GAClDI,GAAc;AACd;AAAA,EACF;AAEC,EAAIsN,MAAW,QAKfA,EAAO;AAAA;AAAA,IAA4B/C;AAAA,EAAK;AACzC;ACpNU,IAACiD,KAAe;AAGnB,SAASC,GAAiBnU,GAAO;AACvC,EAAAkU,KAAelU;AAChB;AAOO,SAASoU,GAAStM,GAAM9H,GAAO;AAErC,MAAIqU,IAAMrU,KAAS,OAAO,KAAK,OAAOA,KAAU,WAAWA,IAAQ,KAAKA;AAExE,EAAIqU,OAASvM,EAAK,QAALA,EAAK,MAAQA,EAAK,gBAE9BA,EAAK,MAAMuM,GACXvM,EAAK,YAAYuM,IAAM;AAEzB;AAYO,SAASC,GAAMtE,GAAWlC,GAAS;AACzC,SAAOyG,GAAOvE,GAAWlC,CAAO;AACjC;AAyBO,SAAS0G,GAAQxE,GAAWlC,GAAS;AAC3C,EAAAxG,GAAiB,GACjBwG,EAAQ,QAAQA,EAAQ,SAAS;AACjC,QAAMxL,IAASwL,EAAQ,QACjB2G,IAAgBrO,GAChBsO,IAAwBpO;AAE9B,MAAI;AAEH,aADI0N;AAAA;AAAA,MAAsC,gBAAArM,GAAgBrF,CAAM;AAAA,OAE/D0R,MACCA,EAAO,aAAa;AAAA,IAA6BA,EAAQ,SAAS7X;AAEnE,MAAA6X;AAAA,MAAsC,gBAAArN,EAAiBqN,CAAM;AAG9D,QAAI,CAACA;AACJ,YAAM1X;AAGP,IAAA+J,GAAc,EAAI,GAClBE;AAAA;AAAA,MAAyCyN;AAAA,IAAQ,GACjDtN,GAAc;AAEd,UAAMiO,IAAWJ,GAAOvE,GAAW,EAAE,GAAGlC,GAAS,QAAAkG,GAAQ;AAEzD,QACC1N,MAAiB,QACjBA,EAAa,aAAa;AAAA,IACFA,EAAc,SAASjK;AAE/CoK,YAAAA,GAAsB,GAChBnK;AAGP,WAAA+J,GAAc,EAAK;AAAA,IAEasO;AAAA,EAChC,SAAQjL,GAAO;AACf,QAAIA,MAAUpN;AACb,aAAIwR,EAAQ,YAAY,MACvB8G,GAAoB,GAIrBtN,GAAiB,GACjBgB,GAAmBhG,CAAM,GAEzB+D,GAAc,EAAK,GACZiO,GAAMtE,GAAWlC,CAAO;AAGhC,UAAMpE;AAAA,EACR,UAAW;AACT,IAAArD,GAAcoO,CAAa,GAC3BlO,EAAiBmO,CAAqB;AAAA,EAExC;AACA;AAGA,MAAMG,KAAqB,oBAAI,IAAK;AAQpC,SAASN,GAAOO,GAAW,EAAE,QAAAxS,GAAQ,QAAA0R,GAAQ,OAAAnE,IAAQ,CAAE,GAAE,QAAAwC,GAAQ,SAAA5E,GAAS,OAAAsH,IAAQ,GAAI,GAAI;AACzF,EAAAzN,GAAiB;AAEjB,MAAI0N,IAAoB,oBAAI,IAAK,GAG7BC,IAAe,CAAC5C,MAAW;AAC9B,aAASjT,IAAI,GAAGA,IAAIiT,EAAO,QAAQjT,KAAK;AACvC,UAAIqR,IAAa4B,EAAOjT,CAAC;AAEzB,UAAI,CAAA4V,EAAkB,IAAIvE,CAAU,GACpC;AAAA,QAAAuE,EAAkB,IAAIvE,CAAU;AAEhC,YAAI0B,IAAUtB,GAAiBJ,CAAU;AAKzC,QAAAnO,EAAO,iBAAiBmO,GAAYwB,IAA0B,EAAE,SAAAE,EAAO,CAAE;AAEzE,YAAI3P,IAAIqS,GAAmB,IAAIpE,CAAU;AAEzC,QAAIjO,MAAM,UAGT,SAAS,iBAAiBiO,GAAYwB,IAA0B,EAAE,SAAAE,EAAO,CAAE,GAC3E0C,GAAmB,IAAIpE,GAAY,CAAC,KAEpCoE,GAAmB,IAAIpE,GAAYjO,IAAI,CAAC;AAAA;AAAA,IAE5C;AAAA,EACE;AAED,EAAAyS,EAAa7W,GAAWyT,EAAqB,CAAC,GAC9CC,GAAmB,IAAImD,CAAY;AAInC,MAAIjF,IAAY,QAEZkF,IAAUrH,GAAe,MAAM;AAClC,QAAIsH,IAAcnB,KAAU1R,EAAO,YAAYoF,GAAW,CAAE;AAE5D,WAAA8G,GAAO,MAAM;AACZ,UAAIf,GAAS;AACZ,QAAAL,GAAK,CAAA,CAAE;AACP,YAAI0C;AAAA;AAAA,UAAuChM;AAAA;AAC3C,QAAAgM,EAAI,IAAIrC;AAAA,MACZ;AAEG,MAAI4E,MAEiBxC,EAAO,WAAWwC,IAGnCjM,KACHiN;AAAA;AAAA,QAA0C8B;AAAA,QAAc;AAAA,MAAI,GAG7DjB,KAAea,GAEf/E,IAAY8E,EAAUK,GAAatF,CAAK,KAAK,CAAE,GAC/CqE,KAAe,IAEX9N,MACoBrD,EAAe,YAAYuD,IAG/CmH,KACHsC,GAAK;AAAA,IAET,CAAG,GAEM,MAAM;A1BhPf,UAAA5U;A0BiPG,eAASsV,KAAcuE,GAAmB;AACzC,QAAA1S,EAAO,oBAAoBmO,GAAYwB,EAAwB;AAE/D,YAAIzP;AAAA;AAAA,UAA2BqS,GAAmB,IAAIpE,CAAU;AAAA;AAEhE,QAAI,EAAEjO,MAAM,KACX,SAAS,oBAAoBiO,GAAYwB,EAAwB,GACjE4C,GAAmB,OAAOpE,CAAU,KAEpCoE,GAAmB,IAAIpE,GAAYjO,CAAC;AAAA,MAEzC;AAEG,MAAAsP,GAAmB,OAAOmD,CAAY,GAElCE,MAAgBnB,OACnB7Y,IAAAga,EAAY,eAAZ,QAAAha,EAAwB,YAAYga;AAAA,IAErC;AAAA,EACH,CAAE;AAED,SAAAC,GAAmB,IAAIpF,GAAWkF,CAAO,GAClClF;AACR;AAMA,IAAIoF,KAAqB,oBAAI,QAAS;AAsB/B,SAASF,GAAQlF,GAAWlC,GAAS;AAC3C,QAAM7O,IAAKmW,GAAmB,IAAIpF,CAAS;AAE3C,SAAI/Q,KACHmW,GAAmB,OAAOpF,CAAS,GAC5B/Q,EAAG6O,CAAO,KAOX,QAAQ,QAAS;AACzB;ACzSO,SAASuH,GAAcrB,GAAQsB,GAAK;AAE1C,EAAA1V,GAAiB,MAAM;AACtB,QAAIoK,IAAOgK,EAAO,YAAa,GAE3B1R;AAAA;AAAA,MAAoC0H,EAAM;AAAA;AAAA,QAChBA;AAAA;AAAA;AAAA,QACFA,EAAM;AAAA,QAAiCA,EAAK,cAAe;AAAA;AAAA;AAIvF,QAAI,CAAC1H,EAAO,cAAc,MAAMgT,EAAI,IAAI,GAAG;AAC1C,YAAMC,IAAQ,SAAS,cAAc,OAAO;AAC5C,MAAAA,EAAM,KAAKD,EAAI,MACfC,EAAM,cAAcD,EAAI,MAExBhT,EAAO,YAAYiT,CAAK;AAAA,IAK3B;AAAA,EACA,CAAE;AACF;ACrBA,SAASC,GAAcC,GAAaC,GAAsB;AACzD,SACCD,MAAgBC,MAAwBD,KAAA,gBAAAA,EAAc1X,QAAkB2X;AAE1E;AAUO,SAASC,GAAUD,IAAuB,CAAA,GAAIE,GAAQC,GAAWC,GAAW;AAClF,SAAAjN,GAAO,MAAM;AAEZ,QAAIkN,GAGAC;AAEJ,WAAArI,GAAc,MAAM;AACnB,MAAAoI,IAAYC,GAEZA,IAAyB,CAAE,GAE3B5J,GAAQ,MAAM;AACb,QAAIsJ,MAAyBG,EAAU,GAAGG,CAAK,MAC9CJ,EAAOF,GAAsB,GAAGM,CAAK,GAGjCD,KAAaP,GAAcK,EAAU,GAAGE,CAAS,GAAGL,CAAoB,KAC3EE,EAAO,MAAM,GAAGG,CAAS;AAAA,MAG/B,CAAI;AAAA,IACJ,CAAG,GAEM,MAAM;AAEZ,MAAAnW,GAAiB,MAAM;AACtB,QAAIoW,KAASR,GAAcK,EAAU,GAAGG,CAAK,GAAGN,CAAoB,KACnEE,EAAO,MAAM,GAAGI,CAAK;AAAA,MAE1B,CAAI;AAAA,IACD;AAAA,EACH,CAAE,GAEMN;AACR;AC9CA,IAAIO,KAAmB;AA8KhB,SAASC,GAAsBjX,GAAI;AACzC,MAAIkX,IAA4BF;AAEhC,MAAI;AACH,WAAAA,KAAmB,IACZ,CAAChX,EAAI,GAAEgX,EAAgB;AAAA,EAChC,UAAW;AACT,IAAAA,KAAmBE;AAAA,EACrB;AACA;AC4CA,SAASC,GAA4BC,GAAe;A9BjPpD,MAAAlb;A8BkPC,WAAOA,IAAAkb,EAAc,QAAd,gBAAAlb,EAAmB,MAAK;AAChC;AAYO,SAAS8G,GAAK4N,GAAOjP,GAAKoE,GAAOsR,GAAU;A9B/PlD,MAAAnb;A8BgQC,MAAI0I,KAAamB,IAAQvJ,QAAwB,GAC7CqJ,IAAQ,CAAC9D,OAAqBgE,IAAQtJ,QAAoB,GAC1D6a,KAAYvR,IAAQpJ,QAAuB,GAC3C4a,KAAQxR,IAAQnJ,QAA2B,GAC3C4a,IAAe,IACfC;AAEJ,EAAIH,IACH,CAACG,GAAYD,CAAY,IAAIP,GAAsB;AAAA;AAAA,IAAwBrG,EAAMjP,CAAG;AAAA,GAAE,IAEtF8V;AAAA,EAA+B7G,EAAMjP,CAAG;AAKzC,MAAI+V,IAAiB5Y,KAAgB8R,KAAS7R,MAAgB6R,GAE1D+G,IACFL,QACCpb,KAAAoD,GAAesR,GAAOjP,CAAG,MAAzB,gBAAAzF,GAA4B,SAC3Bwb,KAAkB/V,KAAOiP,MAAU,CAACjN,MAAOiN,EAAMjP,CAAG,IAAIgC,QAC3D,QAEGiU;AAAA;AAAA,IAAmCP;AAAA,KACnCQ,IAAiB,IACjBC,IAAgB,IAEhBC,IAAe,OAClBD,IAAgB,IACZD,MACHA,IAAiB,IACbN,IACHK,IAAiBzK;AAAA;AAAA,IAAgCkK;AAAA,EAAU,IAE3DO;AAAA,EAAmCP,IAI9BO;AAGR,EAAIH,MAAe,UAAaJ,MAAa,WACxCM,KAAU9R,KACbmS,GAAyB,GAG1BP,IAAaM,EAAc,GACvBJ,KAAQA,EAAOF,CAAU;AAI9B,MAAIQ;AACJ,MAAIpS;AACH,IAAAoS,IAAS,MAAM;AACd,UAAIlX;AAAA;AAAA,QAA0B6P,EAAMjP,CAAG;AAAA;AACvC,aAAIZ,MAAU,SAAkBgX,EAAc,KAC9CF,IAAiB,IACjBC,IAAgB,IACT/W;AAAA,IACP;AAAA,OACK;AAGN,QAAImX,KAAkBtT,IAAYsB,KAAUG;AAAA,MAC3C;AAAA;AAAA,QAAwBuK,EAAMjP,CAAG;AAAA;AAAA,IACjC;AACD,IAAAuW,EAAe,KAAKxZ,IACpBuZ,IAAS,MAAM;AACd,UAAIlX,IAAQ6C,EAAIsU,CAAc;AAC9B,aAAInX,MAAU,WAAW6W;AAAA,MAAmC,SACrD7W,MAAU,SAAY6W,IAAiB7W;AAAA,IAC9C;AAAA,EACH;AAGC,OAAKgF,IAAQrJ,QAAsB;AAClC,WAAOub;AAKR,MAAIN,GAAQ;AACX,QAAIQ,IAAgBvH,EAAM;AAC1B,WAAO,SAA6B7P,GAA8BqX,IAAU;AAC3E,aAAI,UAAU,SAAS,MAKlB,CAACvS,KAAS,CAACuS,MAAYD,KAAiBX,MAClBG,EAAQS,KAAWH,EAAM,IAAKlX,CAAK,GAEtDA,KAEAkX,EAAQ;AAAA,IAEhB;AAAA,EACH;AAKC,MAAII,IAAa,IAKbC,KAAsB,gBAAA5T,GAAe+S,CAAU,GAC/CL,IAAgB,gBAAAlR,GAAQ,MAAM;AACjC,QAAIqS,IAAeN,EAAQ,GACvBO,KAAc5U,EAAI0U,EAAmB;AAEzC,WAAID,KACHA,IAAa,IAENG,MAIAF,GAAoB,IAAIC;AAAA,EAClC,CAAE;AAGD,SAAIjB,KACH1T,EAAIwT,CAAa,GAGbxS,MAAWwS,EAAc,SAASjW,KAEhC,SAA6BJ,GAA8BqX,IAAU;AAa3E,QAAI,UAAU,SAAS,GAAG;AACzB,YAAMjT,KAAYiT,KAAWxU,EAAIwT,CAAa,IAAIvR,KAASyR,IAAWpV,GAAMnB,CAAK,IAAIA;AAErF,UAAI,CAACqW,EAAc,OAAOjS,EAAS,GAAG;AASrC,YARAkT,IAAa,IACbjV,EAAIkV,IAAqBnT,EAAS,GAG9B2S,KAAiBF,MAAmB,WACvCA,IAAiBzS,KAGdgS,GAA4BC,CAAa;AAC5C,iBAAOrW;AAGR,QAAAoM,GAAQ,MAAMvJ,EAAIwT,CAAa,CAAC;AAAA,MACpC;AAEG,aAAOrW;AAAA,IACV;AAEE,WAAIoW,GAA4BC,CAAa,IACrCA,EAAc,IAGfxT,EAAIwT,CAAa;AAAA,EACxB;AACF;AC9YO,SAASqB,GAAqB5J,GAAS;AAE7C,SAAO,IAAI6J,GAAiB7J,CAAO;AACpC;A/B/BA,IAAA8J,GAAAC;A+BgEA,MAAMF,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYtB,YAAY7J,GAAS;AAVrB;AAAA,IAAAgK,GAAA,MAAAF;AAGA;AAAA,IAAAE,GAAA,MAAAD;A/BrED,QAAA1c;A+B6EE,QAAImG,IAAU,oBAAI,IAAK,GAMnByW,IAAa,CAACnX,GAAKZ,MAAU;AAChC,UAAIoC,IAAI,gBAAAuB,GAAe3D,CAAK;AAC5B,aAAAsB,EAAQ,IAAIV,GAAKwB,CAAC,GACXA;AAAA,IACP;AAKD,UAAMyN,IAAQ,IAAI;AAAA,MACjB,EAAE,GAAI/B,EAAQ,SAAS,CAAE,GAAG,UAAU,CAAA,EAAI;AAAA,MAC1C;AAAA,QACC,IAAIxL,GAAQL,GAAM;AACjB,iBAAOY,EAAIvB,EAAQ,IAAIW,CAAI,KAAK8V,EAAW9V,GAAM,QAAQ,IAAIK,GAAQL,CAAI,CAAC,CAAC;AAAA,QAC3E;AAAA,QACD,IAAIK,GAAQL,GAAM;AAEjB,iBAAIA,MAASjE,KAAqB,MAElC6E,EAAIvB,EAAQ,IAAIW,CAAI,KAAK8V,EAAW9V,GAAM,QAAQ,IAAIK,GAAQL,CAAI,CAAC,CAAC,GAC7D,QAAQ,IAAIK,GAAQL,CAAI;AAAA,QAC/B;AAAA,QACD,IAAIK,GAAQL,GAAMjC,GAAO;AACxB,iBAAAqC,EAAIf,EAAQ,IAAIW,CAAI,KAAK8V,EAAW9V,GAAMjC,CAAK,GAAGA,CAAK,GAChD,QAAQ,IAAIsC,GAAQL,GAAMjC,CAAK;AAAA,QAC3C;AAAA,MACA;AAAA,IACG;AAED,IAAAgY,GAAA,MAAKH,IAAa/J,EAAQ,UAAU0G,KAAUF,IAAOxG,EAAQ,WAAW;AAAA,MACvE,QAAQA,EAAQ;AAAA,MAChB,QAAQA,EAAQ;AAAA,MAChB,OAAA+B;AAAA,MACA,SAAS/B,EAAQ;AAAA,MACjB,OAAOA,EAAQ,SAAS;AAAA,MACxB,SAASA,EAAQ;AAAA,IACpB,CAAG,KAGG,GAAC3S,IAAA2S,KAAA,gBAAAA,EAAS,UAAT,QAAA3S,EAAgB,WAAU2S,EAAQ,SAAS,OAC/C5B,GAAW,GAGZ8L,GAAA,MAAKJ,GAAU/H,EAAM;AAErB,eAAWjP,KAAO,OAAO,KAAKqX,EAAA,MAAKJ,EAAS;AAC3C,MAAIjX,MAAQ,UAAUA,MAAQ,cAAcA,MAAQ,SACpDtC,GAAgB,MAAMsC,GAAK;AAAA,QAC1B,MAAM;AACL,iBAAOqX,EAAA,MAAKJ,GAAUjX,CAAG;AAAA,QACzB;AAAA;AAAA,QAED,IAAIZ,GAAO;AACV,UAAAiY,EAAA,MAAKJ,GAAUjX,CAAG,IAAIZ;AAAA,QACtB;AAAA,QACD,YAAY;AAAA,MAChB,CAAI;AAGF,IAAAiY,EAAA,MAAKJ,GAAU;AAAA,IAAgD,CAAChR,MAAS;AACxE,aAAO,OAAOgJ,GAAOhJ,CAAI;AAAA,IACzB,GAEDoR,EAAA,MAAKJ,GAAU,WAAW,MAAM;AAC/B,MAAA3C,GAAQ+C,EAAA,MAAKJ,EAAS;AAAA,IACtB;AAAA,EACH;AAAA;AAAA,EAGC,KAAKhI,GAAO;AACX,IAAAoI,EAAA,MAAKJ,GAAU,KAAKhI,CAAK;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,IAAI6B,GAAO3C,GAAU;AACpB,IAAAkJ,EAAA,MAAKL,GAAQlG,CAAK,IAAIuG,EAAA,MAAKL,GAAQlG,CAAK,KAAK,CAAE;AAG/C,UAAMpS,IAAK,IAAI4Y,MAASnJ,EAAS,KAAK,MAAM,GAAGmJ,CAAI;AACnD,WAAAD,EAAA,MAAKL,GAAQlG,CAAK,EAAE,KAAKpS,CAAE,GACpB,MAAM;AACZ,MAAA2Y,EAAA,MAAKL,GAAQlG,CAAK,IAAIuG,EAAA,MAAKL,GAAQlG,CAAK,EAAE;AAAA;AAAA,QAA8B,CAACzS,MAAOA,MAAOK;AAAA,MAAE;AAAA,IACzF;AAAA,EACH;AAAA,EAEC,WAAW;AACV,IAAA2Y,EAAA,MAAKJ,GAAU,SAAU;AAAA,EAC3B;AACA;AA7GCD,IAAA,eAGAC,IAAA;ACxDD,IAAIM;AAEA,OAAO,eAAgB,eAC1BA,KAAgB,cAAc,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2BzC,YAAYC,GAAiBC,GAASC,GAAgB;AACrD,UAAO;AA1BR;AAAA,IAAAC,EAAA;AAEA;AAAA,IAAAA,EAAA;AAEA;AAAA,IAAAA,EAAA;AAEA;AAAA,IAAAA,EAAA,cAAO;AAEP;AAAA,IAAAA,EAAA,aAAM,CAAE;AAER;AAAA,IAAAA,EAAA,aAAM;AAEN;AAAA,IAAAA,EAAA,eAAQ,CAAE;AAEV;AAAA,IAAAA,EAAA,aAAM,CAAE;AAER;AAAA,IAAAA,EAAA,eAAQ,oBAAI,IAAK;AAEjB;AAAA,IAAAA,EAAA;AASC,SAAK,SAASH,GACd,KAAK,MAAMC,GACPC,KACH,KAAK,aAAa,EAAE,MAAM,OAAM,CAAE;AAAA,EAEtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,iBAAiBjQ,GAAMmQ,GAAU1K,GAAS;AAMzC,QAFA,KAAK,IAAIzF,CAAI,IAAI,KAAK,IAAIA,CAAI,KAAK,CAAE,GACrC,KAAK,IAAIA,CAAI,EAAE,KAAKmQ,CAAQ,GACxB,KAAK,KAAK;AACb,YAAMC,IAAQ,KAAK,IAAI,IAAIpQ,GAAMmQ,CAAQ;AACzC,WAAK,MAAM,IAAIA,GAAUC,CAAK;AAAA,IAClC;AACG,UAAM,iBAAiBpQ,GAAMmQ,GAAU1K,CAAO;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,oBAAoBzF,GAAMmQ,GAAU1K,GAAS;AAE5C,QADA,MAAM,oBAAoBzF,GAAMmQ,GAAU1K,CAAO,GAC7C,KAAK,KAAK;AACb,YAAM2K,IAAQ,KAAK,MAAM,IAAID,CAAQ;AACrC,MAAIC,MACHA,EAAO,GACP,KAAK,MAAM,OAAOD,CAAQ;AAAA,IAE/B;AAAA,EACA;AAAA,EAEE,MAAM,oBAAoB;AAEzB,QADA,KAAK,OAAO,IACR,CAAC,KAAK,KAAK;AAOd,UAASE,IAAT,SAAqBjJ,GAAM;AAI1B,eAAO,CAACuE,MAAW;AAClB,gBAAM2E,IAAO,SAAS,cAAc,MAAM;AAC1C,UAAIlJ,MAAS,cAAWkJ,EAAK,OAAOlJ,IAEpCwE,GAAOD,GAAQ2E,CAAI;AAAA,QACnB;AAAA,MACN;AAdI,UADA,MAAM,QAAQ,QAAS,GACnB,CAAC,KAAK,QAAQ,KAAK;AACtB;AAeD,YAAMN,IAAU,CAAE,GACZO,IAAiBC,GAA0B,IAAI;AACrD,iBAAWpJ,KAAQ,KAAK;AACvB,QAAIA,KAAQmJ,MACPnJ,MAAS,aAAa,CAAC,KAAK,IAAI,YACnC,KAAK,IAAI,WAAWiJ,EAAYjJ,CAAI,GACpC4I,EAAQ,UAAU,MAElBA,EAAQ5I,CAAI,IAAIiJ,EAAYjJ,CAAI;AAInC,iBAAWqJ,KAAa,KAAK,YAAY;AAExC,cAAMrJ,IAAO,KAAK,MAAMqJ,EAAU,IAAI;AACtC,QAAMrJ,KAAQ,KAAK,QAClB,KAAK,IAAIA,CAAI,IAAIsJ,GAAyBtJ,GAAMqJ,EAAU,OAAO,KAAK,OAAO,QAAQ;AAAA,MAE3F;AAEI,iBAAWlY,KAAO,KAAK;AAEtB,QAAI,EAAEA,KAAO,KAAK,QAAQ,KAAKA,CAAG,MAAM,WAEvC,KAAK,IAAIA,CAAG,IAAI,KAAKA,CAAG,GAExB,OAAO,KAAKA,CAAG;AAGjB,WAAK,MAAM8W,GAAqB;AAAA,QAC/B,WAAW,KAAK;AAAA,QAChB,QAAQ,KAAK,cAAc;AAAA,QAC3B,OAAO;AAAA,UACN,GAAG,KAAK;AAAA,UACR,SAAAW;AAAA,UACA,QAAQ;AAAA,QACd;AAAA,MACA,CAAK,GAGD,KAAK,OAAOzK,GAAY,MAAM;AAC7B,QAAAD,GAAc,MAAM;AhCpJzB,cAAAxS;AgCqJM,eAAK,MAAM;AACX,qBAAWyF,KAAOvC,GAAY,KAAK,GAAG,GAAG;AACxC,gBAAI,GAAClD,IAAA,KAAK,MAAMyF,CAAG,MAAd,QAAAzF,EAAiB,SAAS;AAC/B,iBAAK,IAAIyF,CAAG,IAAI,KAAK,IAAIA,CAAG;AAC5B,kBAAMoY,IAAkBD;AAAA,cACvBnY;AAAA,cACA,KAAK,IAAIA,CAAG;AAAA,cACZ,KAAK;AAAA,cACL;AAAA,YACA;AACD,YAAIoY,KAAmB,OACtB,KAAK,gBAAgB,KAAK,MAAMpY,CAAG,EAAE,aAAaA,CAAG,IAErD,KAAK,aAAa,KAAK,MAAMA,CAAG,EAAE,aAAaA,GAAKoY,CAAe;AAAA,UAE3E;AACM,eAAK,MAAM;AAAA,QACjB,CAAM;AAAA,MACN,CAAK;AAED,iBAAW3Q,KAAQ,KAAK;AACvB,mBAAWmQ,KAAY,KAAK,IAAInQ,CAAI,GAAG;AACtC,gBAAMoQ,IAAQ,KAAK,IAAI,IAAIpQ,GAAMmQ,CAAQ;AACzC,eAAK,MAAM,IAAIA,GAAUC,CAAK;AAAA,QACpC;AAEI,WAAK,MAAM,CAAE;AAAA,IACjB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,yBAAyBQ,GAAMC,GAAWC,GAAU;AhC3LtD,QAAAhe;AgC4LG,IAAI,KAAK,QACT8d,IAAO,KAAK,MAAMA,CAAI,GACtB,KAAK,IAAIA,CAAI,IAAIF,GAAyBE,GAAME,GAAU,KAAK,OAAO,QAAQ,IAC9Ehe,IAAA,KAAK,QAAL,QAAAA,EAAU,KAAK,EAAE,CAAC8d,CAAI,GAAG,KAAK,IAAIA,CAAI;EACzC;AAAA,EAEE,uBAAuB;AACtB,SAAK,OAAO,IAEZ,QAAQ,UAAU,KAAK,MAAM;AAC5B,MAAI,CAAC,KAAK,QAAQ,KAAK,QACtB,KAAK,IAAI,SAAU,GACnB,KAAK,KAAM,GACX,KAAK,MAAM;AAAA,IAEhB,CAAI;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAKE,MAAMG,GAAgB;AACrB,WACC/a,GAAY,KAAK,KAAK,EAAE;AAAA,MACvB,CAACuC,MACA,KAAK,MAAMA,CAAG,EAAE,cAAcwY,KAC7B,CAAC,KAAK,MAAMxY,CAAG,EAAE,aAAaA,EAAI,YAAW,MAAOwY;AAAA,IAC3D,KAASA;AAAA,EAET;AACE;AASF,SAASL,GAAyB9W,GAAMjC,GAAOqZ,GAAkBC,GAAW;AhCnO5E,MAAAne;AgCoOC,QAAMkN,KAAOlN,IAAAke,EAAiBpX,CAAI,MAArB,gBAAA9G,EAAwB;AAErC,MADA6E,IAAQqI,MAAS,aAAa,OAAOrI,KAAU,YAAYA,KAAS,OAAOA,GACvE,CAACsZ,KAAa,CAACD,EAAiBpX,CAAI;AACvC,WAAOjC;AACD,MAAIsZ,MAAc;AACxB,YAAQjR,GAAI;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AACJ,eAAOrI,KAAS,OAAO,OAAO,KAAK,UAAUA,CAAK;AAAA,MACnD,KAAK;AACJ,eAAOA,IAAQ,KAAK;AAAA,MACrB,KAAK;AACJ,eAAOA,KAAgB;AAAA,MACxB;AACC,eAAOA;AAAA,IACX;AAAA;AAEE,YAAQqI,GAAI;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AACJ,eAAOrI,KAAS,KAAK,MAAMA,CAAK;AAAA,MACjC,KAAK;AACJ,eAAOA;AAAA;AAAA,MACR,KAAK;AACJ,eAAOA,KAAS,OAAO,CAACA,IAAQA;AAAA,MACjC;AACC,eAAOA;AAAA,IACX;AAEA;AAKA,SAAS6Y,GAA0BpH,GAAS;AAE3C,QAAM1P,IAAS,CAAE;AACjB,SAAA0P,EAAQ,WAAW,QAAQ,CAACjL,MAAS;AACpC,IAAAzE;AAAA;AAAA,MAAoCyE,EAAM,QAAQ;AAAA,IAAS,IAAI;AAAA,EACjE,CAAE,GACMzE;AACR;AAaO,SAASwX,GACfzE,GACAuE,GACAG,GACAC,GACAnB,GACAoB,GACC;AACD,MAAIC,IAAQ,cAAcxB,GAAc;AAAA,IACvC,cAAc;AACb,YAAMrD,GAAW0E,GAAOlB,CAAc,GACtC,KAAK,QAAQe;AAAA,IAChB;AAAA,IACE,WAAW,qBAAqB;AAC/B,aAAOhb,GAAYgb,CAAgB,EAAE;AAAA,QAAI,CAACzY,OACxCyY,EAAiBzY,CAAG,EAAE,aAAaA,GAAK,YAAW;AAAA,MACpD;AAAA,IACJ;AAAA,EACE;AACD,SAAAvC,GAAYgb,CAAgB,EAAE,QAAQ,CAACpX,MAAS;AAC/C,IAAA3D,GAAgBqb,EAAM,WAAW1X,GAAM;AAAA,MACtC,MAAM;AACL,eAAO,KAAK,OAAOA,KAAQ,KAAK,MAAM,KAAK,IAAIA,CAAI,IAAI,KAAK,IAAIA,CAAI;AAAA,MACpE;AAAA,MACD,IAAIjC,GAAO;AhClTd,YAAA7E;AgCmTI,QAAA6E,IAAQ+Y,GAAyB9W,GAAMjC,GAAOqZ,CAAgB,GAC9D,KAAK,IAAIpX,CAAI,IAAIjC;AACjB,YAAIgQ,IAAY,KAAK;AAErB,YAAIA,GAAW;AAEd,cAAI4G,KAASzb,IAAAoD,GAAeyR,GAAW/N,CAAI,MAA9B,gBAAA9G,EAAiC;AAE9C,UAAIyb,IACH5G,EAAU/N,CAAI,IAAIjC,IAElBgQ,EAAU,KAAK,EAAE,CAAC/N,CAAI,GAAGjC,EAAK,CAAE;AAAA,QAEtC;AAAA,MACA;AAAA,IACA,CAAG;AAAA,EACH,CAAE,GACDyZ,EAAQ,QAAQ,CAACG,MAAa;AAC7B,IAAAtb,GAAgBqb,EAAM,WAAWC,GAAU;AAAA,MAC1C,MAAM;AhCtUT,YAAAze;AgCuUI,gBAAOA,IAAA,KAAK,QAAL,gBAAAA,EAAWye;AAAA,MACtB;AAAA,IACA,CAAG;AAAA,EACH,CAAE,GACGF,MAEHC,IAAQD,EAAOC,CAAK,IAErB7E,EAAU;AAAA,EAA6B6E,GAChCA;AACR;ACjVA,MAAME,KAAa,CAACpI,MAClB,CAACA,EAAQ,QAAQ,4CAA4C,GAElDqI,KAAiB,CAAC3G,MAAyB;AAGtD,QAAMjC,IAFS,IAAI,UAAU,EACV,gBAAgB,SAASiC,CAAI,WAAW,WAAW,EACrD;AAEjB,SAAAjC,EAAK,iBAAiB,GAAG,EAAE,QAAQ,CAAChR,MAAM;AACpC,IAAC2Z,GAAW3Z,CAAC,KAKfA,EAAE;AAAA,MACA;AAAA,IAAA,MAGFA,EAAE,QAAQ,wBAAwB;AAAA,EACpC,CACD,GAEDgR,EAAK,iBAAiB,QAAQ,EAAE,QAAQ,CAAC6I,MAAW;AjCtBtD,QAAA5e;AiCuBQ,QAAA,CAAC0e,GAAWE,CAAM;AACpB;AAGI,UAAAtI,IAAU,SAAS,cAAc,4BAA4B;AACnE,IAAAA,EAAQ,cAAcsI,EAAO,aAC7B,MAAM,KAAKA,EAAO,UAAU,EAAE,QAAQ,CAACd,MAAS;AAC9C,MAAAxH,EAAQ,aAAawH,EAAK,MAAMA,EAAK,KAAK;AAAA,IAAA,CAC3C,IACM9d,IAAA4e,EAAA,eAAA,QAAA5e,EAAY,aAAasW,GAASsI;AAAA,EAAM,CAChD,GAGE7I,EAAA;AAAA,IACC;AAAA,EAAA,EAED,QAAQ,CAAC8I,MAAQ;AACZ,QAAA,CAACH,GAAWG,CAAG;AACjB;AAUF,QAP0B,MAAM,KAAKA,EAAI,UAAU,EAAE;AAAA,MACnD,CAACxT,MACC;AjC9CV,YAAArL;AiC8CU,eAAAqL,aAAgB,oBACfA,EAAK,aAAa,KAAK,eAAarL,IAAAqL,EAAK,gBAAL,gBAAArL,EAAkB,WACtDqL,EAAK,aAAa,KAAK,gBAAgBA,EAAK,aAAa;AAAA;AAAA,IAC9D,GAEuB;AACf,YAAAyT,IAAU,SAAS,cAAc,KAAK;AAE5C,eAAS7a,IAAI,GAAGA,IAAI4a,EAAI,WAAW,QAAQ5a,KAAK;AACxC,cAAA8a,IAAYF,EAAI,WAAW5a,CAAC;AAClC,YACE8a,aAAqB,oBACrBA,EAAU,aAAa,KAAK,aAC3BA,EAAU,aAAa,KAAK,gBAAgBA,EAAU,aAAa,MACpE;AACM,gBAAAC,IAAY,SAAS,cAAc,eAAe;AACxD,cAAI3G,IAAU;AACP,iBAAApU,IAAI4a,EAAI,WAAW,UAAQ;AAC1B,kBAAApS,IAAQoS,EAAI,WAAW5a,CAAC;AAC1B,gBAAAwI,EAAM,aAAa,KAAK;AAC1B,cAAAqS,EAAQ,cAAcrS,EAAM,aAC5B4L,KAAWyG,EAAQ;AAAA,qBACVrS,EAAM,aAAa;AACjB,cAAA4L,KAAA;AAAA,qBACF5L,aAAiB;AAC1B,cAAA4L,KAAW5L,EAAM;AAAA;AAEjB;AAEF,YAAAA,EAAM,OAAO;AAAA,UAAA;AAEf,UAAAoS,EAAI,aAAaG,GAAWH,EAAI,WAAW5a,CAAC,CAAC,GAC7C+a,EAAU,YAAY3G,GACtBpU;AAAA,QAAA;AAAA,MACF;AAAA,IACF;AAAA,EACF,CACD,GAEI8R,EAAK;AACd,GAEakJ,KAAgB,CAACjH,MAAyB;AACjD,MAAA,mBAAmB,KAAKA,CAAI;AACvB,WAAA;AAIT,QAAMkH,IADS,IAAI,UAAU,EACV,gBAAgBlH,GAAM,WAAW;AAEpD,EAAAkH,EAAI,KAAK,iBAAiB,eAAe,EAAE,QAAQ,CAACF,MAAc;AAChE,UAAMxU,IAASwU,EAAU;AACzB,QAAKxU,GAEL;AAAA,aAAOwU,EAAU;AACR,QAAAxU,EAAA,aAAawU,EAAU,YAAYA,CAAS;AAErD,MAAAA,EAAU,OAAO;AAAA;AAAA,EAAA,CAClB,GAEDE,EAAI,KAAK,iBAAiB,gBAAgB,EAAE,QAAQ,CAAC5I,MAAY;AAC/D,IAAAA,EAAQ,gBAAgB,WAAW;AAAA,EAAA,CACpC,GAED4I,EAAI,KAAK,iBAAiB,kBAAkB,EAAE,QAAQ,CAAC5I,MAAY;AACjE,IAAAA,EAAQ,gBAAgB,gBAAgB;AAAA,EAAA,CACzC,GAED4I,EAAI,KACD,iBAA8B,6CAA6C,EAC3E,QAAQ,CAAC5I,MAAY;AACpB,UAAM6I,IAAa,KAAK;AAAA,MACtB7I,EAAQ,QAAQ,mCAAmC;AAAA,IACrD;AACO,WAAA,QAAQ6I,CAAU,EAAE,QAAQ,CAAC,CAAC1Z,GAAKZ,CAAK,MAAM;AAC3C,MAAAyR,EAAA,aAAa7Q,GAAKZ,CAAK;AAAA,IAAA,CAChC,GACDyR,EAAQ,gBAAgB,2CAA2C;AAAA,EAAA,CACpE,GAEH4I,EAAI,KACD,iBAA8B,oCAAoC,EAClE,QAAQ,CAAC5I,MAAY;AACpB,IAAAA,EAAQ,YAAYA,EAAQ,aAAa,kCAAkC,KAAK,IAChFA,EAAQ,gBAAgB,kCAAkC;AAAA,EAAA,CAC3D,GAEH4I,EAAI,KAAK,iBAAiB,4BAA4B,EAAE,QAAQ,CAACN,MAAW;AjCrI9E,QAAA5e;AiCsIU,UAAAsW,IAAU,SAAS,cAAc,QAAQ;AAC/C,IAAAA,EAAQ,cAAcsI,EAAO,aAC7B,MAAM,KAAKA,EAAO,UAAU,EAAE,QAAQ,CAACd,MAAS;AAC9C,MAAAxH,EAAQ,aAAawH,EAAK,MAAMA,EAAK,KAAK;AAAA,IAAA,CAC3C,IACM9d,IAAA4e,EAAA,eAAA,QAAA5e,EAAY,aAAasW,GAASsI;AAAA,EAAM,CAChD;AAEK,QAAAQ,IAAMF,EAAI,KAAK;AACjB,SAAA,mBAAmB,KAAKE,CAAG,IACtB,KAEFA;AACT,GAEaC,KAAU,CAACxa,MAClBA,MAAU,OAAO,qBAAqB,KAAKA,CAAK,IAC3C,GAAGA,CAAK,OAEVA,GCzJIya,KAAqB;;;;;;;;QCExBC,IAAKC,GAAAC,GAAA,SAAA,CAAA;MACTC;AACJC,EAAAA,SAAc;AACR,QAAAD,GAAW;YACPE,IAAOF,EAAU,sBAAqB;AACxC,MAAAE,EAAK,IAAIN,KACXI,EAAU,MAAM,uBAAuBE,EAAK,IAAIN,GAAkB,QACzDM,EAAK,IAAIA,EAAK,QAAQ,OAAO,aAAaN,OACnDI,EAAU,MAAM,OAAI,cAAiBE,EAAK,IAAIA,EAAK,QAAQ,OAAO,aAAaN,EAAkB;AAAA;GAGtG;;gBAGaO,GAAAhB,GAAA,CAAAiB,MAAAJ,aAAAA,CAAS,kBACtBH,EAAK,CAAA,CAAA;;;;;;;;;;ACdR,MAAMQ,KAAqB,KACrBC,KAAoB,IACpBC,KAAc;AAEpB,IAAIC,KAAY,GACZC,KAAYJ,IACZK;AAES,MAAAC,KAAU,CAAChV,GAAmBkU,MAAmB;AAC5D,MAAI,OAAO,WAAW,mBAAmB,EAAE;AACzC;AAGE,MAAAe,GACAC;AAMJ,EALIhB,IACFlU,EAAK,QAAQkU,IAEbA,IAAQlU,EAAK,OAEVkU,MAGAlU,EAAA,iBAAiB,cAAc,MAAM;AACxC,IAAAA,EAAK,QAAQ,IAEb,aAAakV,CAAO,GACpBA,IAAU,WAAW,MAAM;AACzB,MAAID,MAGCjV,EAAA,aAAa,oBAAoB,6BAA6B,GACnEiV,IAAenH,GAAMqH,IAAS;AAAA,QAC5B,QAAQnV;AAAA,QACR,OAAO;AAAA,UACL,OAAAkU;AAAA,QAAA;AAAA,MACF,CACD,GACDW,MACYC,KAAAH;AAAA,OACXG,EAAS;AAAA,EAAA,CACb,GACI9U,EAAA,iBAAiB,cAAc,MAAM;AAKxC,IAJAA,EAAK,QAAQkU,GAEb,aAAagB,CAAO,GAEfD,MAGLjV,EAAK,gBAAgB,kBAAkB,GACvC0O,GAAQuG,CAAY,GACLA,IAAA,QACfJ,MAEA,aAAaE,EAAY,GACzBA,KAAe,WAAW,MAAM;AAC9B,MAAIF,OAAc,MACJC,KAAAJ;AAAA,OAEbE,EAAW;AAAA,EAAA,CACf;AACH;AC9DO,MAAMQ,WAEH,YAAY;AAAA,EAWpB,cAAc;AACN,UAAA;AAPR,IAAArD,EAAA;AACA,IAAAA,EAAA,iBAAmB,CAAC;AAOlB,SAAK,aAAa,EAAE,MAAM,OAAA,CAAQ;AAAA,EAAA;AAAA,EAZpC,IAAI,aAAyB;AAC3B,WAAO,MAAM;AAAA,EAAA;AAAA,EAKf,IAAI,SAAmC;ArCZzC,QAAApd;AqCaI,YAAOA,IAAA,KAAK,WAAL,gBAAAA,EAAa;AAAA,EAAA;AAAA,EAQtB,aAAa0gB,GAAgB/N,GAAkB;AAC7C,SAAK,SAAS+N,GACd,KAAK,UAAU/N;AAAA,EAAA;AAAA,EAGjB,iBAAiB;AAAA,EAAA;AACnB;AC3BA,MAAegO,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCITC,KAAmB,SAAS,cAAc,OAAO;AACvDA,GAAiB,cAAczG;AA2BxB,MAAM0G,WAGHJ,GAA0B;AAAA,EAClC,cAAc;AACN,UAAA,GACN,KAAK,WAAW,YAAYG,GAAiB,UAAU,EAAI,CAAC;AAAA,EAAA;AAAA,EAG9D,oBAAoB;AAClB,UAAME,IAAS,KAAK,WAAW,cAAc,QAAQ;AACrD,IAAIA,KACFT,GAAQS,CAAM;AAAA,EAChB;AAEJ;ACvBO,MAAMC,WAEHN,GAA0B;AAAC;AC1BrC,MAAeO,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCITC,KAAqB,SAAS,cAAc,OAAO;AACzDA,GAAmB,cAAc9G;AAE1B,MAAM+G,KAAwB;AAAA,EACnC,SAAS;AAAA,EACT,MAAM;AACR;AAmCO,MAAeC,WAEZV,GAA0B;AAAA,EAYlC,cAAc;AACN,UAAA;AAXD,IAAArD,EAAA;AAYL,SAAK,WAAW,YAAY6D,GAAmB,UAAU,EAAI,CAAC;AAAA,EAAA;AAAA,EAGhE,wBAGkD;AACzC,WAAA,QAAQ,QAAQC,GAAsB,OAAO;AAAA,EAAA;AAAA,EAGtD,wBAAwB7I,GAMrB;AACD,SAAK,UAAUA;AAAA,EAAA;AAAA,EAGjB,cAAcA,GAAiB;A1CjFjC,QAAArY,GAAAohB;A0CkFS,KAAAphB,IAAA,KAAA,YAAA,QAAAA,EAAS,YAAY,MAAM;A1ClFpC,UAAAA,GAAAohB;A0CmFM,OAAAphB,IAAA,KAAK,WAAL,QAAAA,EAAa,QAAQ,OAAO,QAAQ,QACpCohB,IAAA,KAAK,WAAL,QAAAA,EAAa,SAAS;AAAA,QACpB,OAAO/I,KAAY,WAAWsG,GAAetG,CAAO,IAAIA;AAAA;AAAA,IAC1D,KAEF+I,IAAA,KAAK,kBAAL,QAAAA,EAAoB,cAAc,IAAI,MAAM,yBAAyB;AAAA,EAAC;AAAA,EAGxE,gBAAgB;AACR,UAAA,IAAI,MAAM,kCAAkC;AAAA,EAAA;AAEtD;AA9CEhE,EAHoB+D,IAGb,YAAWD;AChDpB,MAAe/G,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCMTkH,KAAuB,SAAS,cAAc,OAAO;AAC3DA,GAAqB,cAAclH;AAC5B,MAAMmH,WAA+Bb,GAAiB;AAAA,EAI3D,cAAc;AACN,UAAA;AAJR,IAAArD,EAAA;AACA,IAAAA,EAAA;AAIE,SAAK,WAAW,YAAYiE,GAAqB,UAAU,EAAI,CAAC;AAAA,EAAA;AAAA,EAGlE,oBAAoB;AACb,SAAA,UAAU,KAAK,QAAQ;AAAA,EAAA;AAAA,EAG9B,cAAchJ,GAAiB;A5CrBjC,QAAArY;A4CsBS,KAAAA,IAAA,KAAA,WAAA,QAAAA,EACD,QACD,QACA,mBAEA,cAAcqY,GACd;AAAA,EAAI;AAEX;;;;;;;;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]}