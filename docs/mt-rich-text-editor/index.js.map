{"version":3,"file":"index.js","sources":["../../../node_modules/i18next/dist/esm/i18next.js","../src/i18n.ts","../../../node_modules/orderedmap/dist/index.js","../../../node_modules/prosemirror-model/dist/index.js","../../../node_modules/prosemirror-transform/dist/index.js","../../../node_modules/prosemirror-state/dist/index.js","../../../node_modules/prosemirror-view/dist/index.js","../../../node_modules/w3c-keyname/index.js","../../../node_modules/prosemirror-keymap/dist/index.js","../../../node_modules/prosemirror-commands/dist/index.js","../../../node_modules/prosemirror-schema-list/dist/index.js","../../../node_modules/@tiptap/core/dist/index.js","../../../node_modules/@tiptap/extension-document/dist/index.js","../../../node_modules/@tiptap/extension-text/dist/index.js","../../../node_modules/@tiptap/extension-subscript/dist/index.js","../../../node_modules/@tiptap/extension-superscript/dist/index.js","../../../node_modules/@tiptap/extension-image/dist/index.js","../../../node_modules/@tiptap/extension-hard-break/dist/index.js","../../../node_modules/@tiptap/extension-italic/dist/index.js","../../../node_modules/@tiptap/extension-underline/dist/index.js","../../../node_modules/@tiptap/extension-blockquote/dist/index.js","../../../node_modules/@tiptap/extension-bullet-list/dist/index.js","../../../node_modules/@tiptap/extension-heading/dist/index.js","../../../node_modules/@tiptap/extension-horizontal-rule/dist/index.js","../../../node_modules/@tiptap/extension-ordered-list/dist/index.js","../../../node_modules/@tiptap/extension-strike/dist/index.js","../../../node_modules/prosemirror-dropcursor/dist/index.js","../../../node_modules/@tiptap/extension-dropcursor/dist/index.js","../../../node_modules/prosemirror-gapcursor/dist/index.js","../../../node_modules/@tiptap/extension-gapcursor/dist/index.js","../../../node_modules/@tiptap/extension-text-align/dist/index.js","../../../node_modules/@tiptap/extension-text-style/dist/index.js","../../../node_modules/@tiptap/extension-color/dist/index.js","../src/tiptap/extension/experiments/iframe.ts","../../../node_modules/prosemirror-tables/dist/index.js","../../../node_modules/@tiptap/extension-table/dist/index.js","../src/tiptap/extension/table.ts","../../../node_modules/@tiptap/extension-table-cell/dist/index.js","../src/tiptap/extension/table-cell.ts","../../../node_modules/@tiptap/extension-table-header/dist/index.js","../src/tiptap/extension/table-header.ts","../../../node_modules/@tiptap/extension-table-row/dist/index.js","../src/tiptap/extension/indent.ts","../src/tiptap/extension/div.ts","../src/tiptap/extension/span.ts","../../../node_modules/@tiptap/extension-bold/dist/index.js","../src/tiptap/extension/bold.ts","../src/tiptap/extension/block-link.ts","../../../node_modules/linkifyjs/dist/linkify.es.js","../../../node_modules/@tiptap/extension-link/dist/index.js","../src/tiptap/extension/inline-link.ts","../../../node_modules/@tiptap/extension-paragraph/dist/index.js","../src/tiptap/extension/paragraph.ts","../src/tiptap/extension/text-block.ts","../src/tiptap/extension/pre.ts","../src/tiptap/extension/code.ts","../src/tiptap/extension/description-list.ts","../src/tiptap/extension/description-term.ts","../src/tiptap/extension/description-details.ts","../src/tiptap/extension/summary.ts","../../../node_modules/@tiptap/extension-list-item/dist/index.js","../src/tiptap/extension/list-item.ts","../src/tiptap/extension/background-color.ts","../src/tiptap/extension/script.ts","../src/tiptap/extension/embed-object.ts","../src/tiptap/extension/markdown.ts","../../../node_modules/rope-sequence/dist/index.js","../../../node_modules/prosemirror-history/dist/index.js","../../../node_modules/@tiptap/extension-history/dist/index.js","../src/tiptap/extension/history.ts","../src/tiptap/extension/movable-type/global.ts","../src/tiptap/extension/movable-type/mt-tag.ts","../src/tiptap/extension/movable-type.ts","../src/tiptap/extension.ts","../../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../../node_modules/svelte/src/internal/client/dom/blocks/html.js","../../../node_modules/svelte/src/internal/client/dom/blocks/slot.js","../../../node_modules/svelte/src/internal/client/dom/blocks/svelte-element.js","../../../node_modules/svelte/src/internal/client/dom/elements/actions.js","../../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../../node_modules/svelte/src/internal/client/timing.js","../../../node_modules/svelte/src/internal/client/loop.js","../../../node_modules/svelte/src/internal/client/dom/elements/transitions.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/select.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../../../node_modules/svelte/src/internal/client/dom/legacy/event-modifiers.js","../../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../../../node_modules/svelte/src/internal/client/dom/legacy/misc.js","../../../node_modules/svelte/src/index-client.js","../src/util/event.ts","../../../node_modules/platform/platform.js","../src/util/keyboardShortcut.ts","../src/ui/icon/insertHtml.svg?raw","../../../node_modules/svelte/src/internal/flags/legacy.js","../../../node_modules/@movabletype/svelte-components/dist/HtmlElement.svelte","../../../node_modules/@movabletype/svelte-components/dist/ComponentList.svelte","../../../node_modules/svelte/src/transition/index.js","../../../node_modules/svelte/src/easing/index.js","../../../node_modules/@movabletype/svelte-components/dist/context.js","../../../node_modules/@movabletype/svelte-components/dist/Modal.svelte","../../../node_modules/@movabletype/svelte-components/dist/ModalContent.svelte","../../../node_modules/@movabletype/svelte-components/dist/Pager.svelte","../src/toolbar/item/insertHtml/Modal.svelte","../src/ui/icon/source.svg?raw","../../../node_modules/js-beautify/js/src/core/output.js","../../../node_modules/js-beautify/js/src/core/token.js","../../../node_modules/js-beautify/js/src/javascript/acorn.js","../../../node_modules/js-beautify/js/src/core/options.js","../../../node_modules/js-beautify/js/src/javascript/options.js","../../../node_modules/js-beautify/js/src/core/inputscanner.js","../../../node_modules/js-beautify/js/src/core/tokenstream.js","../../../node_modules/js-beautify/js/src/core/pattern.js","../../../node_modules/js-beautify/js/src/core/whitespacepattern.js","../../../node_modules/js-beautify/js/src/core/tokenizer.js","../../../node_modules/js-beautify/js/src/core/directives.js","../../../node_modules/js-beautify/js/src/core/templatablepattern.js","../../../node_modules/js-beautify/js/src/javascript/tokenizer.js","../../../node_modules/js-beautify/js/src/javascript/beautifier.js","../../../node_modules/js-beautify/js/src/javascript/index.js","../../../node_modules/js-beautify/js/src/css/options.js","../../../node_modules/js-beautify/js/src/css/beautifier.js","../../../node_modules/js-beautify/js/src/css/index.js","../../../node_modules/js-beautify/js/src/html/options.js","../../../node_modules/js-beautify/js/src/html/tokenizer.js","../../../node_modules/js-beautify/js/src/html/beautifier.js","../../../node_modules/js-beautify/js/src/html/index.js","../../../node_modules/js-beautify/js/src/index.js","../../../node_modules/js-beautify/js/index.js","../src/toolbar/item/source/Modal.svelte","../src/ui/icon/bold.svg?raw","../src/ui/icon/italic.svg?raw","../src/ui/icon/underline.svg?raw","../src/ui/icon/strike.svg?raw","../src/ui/icon/bulletList.svg?raw","../src/ui/icon/orderedList.svg?raw","../src/ui/icon/horizontalRule.svg?raw","../src/ui/icon/blockquote.svg?raw","../src/ui/icon/unlink.svg?raw","../src/ui/icon/undo.svg?raw","../src/ui/icon/redo.svg?raw","../src/ui/icon/removeFormat.svg?raw","../src/ui/icon/alignLeft.svg?raw","../src/ui/icon/alignCenter.svg?raw","../src/ui/icon/alignRight.svg?raw","../src/ui/icon/indent.svg?raw","../src/ui/icon/outdent.svg?raw","../src/ui/icon/fullScreen.svg?raw","../src/toolbar/item/simple-buttons.ts","../src/ui/item/svelte.ts","../src/toolbar/item/svelte.ts","../src/ui/icon/link.svg?raw","../src/context-toolbar/ContextToolbar.svelte","../src/context-toolbar/link/Toolbar.svelte","../src/context-toolbar/link/index.ts","../src/ui/link/Modal.svelte","../src/toolbar/item/link/common.ts","../src/toolbar/item/link/Button.svelte","../src/ui/icon/externalLink.svg?raw","../src/toolbar/item/link/Preview.svelte","../src/ui/icon/edit.svg?raw","../src/toolbar/item/link/Edit.svelte","../src/ui/icon/file.svg?raw","../src/toolbar/item/file/Button.svelte","../src/ui/icon/image.svg?raw","../src/context-toolbar/image/Toolbar.svelte","../src/context-toolbar/image/index.ts","../src/toolbar/item/image/Button.svelte","../src/ui/icon/delete.svg?raw","../src/toolbar/item/image/Delete.svelte","../src/toolbar/item/image/Edit.svelte","../src/ui/icon/structure.svg?raw","../src/toolbar/item/structure/Button.svelte","../src/ui/icon/table.svg?raw","../src/toolbar/item/table/TableInsertPanel.svelte","../src/toolbar/item/table/TablePropertiesPanel.svelte","../src/toolbar/item/table/table-properties.ts","../src/toolbar/item/table/CellPropertiesPanel.svelte","../src/toolbar/item/table/cell-properties.ts","../src/toolbar/item/table/RowPropertiesPanel.svelte","../src/toolbar/item/table/Button.svelte","../src/toolbar/item/block/Select.svelte","../src/ui/icon/foregroundColor.svg?raw","../src/toolbar/item/color/Panel.svelte","../src/toolbar/item/color/ForegroundColor.svelte","../src/ui/icon/backgroundColor.svg?raw","../src/toolbar/item/color/BackgroundColor.svelte","../src/ui/icon/boilerplate.svg?raw","../../../node_modules/dompurify/dist/purify.es.mjs","../src/toolbar/item/boilerplate/Modal.svelte","../src/toolbar/item/boilerplate/Button.svelte","../src/toolbar/item/index.ts","../src/statusbar/item/index.ts","../src/paste-menu/item/svelte.ts","../src/paste-menu/item/HtmlModal.svelte","../src/paste-menu/item/Html.svelte","../src/paste-menu/item/Link.svelte","../src/paste-menu/item/embed/Modal.svelte","../src/paste-menu/item/Embed.svelte","../src/paste-menu/item/EmbedInline.svelte","../src/paste-menu/item/Markdown.svelte","../src/paste-menu/item/index.ts","../src/ui/icon/heading1.svg?raw","../src/ui/icon/heading2.svg?raw","../src/ui/icon/heading3.svg?raw","../src/ui/icon/heading4.svg?raw","../src/ui/icon/heading5.svg?raw","../src/ui/icon/heading6.svg?raw","../src/quick-action/item/heading.ts","../src/quick-action/item/index.ts","../src/ui/item/registry.ts","../src/toolbar/Toolbar.svelte","../src/toolbar/index.ts","../src/statusbar/Statusbar.svelte","../src/statusbar/index.ts","../src/ui/icon/clipboard.svg?raw","../src/paste-menu/PasteMenu.svelte","../src/paste-menu/index.ts","../src/quick-action/QuickAction.svelte","../src/quick-action/index.ts","../src/structure-mode/StructureModal.svelte","../src/structure-mode/index.ts","../src/util/dom.ts","../../../node_modules/prosemirror-view/style/prosemirror.css?raw","../src/editor.ts","../src/editor-manager.ts"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key == null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = options.count !== undefined && !isString(options.count);\n    const hasDefaultValue = Translator.hasDefaultValue(options);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n    const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n    const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey?.[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.translator?.translate(...args);\n  }\n  exists() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport i18next from \"i18next\";\nimport i18n from \"i18next\";\nimport ja from \"../locales/ja/translation.json\";\nimport en from \"../locales/en/translation.json\";\n\ni18next.init({\n  fallbackLng: \"en\",\n  resources: {\n    ja: {\n      translation: ja,\n    },\n    en: {\n      translation: en,\n    },\n  },\n});\n\nexport default i18n;\n\ntype TFunction = {\n  (strings: TemplateStringsArray, ...values: any[]): string;\n  (string: string): string;\n};\n\nexport const t: TFunction = ((...args: any[]) => {\n  if (typeof args[0] === \"string\") {\n    return i18n.t(...(args as any));\n  } else {\n    let res = \"\";\n    const [strings, ...values] = args;\n    for (let i = 0; i < strings.length; i++) {\n      res += strings[i] + i18n.t(values[i]);\n    }\n    return res;\n  }\n}) as any;\n","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () → Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The child nodes in this fragment.\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", first = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            let nodeText = node.isText ? node.text.slice(Math.max(from, pos) - pos, to - pos)\n                : !node.isLeaf ? \"\"\n                    : leafText ? (typeof leafText === \"function\" ? leafText(node) : leafText)\n                        : node.type.spec.leafText ? node.type.spec.leafText(node)\n                            : \"\";\n            if (node.isBlock && (node.isLeaf && nodeText || node.isTextblock) && blockSeparator) {\n                if (first)\n                    first = false;\n                else\n                    text += blockSeparator;\n            }\n            text += nodeText;\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. @internal\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        let mark = type.create(json.attrs);\n        type.checkAttrs(mark.attrs);\n        return mark;\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        let cache = resolveCache.get(doc);\n        if (cache) {\n            for (let i = 0; i < cache.elts.length; i++) {\n                let elt = cache.elts[i];\n                if (elt.pos == pos)\n                    return elt;\n            }\n        }\n        else {\n            resolveCache.set(doc, cache = new ResolveCache);\n        }\n        let result = cache.elts[cache.i] = ResolvedPos.resolve(doc, pos);\n        cache.i = (cache.i + 1) % resolveCacheSize;\n        return result;\n    }\n}\nclass ResolveCache {\n    constructor() {\n        this.elts = [];\n        this.i = 0;\n    }\n}\nconst resolveCacheSize = 12, resolveCache = new WeakMap();\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The array of this node's child nodes.\n    */\n    get children() { return this.content.content; }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    position relative to the original node (method receiver),\n    its parent node, and its child index. When the callback returns\n    false for a given node, that node's children will not be\n    recursed over. The last parameter can be used to specify a\n    starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise an exception when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        this.type.checkAttrs(this.attrs);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++) {\n            let mark = this.marks[i];\n            mark.type.checkAttrs(mark.attrs);\n            copy = mark.addToSet(copy);\n        }\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = undefined;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        let node = schema.nodeType(json.type).create(json.attrs, content, marks);\n        node.type.checkAttrs(node.attrs);\n        return node;\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.isInGroup(name))\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction checkAttrs(attrs, values, type, name) {\n    for (let name in values)\n        if (!(name in attrs))\n            throw new RangeError(`Unsupported attribute ${name} for ${type} of type ${name}`);\n    for (let name in attrs) {\n        let attr = attrs[name];\n        if (attr.validate)\n            attr.validate(values[name]);\n    }\n}\nfunction initAttrs(typeName, attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(typeName, name, attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(name, spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    Return true when this node type is part of the given\n    [group](https://prosemirror.net/docs/ref/#model.NodeSpec.group).\n    */\n    isInGroup(group) {\n        return this.groups.indexOf(group) > -1;\n    }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"node\", this.name);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\nfunction validateType(typeName, attrName, type) {\n    let types = type.split(\"|\");\n    return (value) => {\n        let name = value === null ? \"null\" : typeof value;\n        if (types.indexOf(name) < 0)\n            throw new RangeError(`Expected value of type ${types} for attribute ${attrName} on type ${typeName}, got ${name}`);\n    };\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(typeName, attrName, options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n        this.validate = typeof options.validate == \"string\" ? validateType(typeName, attrName, options.validate) : options.validate;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(name, spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"mark\", this.name);\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        The [linebreak\n        replacement](https://prosemirror.net/docs/ref/#model.NodeSpec.linebreakReplacement) node defined\n        in this schema, if any.\n        */\n        this.linebreakReplacement = null;\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            if (type.spec.linebreakReplacement) {\n                if (this.linebreakReplacement)\n                    throw new RangeError(\"Multiple linebreak nodes defined\");\n                if (!type.isInline || !type.isLeaf)\n                    throw new RangeError(\"Linebreak replacement nodes must be inline leaf nodes\");\n                this.linebreakReplacement = type;\n            }\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\nfunction isTagRule(rule) { return rule.tag != null; }\nfunction isStyleRule(rule) { return rule.style != null; }\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        let matchedStyles = this.matchedStyles = [];\n        rules.forEach(rule => {\n            if (isTagRule(rule)) {\n                this.tags.push(rule);\n            }\n            else if (isStyleRule(rule)) {\n                let prop = /[^=]*/.exec(rule.style)[0];\n                if (matchedStyles.indexOf(prop) < 0)\n                    matchedStyles.push(prop);\n                this.styles.push(rule);\n            }\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, marks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        this.localPreserveWS = false;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom, marks) {\n        if (dom.nodeType == 3)\n            this.addTextNode(dom, marks);\n        else if (dom.nodeType == 1)\n            this.addElement(dom, marks);\n    }\n    addTextNode(dom, marks) {\n        let value = dom.nodeValue;\n        let top = this.top, preserveWS = (top.options & OPT_PRESERVE_WS_FULL) ? \"full\"\n            : this.localPreserveWS || (top.options & OPT_PRESERVE_WS) > 0;\n        if (preserveWS === \"full\" ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!preserveWS) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (preserveWS !== \"full\") {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value), marks);\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, marks, matchAfter) {\n        let outerWS = this.localPreserveWS, top = this.top;\n        if (dom.tagName == \"PRE\" || /pre/.test(dom.style && dom.style.whiteSpace))\n            this.localPreserveWS = true;\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        out: if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom, marks);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom, marks);\n                break out;\n            }\n            let innerMarks = rule && rule.skip ? marks : this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addAll(dom, innerMarks);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            let innerMarks = this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addElementByRule(dom, rule, innerMarks, rule.consuming === false ? ruleID : undefined);\n        }\n        this.localPreserveWS = outerWS;\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom, marks) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"), marks);\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom, marks) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"), marks);\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an updated array of marks, or null to indicate some of the\n    // styles had a rule with `ignore` set.\n    readStyles(dom, marks) {\n        let styles = dom.style;\n        // Because many properties will only show up in 'normalized' form\n        // in `style.item` (i.e. text-decoration becomes\n        // text-decoration-line, text-decoration-color, etc), we directly\n        // query the styles mentioned in our rules instead of iterating\n        // over the items.\n        if (styles && styles.length)\n            for (let i = 0; i < this.parser.matchedStyles.length; i++) {\n                let name = this.parser.matchedStyles[i], value = styles.getPropertyValue(name);\n                if (value)\n                    for (let after = undefined;;) {\n                        let rule = this.parser.matchStyle(name, value, this, after);\n                        if (!rule)\n                            break;\n                        if (rule.ignore)\n                            return null;\n                        if (rule.clearMark)\n                            marks = marks.filter(m => !rule.clearMark(m));\n                        else\n                            marks = marks.concat(this.parser.schema.marks[rule.mark].create(rule.attrs));\n                        if (rule.consuming === false)\n                            after = rule;\n                        else\n                            break;\n                    }\n            }\n        return marks;\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, marks, continueAfter) {\n        let sync, nodeType;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                let inner = this.enter(nodeType, rule.attrs || null, marks, rule.preserveWhitespace);\n                if (inner) {\n                    sync = true;\n                    marks = inner;\n                }\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs), marks)) {\n                this.leafFallback(dom, marks);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            marks = marks.concat(markType.create(rule.attrs));\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, marks, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node, marks));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM, marks);\n            this.findAround(dom, contentDOM, false);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, marks, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom, marks);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node, marks) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return null;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            marks = this.enterInner(route[i], null, marks, false);\n        return marks;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node, marks) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                marks = this.enterInner(block, null, marks);\n        }\n        let innerMarks = this.findPlace(node, marks);\n        if (innerMarks) {\n            this.closeExtra();\n            let top = this.top;\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let nodeMarks = Mark.none;\n            for (let m of innerMarks.concat(node.marks))\n                if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, node.type))\n                    nodeMarks = m.addToSet(nodeMarks);\n            top.content.push(node.mark(nodeMarks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, marks, preserveWS) {\n        let innerMarks = this.findPlace(type.create(attrs), marks);\n        if (innerMarks)\n            innerMarks = this.enterInner(type, attrs, marks, true, preserveWS);\n        return innerMarks;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs, marks, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        let applyMarks = Mark.none;\n        marks = marks.filter(m => {\n            if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, type)) {\n                applyMarks = m.addToSet(applyMarks);\n                return false;\n            }\n            return true;\n        });\n        this.nodes.push(new NodeContext(type, attrs, applyMarks, solid, null, options));\n        this.open++;\n        return marks;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(!!(this.isOpen || this.options.topOpen));\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--) {\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n            else if (this.localPreserveWS) {\n                this.nodes[i].options |= OPT_PRESERVE_WS;\n            }\n        }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && !next.isInGroup(part)))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = renderSpec(doc(options), this.nodes[node.type.name](node), null, node.attrs);\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && renderSpec(doc(options), toDOM(mark, inline), null, mark.attrs);\n    }\n    static renderSpec(doc, structure, xmlNS = null, blockArraysIn) {\n        return renderSpec(doc, structure, xmlNS, blockArraysIn);\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\nconst suspiciousAttributeCache = new WeakMap();\nfunction suspiciousAttributes(attrs) {\n    let value = suspiciousAttributeCache.get(attrs);\n    if (value === undefined)\n        suspiciousAttributeCache.set(attrs, value = suspiciousAttributesInner(attrs));\n    return value;\n}\nfunction suspiciousAttributesInner(attrs) {\n    let result = null;\n    function scan(value) {\n        if (value && typeof value == \"object\") {\n            if (Array.isArray(value)) {\n                if (typeof value[0] == \"string\") {\n                    if (!result)\n                        result = [];\n                    result.push(value);\n                }\n                else {\n                    for (let i = 0; i < value.length; i++)\n                        scan(value[i]);\n                }\n            }\n            else {\n                for (let prop in value)\n                    scan(value[prop]);\n            }\n        }\n    }\n    scan(attrs);\n    return result;\n}\nfunction renderSpec(doc, structure, xmlNS, blockArraysIn) {\n    if (typeof structure == \"string\")\n        return { dom: doc.createTextNode(structure) };\n    if (structure.nodeType != null)\n        return { dom: structure };\n    if (structure.dom && structure.dom.nodeType != null)\n        return structure;\n    let tagName = structure[0], suspicious;\n    if (typeof tagName != \"string\")\n        throw new RangeError(\"Invalid array passed to renderSpec\");\n    if (blockArraysIn && (suspicious = suspiciousAttributes(blockArraysIn)) &&\n        suspicious.indexOf(structure) > -1)\n        throw new RangeError(\"Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.\");\n    let space = tagName.indexOf(\" \");\n    if (space > 0) {\n        xmlNS = tagName.slice(0, space);\n        tagName = tagName.slice(space + 1);\n    }\n    let contentDOM;\n    let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n    let attrs = structure[1], start = 1;\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n        start = 2;\n        for (let name in attrs)\n            if (attrs[name] != null) {\n                let space = name.indexOf(\" \");\n                if (space > 0)\n                    dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                else\n                    dom.setAttribute(name, attrs[name]);\n            }\n    }\n    for (let i = start; i < structure.length; i++) {\n        let child = structure[i];\n        if (child === 0) {\n            if (i < structure.length - 1 || i > start)\n                throw new RangeError(\"Content hole must be the only child of its parent node\");\n            return { dom, contentDOM: dom };\n        }\n        else {\n            let { dom: inner, contentDOM: innerContent } = renderSpec(doc, child, xmlNS, blockArraysIn);\n            dom.appendChild(inner);\n            if (innerContent) {\n                if (contentDOM)\n                    throw new RangeError(\"Multiple content holes\");\n                contentDOM = innerContent;\n            }\n        }\n    }\n    return { dom, contentDOM };\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n","import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = this.from == this.gapFrom ? from.pos : mapping.map(this.gapFrom, -1);\n        let gapTo = this.to == this.gapTo ? to.pos : mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch, clearNewlines = true) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (clearNewlines && child.isText && parentType.whitespace != \"pre\") {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        let attrsHere = typeof attrs == \"function\" ? attrs(node) : attrs;\n        if (node.isTextblock && !node.hasMarkup(type, attrsHere) &&\n            canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            let convertNewlines = null;\n            if (type.schema.linebreakReplacement) {\n                let pre = type.whitespace == \"pre\", supportLinebreak = !!type.contentMatch.matchType(type.schema.linebreakReplacement);\n                if (pre && !supportLinebreak)\n                    convertNewlines = false;\n                else if (!pre && supportLinebreak)\n                    convertNewlines = true;\n            }\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            if (convertNewlines === false)\n                replaceLinebreaks(tr, node, pos, mapFrom);\n            clearIncompatible(tr, tr.mapping.slice(mapFrom).map(pos, 1), type, undefined, convertNewlines === null);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrsHere, null, node.marks)), 0, 0), 1, true));\n            if (convertNewlines === true)\n                replaceNewlines(tr, node, pos, mapFrom);\n            return false;\n        }\n    });\n}\nfunction replaceNewlines(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.isText) {\n            let m, newline = /\\r?\\n|\\r/g;\n            while (m = newline.exec(child.text)) {\n                let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset + m.index);\n                tr.replaceWith(start, start + 1, node.type.schema.linebreakReplacement.create());\n            }\n        }\n    });\n}\nfunction replaceLinebreaks(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.type == child.type.schema.linebreakReplacement) {\n            let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset);\n            tr.replaceWith(start, start + 1, node.type.schema.text(\"\\n\"));\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction canAppendWithSubstitutedLinebreaks(a, b) {\n    if (!b.content.size)\n        a.type.compatibleContent(b.type);\n    let match = a.contentMatchAt(a.childCount);\n    let { linebreakReplacement } = a.type.schema;\n    for (let i = 0; i < b.childCount; i++) {\n        let child = b.child(i);\n        let type = child.type == linebreakReplacement ? a.type.schema.nodes.text : child.type;\n        match = match.matchType(type);\n        if (!match)\n            return false;\n        if (!a.type.allowsMarks(child.marks))\n            return false;\n    }\n    return match.validEnd;\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && canAppendWithSubstitutedLinebreaks(a, b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let convertNewlines = null;\n    let { linebreakReplacement } = tr.doc.type.schema;\n    let $before = tr.doc.resolve(pos - depth), beforeType = $before.node().type;\n    if (linebreakReplacement && beforeType.inlineContent) {\n        let pre = beforeType.whitespace == \"pre\";\n        let supportLinebreak = !!beforeType.contentMatch.matchType(linebreakReplacement);\n        if (pre && !supportLinebreak)\n            convertNewlines = false;\n        else if (!pre && supportLinebreak)\n            convertNewlines = true;\n    }\n    let mapFrom = tr.steps.length;\n    if (convertNewlines === false) {\n        let $after = tr.doc.resolve(pos + depth);\n        replaceLinebreaks(tr, $after.node(), $after.before(), mapFrom);\n    }\n    if (beforeType.inlineContent)\n        clearIncompatible(tr, pos + depth - 1, beforeType, $before.node().contentMatchAt($before.index()), convertNewlines == null);\n    let mapping = tr.mapping.slice(mapFrom), start = mapping.map(pos - depth);\n    tr.step(new ReplaceStep(start, mapping.map(pos + depth, -1), Slice.empty, true));\n    if (convertNewlines === true) {\n        let $full = tr.doc.resolve(start);\n        replaceNewlines(tr, $full.node(), $full.before(), tr.steps.length);\n    }\n    return tr;\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d &&\n            $from.start(d - 1) == $to.start(d - 1) && $from.node(d - 1).canReplace($from.index(d - 1), $to.index(d - 1)))\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n","import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\nconst clearReusedRange = function () {\n    reusedRange = null;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction textNodeBefore$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction textNodeAfter$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset < node.nodeValue.length)\n            return node;\n        if (node.nodeType == 1 && offset < node.childNodes.length) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node) + 1;\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            // Clip the offset, because Chrome will return a text offset\n            // into <input> nodes, which can't be treated as a regular DOM\n            // offset\n            if (pos)\n                return { node: pos.offsetNode, offset: Math.min(nodeSize(pos.offsetNode), pos.offset) };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: Math.min(nodeSize(range.startContainer), range.startOffset) };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    let vp = doc.defaultView && doc.defaultView.visualViewport;\n    if (vp)\n        return {\n            left: 0, right: vp.width,\n            top: 0, bottom: vp.height\n        };\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop || /^(fixed|sticky)$/.test(getComputedStyle(parent).position))\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true), rect;\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent || !desc.contentDOM) &&\n            // Ignore elements with zero-size bounding rectangles\n            ((rect = desc.dom.getBoundingClientRect()).width || rect.height)) {\n            if (desc.node.isBlock && desc.parent) {\n                // Only apply the horizontal test to the innermost block. Vertical for any parent.\n                if (!sawBlock && rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (!sawBlock && rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n                sawBlock = true;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    if (!sel)\n        return $head.pos == $head.start() || $head.pos == $head.end();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, view, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, view, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = view.root.getSelection();\n        let selRange = view.domSelectionRange();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && selRange.focusNode && selRange.focusNode != headDOM.node && selRange.focusNode.nodeType == 1) {\n            let after = selRange.focusNode.childNodes[selRange.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, selRange.anchorNode, selRange.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, selRange.focusNode, selRange.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n    isText(text) { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM, spec) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n        this.spec = spec;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline), null, mark.attrs);\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom, spec);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            let spec = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node), null, node.attrs);\n            ({ dom, contentDOM } = spec);\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let textNode = view.input.compositionNode;\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1) {\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n            if (this.contentDOM || !this.node.type.spec.draggable)\n                this.dom.removeAttribute(\"draggable\");\n        }\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n    isText(text) { return this.node.text == text; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update && (this.node.type == node.type || this.spec.multiType)) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, view, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, view.root)\n            : super.setSelection(anchor, head, view, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.destroyBetween(this.index, i);\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content) ||\n            !sameOuterDeco(outerDeco, next.outerDeco) || !innerDeco.eq(next.innerDeco))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        else {\n            while (decoIndex < locals.length && locals[decoIndex].to < end)\n                decoIndex++;\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        anchor = head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        if (domSel instanceof view.dom.ownerDocument.defaultView.Selection && domSel.rangeCount > 1) {\n            let min = head, max = head;\n            for (let i = 0; i < domSel.rangeCount; i++) {\n                let range = domSel.getRangeAt(i);\n                min = Math.min(min, view.docView.posFromDOM(range.startContainer, range.startOffset, 1));\n                max = Math.max(max, view.docView.posFromDOM(range.endContainer, range.endOffset, -1));\n            }\n            if (min < 0)\n                return null;\n            [anchor, head] = max == view.state.selection.anchor ? [max, min] : [min, max];\n            $head = doc.resolve(head);\n        }\n        else {\n            anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        }\n        if (anchor < 0)\n            return null;\n    }\n    let $anchor = doc.resolve(anchor);\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    if (!domSel)\n        return;\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setStart(node.parentNode, domIndex(node) + 1);\n    else\n        range.setStart(node, 0);\n    range.collapse(true);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (!sel)\n        return;\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text, slice };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nlet _policy = null;\nfunction maybeWrapTrusted(html) {\n    let trustedTypes = window.trustedTypes;\n    if (!trustedTypes)\n        return html;\n    // With the require-trusted-types-for CSP, Chrome will block\n    // innerHTML, even on a detached document. This wraps the string in\n    // a way that makes the browser allow us to use its parser again.\n    if (!_policy)\n        _policy = trustedTypes.createPolicy(\"ProseMirrorClipboard\", { createHTML: (s) => s });\n    return _policy.createHTML(html);\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = maybeWrapTrusted(html);\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastChromeDelete = 0;\n        this.composing = false;\n        this.compositionNode = null;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    if (view.state.selection.eq(selection))\n        return;\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc && targetDesc.dom.nodeType == 1 ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$to;\n        if (state.selection instanceof TextSelection &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view, !state.selection.empty);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        let sel = view.domSelection();\n                        if (sel)\n                            sel.collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        view.input.compositionNode = null;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction findCompositionNode(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.focusNode)\n        return null;\n    let textBefore = textNodeBefore$1(sel.focusNode, sel.focusOffset);\n    let textAfter = textNodeAfter$1(sel.focusNode, sel.focusOffset);\n    if (textBefore && textAfter && textBefore != textAfter) {\n        let descAfter = textAfter.pmViewDesc, lastChanged = view.domObserver.lastChangedTextNode;\n        if (textBefore == lastChanged || textAfter == lastChanged)\n            return lastChanged;\n        if (!descAfter || !descAfter.isText(textAfter.nodeValue)) {\n            return textAfter;\n        }\n        else if (view.input.compositionNode == textAfter) {\n            let descBefore = textBefore.pmViewDesc;\n            if (!(!descBefore || !descBefore.isText(textBefore.nodeValue)))\n                return textAfter;\n        }\n    }\n    return textBefore || textAfter;\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, restarting = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (restarting || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else if ((view.markCursor || restarting) && !view.state.selection.empty)\n            view.dispatch(view.state.tr.deleteSelection());\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let draggedSlice = (node || view.state.selection).content();\n    let { dom, text, slice } = serializeForClipboard(view, draggedSlice);\n    // Pre-120 Chrome versions clear files when calling `clearData` (#1472)\n    if (!event.dataTransfer.files.length || !chrome || chrome_version > 120)\n        event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier], node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n    forEachSet(f) { f(this); }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n    forEachSet(f) {\n        for (let i = 0; i < this.members.length; i++)\n            this.members[i].forEachSet(f);\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.lastChangedTextNode = null;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let [a, b] = brs;\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n            else {\n                let { focusNode } = this.currentSelection;\n                for (let br of brs) {\n                    let parent = br.parentNode;\n                    if (parent && parent.nodeName == \"LI\" && (!focusNode || blockParent(view, focusNode) != parent))\n                        br.remove();\n                }\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++) {\n                let node = mut.addedNodes[i];\n                added.push(node);\n                if (node.nodeType == 3)\n                    this.lastChangedTextNode = node;\n            }\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            this.lastChangedTextNode = mut.target;\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\nfunction rangeToSelectionRange(view, range) {\n    let anchorNode = range.startContainer, anchorOffset = range.startOffset;\n    let focusNode = range.endContainer, focusOffset = range.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view, selection) {\n    if (selection.getComposedRanges) {\n        let range = selection.getComposedRanges(view.root)[0];\n        if (range)\n            return rangeToSelectionRange(view, range);\n    }\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    return found ? rangeToSelectionRange(view, found) : null;\n}\nfunction blockParent(view, node) {\n    for (let p = node.parentNode; p && p != view.dom; p = p.parentNode) {\n        let desc = view.docView.nearestDesc(p, true);\n        if (desc && desc.node.isBlock)\n            return p;\n    }\n    return null;\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if (change)\n        view.input.domChangeCount++;\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size && !$from.sameParent($to) &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeBackspace(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && change.endB == change.start)\n        view.input.lastChromeDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastChromeDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    if (compositionID)\n        tr.setMeta(\"composition\", compositionID);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeBackspace(old, start, end, $newStart, $newEnd) {\n    if ( // The content must have shrunk\n    end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Handle the case where, rather than joining blocks, the change just removed an entire block\n    if (!$newStart.parent.isTextblock) {\n        let after = $start.nodeAfter;\n        return after != null && end == start + after.nodeSize;\n    }\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (this.composing)\n                    this.input.compositionNode = findCompositionNode(this);\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco(outerDeco);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n        clearReusedRange();\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        let sel = this.domSelection();\n        if (!sel)\n            return { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };\n        return safari && this.root.nodeType === 11 &&\n            deepActiveElement(this.dom.ownerDocument) == this.dom && safariShadowSelectionRange(this, sel) || sel;\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.from, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n","import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection, SelectionRange } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, -1))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        for (let depth = $cursor.depth;; depth--) {\n            let delStep = replaceStep(state.doc, $cursor.before(depth), $cursor.after(depth), Slice.empty);\n            if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n                if (dispatch) {\n                    let tr = state.tr.step(delStep);\n                    tr.setSelection(textblockAt(before, \"end\")\n                        ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                    dispatch(tr.scrollIntoView());\n                }\n                return true;\n            }\n            if (depth == 1 || $cursor.node(depth - 1).childCount > 1)\n                break;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, 1))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.depth)\n            return false;\n        let types = [];\n        let splitDepth, deflt, atEnd = false, atStart = false;\n        for (let d = $from.depth;; d--) {\n            let node = $from.node(d);\n            if (node.isBlock) {\n                atEnd = $from.end(d) == $from.pos + ($from.depth - d);\n                atStart = $from.start(d) == $from.pos - ($from.depth - d);\n                deflt = defaultBlockAt($from.node(d - 1).contentMatchAt($from.indexAfter(d - 1)));\n                let splitType = splitNode && splitNode($to.parent, atEnd, $from);\n                types.unshift(splitType || (atEnd && deflt ? { type: deflt } : null));\n                splitDepth = d;\n                break;\n            }\n            else {\n                if (d == 1)\n                    return false;\n                types.unshift(null);\n            }\n        }\n        let tr = state.tr;\n        if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n            tr.deleteSelection();\n        let splitPos = tr.mapping.map($from.pos);\n        let can = canSplit(tr.doc, splitPos, types.length, types);\n        if (!can) {\n            types[0] = deflt ? { type: deflt } : null;\n            can = canSplit(tr.doc, splitPos, types.length, types);\n        }\n        tr.split(splitPos, types.length, types);\n        if (!atEnd && atStart && $from.node(splitDepth).type != deflt) {\n            let first = tr.mapping.map($from.before(splitDepth)), $first = tr.doc.resolve(first);\n            if (deflt && $from.node(splitDepth - 1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                tr.setNodeMarkup(tr.mapping.map($from.before(splitDepth)), deflt);\n        }\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.join($pos.pos).scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch, dir) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    let isolated = before.type.spec.isolating || after.type.spec.isolating;\n    if (!isolated && joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = !isolated && $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let $joinAt = tr.doc.resolve(end + 2 * conn.length);\n            if ($joinAt.nodeAfter && $joinAt.nodeAfter.type == before.type &&\n                canJoin(tr.doc, $joinAt.pos))\n                tr.join($joinAt.pos);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = after.type.spec.isolating || (dir > 0 && isolated) ? null : Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type, enterAtoms) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (can || !enterAtoms && node.isAtom && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\nfunction removeInlineAtoms(ranges) {\n    let result = [];\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        $from.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.isAtom && node.content.size && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos) {\n                if (pos + 1 > $from.pos)\n                    result.push(new SelectionRange($from, $from.doc.resolve(pos + 1)));\n                $from = $from.doc.resolve(pos + 1 + node.content.size);\n                return false;\n            }\n        });\n        if ($from.pos < $to.pos)\n            result.push(new SelectionRange($from, $to));\n    }\n    return result;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null, options) {\n    let removeWhenPresent = (options && options.removeWhenPresent) !== false;\n    let enterAtoms = (options && options.enterInlineAtoms) !== false;\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType, enterAtoms))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let add, tr = state.tr;\n                if (!enterAtoms)\n                    ranges = removeInlineAtoms(ranges);\n                if (removeWhenPresent) {\n                    add = !ranges.some(r => state.doc.rangeHasMark(r.$from.pos, r.$to.pos, markType));\n                }\n                else {\n                    add = !ranges.every(r => {\n                        let missing = false;\n                        tr.doc.nodesBetween(r.$from.pos, r.$to.pos, (node, pos, parent) => {\n                            if (missing)\n                                return false;\n                            missing = !markType.isInSet(node.marks) && !!parent && parent.type.allowsMarkType(markType) &&\n                                !(node.isText && /^\\s*$/.test(node.textBetween(Math.max(0, r.$from.pos - pos), Math.min(node.nodeSize, r.$to.pos - pos))));\n                        });\n                        return !missing;\n                    });\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (!add) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1, validate: \"number\" } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to);\n        if (!range)\n            return false;\n        let tr = dispatch ? state.tr : null;\n        if (!wrapRangeInList(tr, range, listType, attrs))\n            return false;\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nTry to wrap the given node range in a list of the given type.\nReturn `true` when this is possible, `false` otherwise. When `tr`\nis non-null, the wrapping is added to that transaction. When it is\n`null`, the function only queries whether the wrapping is\npossible.\n*/\nfunction wrapRangeInList(tr, range, listType, attrs = null) {\n    let doJoin = false, outerRange = range, doc = range.$from.doc;\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && range.$from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n        // Don't do anything if this is the top of the list\n        if (range.$from.index(range.depth - 1) == 0)\n            return false;\n        let $insert = doc.resolve(range.start - 2);\n        outerRange = new NodeRange($insert, $insert, range.depth);\n        if (range.endIndex < range.parent.childCount)\n            range = new NodeRange(range.$from, doc.resolve(range.$to.end(range.depth)), range.depth);\n        doJoin = true;\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range);\n    if (!wrap)\n        return false;\n    if (tr)\n        doWrapInList(tr, range, wrap, doJoin, listType);\n    return true;\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nActs like [`splitListItem`](https://prosemirror.net/docs/ref/#schema-list.splitListItem), but\nwithout resetting the set of active marks at the cursor.\n*/\nfunction splitListItemKeepMarks(itemType, itemAttrs) {\n    let split = splitListItem(itemType, itemAttrs);\n    return (state, dispatch) => {\n        return split(state, dispatch && (tr => {\n            let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n            if (marks)\n                tr.ensureMarks(marks);\n            dispatch(tr);\n        }));\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, splitListItemKeepMarks, wrapInList, wrapRangeInList };\n","import { Plugin, PluginKey, TextSelection, Selection, AllSelection, NodeSelection, EditorState } from '@tiptap/pm/state';\nimport { EditorView } from '@tiptap/pm/view';\nimport { keymap } from '@tiptap/pm/keymap';\nimport { Schema, DOMSerializer, Fragment, Node as Node$1, DOMParser, Slice } from '@tiptap/pm/model';\nimport { liftTarget, ReplaceStep, ReplaceAroundStep, joinPoint, Transform, canSplit, canJoin, findWrapping } from '@tiptap/pm/transform';\nimport { createParagraphNear as createParagraphNear$1, deleteSelection as deleteSelection$1, exitCode as exitCode$1, joinUp as joinUp$1, joinDown as joinDown$1, joinBackward as joinBackward$1, joinForward as joinForward$1, joinTextblockBackward as joinTextblockBackward$1, joinTextblockForward as joinTextblockForward$1, lift as lift$1, liftEmptyBlock as liftEmptyBlock$1, newlineInCode as newlineInCode$1, selectNodeBackward as selectNodeBackward$1, selectNodeForward as selectNodeForward$1, selectParentNode as selectParentNode$1, selectTextblockEnd as selectTextblockEnd$1, selectTextblockStart as selectTextblockStart$1, setBlockType, wrapIn as wrapIn$1 } from '@tiptap/pm/commands';\nimport { liftListItem as liftListItem$1, sinkListItem as sinkListItem$1, wrapInList as wrapInList$1 } from '@tiptap/pm/schema-list';\n\n/**\n * Takes a Transaction & Editor State and turns it into a chainable state object\n * @param config The transaction and state to create the chainable state from\n * @returns A chainable Editor state object\n */\nfunction createChainableState(config) {\n    const { state, transaction } = config;\n    let { selection } = transaction;\n    let { doc } = transaction;\n    let { storedMarks } = transaction;\n    return {\n        ...state,\n        apply: state.apply.bind(state),\n        applyTransaction: state.applyTransaction.bind(state),\n        plugins: state.plugins,\n        schema: state.schema,\n        reconfigure: state.reconfigure.bind(state),\n        toJSON: state.toJSON.bind(state),\n        get storedMarks() {\n            return storedMarks;\n        },\n        get selection() {\n            return selection;\n        },\n        get doc() {\n            return doc;\n        },\n        get tr() {\n            selection = transaction.selection;\n            doc = transaction.doc;\n            storedMarks = transaction.storedMarks;\n            return transaction;\n        },\n    };\n}\n\nclass CommandManager {\n    constructor(props) {\n        this.editor = props.editor;\n        this.rawCommands = this.editor.extensionManager.commands;\n        this.customState = props.state;\n    }\n    get hasCustomState() {\n        return !!this.customState;\n    }\n    get state() {\n        return this.customState || this.editor.state;\n    }\n    get commands() {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const { tr } = state;\n        const props = this.buildProps(tr);\n        return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n            const method = (...args) => {\n                const callback = command(...args)(props);\n                if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\n                    view.dispatch(tr);\n                }\n                return callback;\n            };\n            return [name, method];\n        }));\n    }\n    get chain() {\n        return () => this.createChain();\n    }\n    get can() {\n        return () => this.createCan();\n    }\n    createChain(startTr, shouldDispatch = true) {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const callbacks = [];\n        const hasStartTransaction = !!startTr;\n        const tr = startTr || state.tr;\n        const run = () => {\n            if (!hasStartTransaction\n                && shouldDispatch\n                && !tr.getMeta('preventDispatch')\n                && !this.hasCustomState) {\n                view.dispatch(tr);\n            }\n            return callbacks.every(callback => callback === true);\n        };\n        const chain = {\n            ...Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n                const chainedCommand = (...args) => {\n                    const props = this.buildProps(tr, shouldDispatch);\n                    const callback = command(...args)(props);\n                    callbacks.push(callback);\n                    return chain;\n                };\n                return [name, chainedCommand];\n            })),\n            run,\n        };\n        return chain;\n    }\n    createCan(startTr) {\n        const { rawCommands, state } = this;\n        const dispatch = false;\n        const tr = startTr || state.tr;\n        const props = this.buildProps(tr, dispatch);\n        const formattedCommands = Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n            return [name, (...args) => command(...args)({ ...props, dispatch: undefined })];\n        }));\n        return {\n            ...formattedCommands,\n            chain: () => this.createChain(tr, dispatch),\n        };\n    }\n    buildProps(tr, shouldDispatch = true) {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const props = {\n            tr,\n            editor,\n            view,\n            state: createChainableState({\n                state,\n                transaction: tr,\n            }),\n            dispatch: shouldDispatch ? () => undefined : undefined,\n            chain: () => this.createChain(tr, shouldDispatch),\n            can: () => this.createCan(tr),\n            get commands() {\n                return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n                    return [name, (...args) => command(...args)(props)];\n                }));\n            },\n        };\n        return props;\n    }\n}\n\nclass EventEmitter {\n    constructor() {\n        this.callbacks = {};\n    }\n    on(event, fn) {\n        if (!this.callbacks[event]) {\n            this.callbacks[event] = [];\n        }\n        this.callbacks[event].push(fn);\n        return this;\n    }\n    emit(event, ...args) {\n        const callbacks = this.callbacks[event];\n        if (callbacks) {\n            callbacks.forEach(callback => callback.apply(this, args));\n        }\n        return this;\n    }\n    off(event, fn) {\n        const callbacks = this.callbacks[event];\n        if (callbacks) {\n            if (fn) {\n                this.callbacks[event] = callbacks.filter(callback => callback !== fn);\n            }\n            else {\n                delete this.callbacks[event];\n            }\n        }\n        return this;\n    }\n    once(event, fn) {\n        const onceFn = (...args) => {\n            this.off(event, onceFn);\n            fn.apply(this, args);\n        };\n        return this.on(event, onceFn);\n    }\n    removeAllListeners() {\n        this.callbacks = {};\n    }\n}\n\n/**\n * Returns a field from an extension\n * @param extension The Tiptap extension\n * @param field The field, for example `renderHTML` or `priority`\n * @param context The context object that should be passed as `this` into the function\n * @returns The field value\n */\nfunction getExtensionField(extension, field, context) {\n    if (extension.config[field] === undefined && extension.parent) {\n        return getExtensionField(extension.parent, field, context);\n    }\n    if (typeof extension.config[field] === 'function') {\n        const value = extension.config[field].bind({\n            ...context,\n            parent: extension.parent\n                ? getExtensionField(extension.parent, field, context)\n                : null,\n        });\n        return value;\n    }\n    return extension.config[field];\n}\n\nfunction splitExtensions(extensions) {\n    const baseExtensions = extensions.filter(extension => extension.type === 'extension');\n    const nodeExtensions = extensions.filter(extension => extension.type === 'node');\n    const markExtensions = extensions.filter(extension => extension.type === 'mark');\n    return {\n        baseExtensions,\n        nodeExtensions,\n        markExtensions,\n    };\n}\n\n/**\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\n * @param extensions List of extensions\n */\nfunction getAttributesFromExtensions(extensions) {\n    const extensionAttributes = [];\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\n    const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions];\n    const defaultAttribute = {\n        default: null,\n        rendered: true,\n        renderHTML: null,\n        parseHTML: null,\n        keepOnSplit: true,\n        isRequired: false,\n    };\n    extensions.forEach(extension => {\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            extensions: nodeAndMarkExtensions,\n        };\n        const addGlobalAttributes = getExtensionField(extension, 'addGlobalAttributes', context);\n        if (!addGlobalAttributes) {\n            return;\n        }\n        const globalAttributes = addGlobalAttributes();\n        globalAttributes.forEach(globalAttribute => {\n            globalAttribute.types.forEach(type => {\n                Object\n                    .entries(globalAttribute.attributes)\n                    .forEach(([name, attribute]) => {\n                    extensionAttributes.push({\n                        type,\n                        name,\n                        attribute: {\n                            ...defaultAttribute,\n                            ...attribute,\n                        },\n                    });\n                });\n            });\n        });\n    });\n    nodeAndMarkExtensions.forEach(extension => {\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n        };\n        const addAttributes = getExtensionField(extension, 'addAttributes', context);\n        if (!addAttributes) {\n            return;\n        }\n        // TODO: remove `as Attributes`\n        const attributes = addAttributes();\n        Object\n            .entries(attributes)\n            .forEach(([name, attribute]) => {\n            const mergedAttr = {\n                ...defaultAttribute,\n                ...attribute,\n            };\n            if (typeof (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === 'function') {\n                mergedAttr.default = mergedAttr.default();\n            }\n            if ((mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.isRequired) && (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === undefined) {\n                delete mergedAttr.default;\n            }\n            extensionAttributes.push({\n                type: extension.name,\n                name,\n                attribute: mergedAttr,\n            });\n        });\n    });\n    return extensionAttributes;\n}\n\nfunction getNodeType(nameOrType, schema) {\n    if (typeof nameOrType === 'string') {\n        if (!schema.nodes[nameOrType]) {\n            throw Error(`There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`);\n        }\n        return schema.nodes[nameOrType];\n    }\n    return nameOrType;\n}\n\nfunction mergeAttributes(...objects) {\n    return objects\n        .filter(item => !!item)\n        .reduce((items, item) => {\n        const mergedAttributes = { ...items };\n        Object.entries(item).forEach(([key, value]) => {\n            const exists = mergedAttributes[key];\n            if (!exists) {\n                mergedAttributes[key] = value;\n                return;\n            }\n            if (key === 'class') {\n                const valueClasses = value ? String(value).split(' ') : [];\n                const existingClasses = mergedAttributes[key] ? mergedAttributes[key].split(' ') : [];\n                const insertClasses = valueClasses.filter(valueClass => !existingClasses.includes(valueClass));\n                mergedAttributes[key] = [...existingClasses, ...insertClasses].join(' ');\n            }\n            else if (key === 'style') {\n                const newStyles = value ? value.split(';').map((style) => style.trim()).filter(Boolean) : [];\n                const existingStyles = mergedAttributes[key] ? mergedAttributes[key].split(';').map((style) => style.trim()).filter(Boolean) : [];\n                const styleMap = new Map();\n                existingStyles.forEach(style => {\n                    const [property, val] = style.split(':').map(part => part.trim());\n                    styleMap.set(property, val);\n                });\n                newStyles.forEach(style => {\n                    const [property, val] = style.split(':').map(part => part.trim());\n                    styleMap.set(property, val);\n                });\n                mergedAttributes[key] = Array.from(styleMap.entries()).map(([property, val]) => `${property}: ${val}`).join('; ');\n            }\n            else {\n                mergedAttributes[key] = value;\n            }\n        });\n        return mergedAttributes;\n    }, {});\n}\n\nfunction getRenderedAttributes(nodeOrMark, extensionAttributes) {\n    return extensionAttributes\n        .filter(attribute => attribute.type === nodeOrMark.type.name)\n        .filter(item => item.attribute.rendered)\n        .map(item => {\n        if (!item.attribute.renderHTML) {\n            return {\n                [item.name]: nodeOrMark.attrs[item.name],\n            };\n        }\n        return item.attribute.renderHTML(nodeOrMark.attrs) || {};\n    })\n        .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {});\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\n/**\n * Optionally calls `value` as a function.\n * Otherwise it is returned directly.\n * @param value Function or any value.\n * @param context Optional context to bind to function.\n * @param props Optional props to pass to function.\n */\nfunction callOrReturn(value, context = undefined, ...props) {\n    if (isFunction(value)) {\n        if (context) {\n            return value.bind(context)(...props);\n        }\n        return value(...props);\n    }\n    return value;\n}\n\nfunction isEmptyObject(value = {}) {\n    return Object.keys(value).length === 0 && value.constructor === Object;\n}\n\nfunction fromString(value) {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\n        return Number(value);\n    }\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    return value;\n}\n\n/**\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\n * Cancels when `getAttrs` returned `false`.\n * @param parseRule ProseMirror ParseRule\n * @param extensionAttributes List of attributes to inject\n */\nfunction injectExtensionAttributesToParseRule(parseRule, extensionAttributes) {\n    if ('style' in parseRule) {\n        return parseRule;\n    }\n    return {\n        ...parseRule,\n        getAttrs: (node) => {\n            const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs;\n            if (oldAttributes === false) {\n                return false;\n            }\n            const newAttributes = extensionAttributes.reduce((items, item) => {\n                const value = item.attribute.parseHTML\n                    ? item.attribute.parseHTML(node)\n                    : fromString((node).getAttribute(item.name));\n                if (value === null || value === undefined) {\n                    return items;\n                }\n                return {\n                    ...items,\n                    [item.name]: value,\n                };\n            }, {});\n            return { ...oldAttributes, ...newAttributes };\n        },\n    };\n}\n\nfunction cleanUpSchemaItem(data) {\n    return Object.fromEntries(\n    // @ts-ignore\n    Object.entries(data).filter(([key, value]) => {\n        if (key === 'attrs' && isEmptyObject(value)) {\n            return false;\n        }\n        return value !== null && value !== undefined;\n    }));\n}\n/**\n * Creates a new Prosemirror schema based on the given extensions.\n * @param extensions An array of Tiptap extensions\n * @param editor The editor instance\n * @returns A Prosemirror schema\n */\nfunction getSchemaByResolvedExtensions(extensions, editor) {\n    var _a;\n    const allAttributes = getAttributesFromExtensions(extensions);\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\n    const topNode = (_a = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))) === null || _a === void 0 ? void 0 : _a.name;\n    const nodes = Object.fromEntries(nodeExtensions.map(extension => {\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n        };\n        const extraNodeFields = extensions.reduce((fields, e) => {\n            const extendNodeSchema = getExtensionField(e, 'extendNodeSchema', context);\n            return {\n                ...fields,\n                ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\n            };\n        }, {});\n        const schema = cleanUpSchemaItem({\n            ...extraNodeFields,\n            content: callOrReturn(getExtensionField(extension, 'content', context)),\n            marks: callOrReturn(getExtensionField(extension, 'marks', context)),\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\n            inline: callOrReturn(getExtensionField(extension, 'inline', context)),\n            atom: callOrReturn(getExtensionField(extension, 'atom', context)),\n            selectable: callOrReturn(getExtensionField(extension, 'selectable', context)),\n            draggable: callOrReturn(getExtensionField(extension, 'draggable', context)),\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\n            whitespace: callOrReturn(getExtensionField(extension, 'whitespace', context)),\n            linebreakReplacement: callOrReturn(getExtensionField(extension, 'linebreakReplacement', context)),\n            defining: callOrReturn(getExtensionField(extension, 'defining', context)),\n            isolating: callOrReturn(getExtensionField(extension, 'isolating', context)),\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\n                var _a;\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\n            })),\n        });\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\n        if (parseHTML) {\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\n        }\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\n        if (renderHTML) {\n            schema.toDOM = node => renderHTML({\n                node,\n                HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\n            });\n        }\n        const renderText = getExtensionField(extension, 'renderText', context);\n        if (renderText) {\n            schema.toText = renderText;\n        }\n        return [extension.name, schema];\n    }));\n    const marks = Object.fromEntries(markExtensions.map(extension => {\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n        };\n        const extraMarkFields = extensions.reduce((fields, e) => {\n            const extendMarkSchema = getExtensionField(e, 'extendMarkSchema', context);\n            return {\n                ...fields,\n                ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\n            };\n        }, {});\n        const schema = cleanUpSchemaItem({\n            ...extraMarkFields,\n            inclusive: callOrReturn(getExtensionField(extension, 'inclusive', context)),\n            excludes: callOrReturn(getExtensionField(extension, 'excludes', context)),\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\n            spanning: callOrReturn(getExtensionField(extension, 'spanning', context)),\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\n                var _a;\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\n            })),\n        });\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\n        if (parseHTML) {\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\n        }\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\n        if (renderHTML) {\n            schema.toDOM = mark => renderHTML({\n                mark,\n                HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\n            });\n        }\n        return [extension.name, schema];\n    }));\n    return new Schema({\n        topNode,\n        nodes,\n        marks,\n    });\n}\n\n/**\n * Tries to get a node or mark type by its name.\n * @param name The name of the node or mark type\n * @param schema The Prosemiror schema to search in\n * @returns The node or mark type, or null if it doesn't exist\n */\nfunction getSchemaTypeByName(name, schema) {\n    return schema.nodes[name] || schema.marks[name] || null;\n}\n\nfunction isExtensionRulesEnabled(extension, enabled) {\n    if (Array.isArray(enabled)) {\n        return enabled.some(enabledExtension => {\n            const name = typeof enabledExtension === 'string'\n                ? enabledExtension\n                : enabledExtension.name;\n            return name === extension.name;\n        });\n    }\n    return enabled;\n}\n\nfunction getHTMLFromFragment(fragment, schema) {\n    const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment);\n    const temporaryDocument = document.implementation.createHTMLDocument();\n    const container = temporaryDocument.createElement('div');\n    container.appendChild(documentFragment);\n    return container.innerHTML;\n}\n\n/**\n * Returns the text content of a resolved prosemirror position\n * @param $from The resolved position to get the text content from\n * @param maxMatch The maximum number of characters to match\n * @returns The text content\n */\nconst getTextContentFromNodes = ($from, maxMatch = 500) => {\n    let textBefore = '';\n    const sliceEndPos = $from.parentOffset;\n    $from.parent.nodesBetween(Math.max(0, sliceEndPos - maxMatch), sliceEndPos, (node, pos, parent, index) => {\n        var _a, _b;\n        const chunk = ((_b = (_a = node.type.spec).toText) === null || _b === void 0 ? void 0 : _b.call(_a, {\n            node,\n            pos,\n            parent,\n            index,\n        }))\n            || node.textContent\n            || '%leaf%';\n        textBefore += node.isAtom && !node.isText ? chunk : chunk.slice(0, Math.max(0, sliceEndPos - pos));\n    });\n    return textBefore;\n};\n\nfunction isRegExp(value) {\n    return Object.prototype.toString.call(value) === '[object RegExp]';\n}\n\nclass InputRule {\n    constructor(config) {\n        this.find = config.find;\n        this.handler = config.handler;\n    }\n}\nconst inputRuleMatcherHandler = (text, find) => {\n    if (isRegExp(find)) {\n        return find.exec(text);\n    }\n    const inputRuleMatch = find(text);\n    if (!inputRuleMatch) {\n        return null;\n    }\n    const result = [inputRuleMatch.text];\n    result.index = inputRuleMatch.index;\n    result.input = text;\n    result.data = inputRuleMatch.data;\n    if (inputRuleMatch.replaceWith) {\n        if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\n            console.warn('[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".');\n        }\n        result.push(inputRuleMatch.replaceWith);\n    }\n    return result;\n};\nfunction run$1(config) {\n    var _a;\n    const { editor, from, to, text, rules, plugin, } = config;\n    const { view } = editor;\n    if (view.composing) {\n        return false;\n    }\n    const $from = view.state.doc.resolve(from);\n    if (\n    // check for code node\n    $from.parent.type.spec.code\n        // check for code mark\n        || !!((_a = ($from.nodeBefore || $from.nodeAfter)) === null || _a === void 0 ? void 0 : _a.marks.find(mark => mark.type.spec.code))) {\n        return false;\n    }\n    let matched = false;\n    const textBefore = getTextContentFromNodes($from) + text;\n    rules.forEach(rule => {\n        if (matched) {\n            return;\n        }\n        const match = inputRuleMatcherHandler(textBefore, rule.find);\n        if (!match) {\n            return;\n        }\n        const tr = view.state.tr;\n        const state = createChainableState({\n            state: view.state,\n            transaction: tr,\n        });\n        const range = {\n            from: from - (match[0].length - text.length),\n            to,\n        };\n        const { commands, chain, can } = new CommandManager({\n            editor,\n            state,\n        });\n        const handler = rule.handler({\n            state,\n            range,\n            match,\n            commands,\n            chain,\n            can,\n        });\n        // stop if there are no changes\n        if (handler === null || !tr.steps.length) {\n            return;\n        }\n        // store transform as meta data\n        // so we can undo input rules within the `undoInputRules` command\n        tr.setMeta(plugin, {\n            transform: tr,\n            from,\n            to,\n            text,\n        });\n        view.dispatch(tr);\n        matched = true;\n    });\n    return matched;\n}\n/**\n * Create an input rules plugin. When enabled, it will cause text\n * input that matches any of the given rules to trigger the rule’s\n * action.\n */\nfunction inputRulesPlugin(props) {\n    const { editor, rules } = props;\n    const plugin = new Plugin({\n        state: {\n            init() {\n                return null;\n            },\n            apply(tr, prev, state) {\n                const stored = tr.getMeta(plugin);\n                if (stored) {\n                    return stored;\n                }\n                // if InputRule is triggered by insertContent()\n                const simulatedInputMeta = tr.getMeta('applyInputRules');\n                const isSimulatedInput = !!simulatedInputMeta;\n                if (isSimulatedInput) {\n                    setTimeout(() => {\n                        let { text } = simulatedInputMeta;\n                        if (typeof text === 'string') {\n                            text = text;\n                        }\n                        else {\n                            text = getHTMLFromFragment(Fragment.from(text), state.schema);\n                        }\n                        const { from } = simulatedInputMeta;\n                        const to = from + text.length;\n                        run$1({\n                            editor,\n                            from,\n                            to,\n                            text,\n                            rules,\n                            plugin,\n                        });\n                    });\n                }\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            },\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run$1({\n                    editor,\n                    from,\n                    to,\n                    text,\n                    rules,\n                    plugin,\n                });\n            },\n            handleDOMEvents: {\n                compositionend: view => {\n                    setTimeout(() => {\n                        const { $cursor } = view.state.selection;\n                        if ($cursor) {\n                            run$1({\n                                editor,\n                                from: $cursor.pos,\n                                to: $cursor.pos,\n                                text: '',\n                                rules,\n                                plugin,\n                            });\n                        }\n                    });\n                    return false;\n                },\n            },\n            // add support for input rules to trigger on enter\n            // this is useful for example for code blocks\n            handleKeyDown(view, event) {\n                if (event.key !== 'Enter') {\n                    return false;\n                }\n                const { $cursor } = view.state.selection;\n                if ($cursor) {\n                    return run$1({\n                        editor,\n                        from: $cursor.pos,\n                        to: $cursor.pos,\n                        text: '\\n',\n                        rules,\n                        plugin,\n                    });\n                }\n                return false;\n            },\n        },\n        // @ts-ignore\n        isInputRules: true,\n    });\n    return plugin;\n}\n\n// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\nfunction getType(value) {\n    return Object.prototype.toString.call(value).slice(8, -1);\n}\nfunction isPlainObject(value) {\n    if (getType(value) !== 'Object') {\n        return false;\n    }\n    return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype;\n}\n\nfunction mergeDeep(target, source) {\n    const output = { ...target };\n    if (isPlainObject(target) && isPlainObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isPlainObject(source[key]) && isPlainObject(target[key])) {\n                output[key] = mergeDeep(target[key], source[key]);\n            }\n            else {\n                output[key] = source[key];\n            }\n        });\n    }\n    return output;\n}\n\n/**\n * The Mark class is used to create custom mark extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Mark {\n    constructor(config = {}) {\n        this.type = 'mark';\n        this.name = 'mark';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Mark(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Mark(extendedConfig);\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n    static handleExit({ editor, mark }) {\n        const { tr } = editor.state;\n        const currentPos = editor.state.selection.$from;\n        const isAtEnd = currentPos.pos === currentPos.end();\n        if (isAtEnd) {\n            const currentMarks = currentPos.marks();\n            const isInMark = !!currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\n            if (!isInMark) {\n                return false;\n            }\n            const removeMark = currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\n            if (removeMark) {\n                tr.removeStoredMark(removeMark);\n            }\n            tr.insertText(' ', currentPos.pos);\n            editor.view.dispatch(tr);\n            return true;\n        }\n        return false;\n    }\n}\n\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * Paste rules are used to react to pasted content.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nclass PasteRule {\n    constructor(config) {\n        this.find = config.find;\n        this.handler = config.handler;\n    }\n}\nconst pasteRuleMatcherHandler = (text, find, event) => {\n    if (isRegExp(find)) {\n        return [...text.matchAll(find)];\n    }\n    const matches = find(text, event);\n    if (!matches) {\n        return [];\n    }\n    return matches.map(pasteRuleMatch => {\n        const result = [pasteRuleMatch.text];\n        result.index = pasteRuleMatch.index;\n        result.input = text;\n        result.data = pasteRuleMatch.data;\n        if (pasteRuleMatch.replaceWith) {\n            if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\n                console.warn('[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".');\n            }\n            result.push(pasteRuleMatch.replaceWith);\n        }\n        return result;\n    });\n};\nfunction run(config) {\n    const { editor, state, from, to, rule, pasteEvent, dropEvent, } = config;\n    const { commands, chain, can } = new CommandManager({\n        editor,\n        state,\n    });\n    const handlers = [];\n    state.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isTextblock || node.type.spec.code) {\n            return;\n        }\n        const resolvedFrom = Math.max(from, pos);\n        const resolvedTo = Math.min(to, pos + node.content.size);\n        const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc');\n        const matches = pasteRuleMatcherHandler(textToMatch, rule.find, pasteEvent);\n        matches.forEach(match => {\n            if (match.index === undefined) {\n                return;\n            }\n            const start = resolvedFrom + match.index + 1;\n            const end = start + match[0].length;\n            const range = {\n                from: state.tr.mapping.map(start),\n                to: state.tr.mapping.map(end),\n            };\n            const handler = rule.handler({\n                state,\n                range,\n                match,\n                commands,\n                chain,\n                can,\n                pasteEvent,\n                dropEvent,\n            });\n            handlers.push(handler);\n        });\n    });\n    const success = handlers.every(handler => handler !== null);\n    return success;\n}\n// When dragging across editors, must get another editor instance to delete selection content.\nlet tiptapDragFromOtherEditor = null;\nconst createClipboardPasteEvent = (text) => {\n    var _a;\n    const event = new ClipboardEvent('paste', {\n        clipboardData: new DataTransfer(),\n    });\n    (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.setData('text/html', text);\n    return event;\n};\n/**\n * Create an paste rules plugin. When enabled, it will cause pasted\n * text that matches any of the given rules to trigger the rule’s\n * action.\n */\nfunction pasteRulesPlugin(props) {\n    const { editor, rules } = props;\n    let dragSourceElement = null;\n    let isPastedFromProseMirror = false;\n    let isDroppedFromProseMirror = false;\n    let pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null;\n    let dropEvent;\n    try {\n        dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null;\n    }\n    catch {\n        dropEvent = null;\n    }\n    const processEvent = ({ state, from, to, rule, pasteEvt, }) => {\n        const tr = state.tr;\n        const chainableState = createChainableState({\n            state,\n            transaction: tr,\n        });\n        const handler = run({\n            editor,\n            state: chainableState,\n            from: Math.max(from - 1, 0),\n            to: to.b - 1,\n            rule,\n            pasteEvent: pasteEvt,\n            dropEvent,\n        });\n        if (!handler || !tr.steps.length) {\n            return;\n        }\n        try {\n            dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null;\n        }\n        catch {\n            dropEvent = null;\n        }\n        pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null;\n        return tr;\n    };\n    const plugins = rules.map(rule => {\n        return new Plugin({\n            // we register a global drag handler to track the current drag source element\n            view(view) {\n                const handleDragstart = (event) => {\n                    var _a;\n                    dragSourceElement = ((_a = view.dom.parentElement) === null || _a === void 0 ? void 0 : _a.contains(event.target))\n                        ? view.dom.parentElement\n                        : null;\n                    if (dragSourceElement) {\n                        tiptapDragFromOtherEditor = editor;\n                    }\n                };\n                const handleDragend = () => {\n                    if (tiptapDragFromOtherEditor) {\n                        tiptapDragFromOtherEditor = null;\n                    }\n                };\n                window.addEventListener('dragstart', handleDragstart);\n                window.addEventListener('dragend', handleDragend);\n                return {\n                    destroy() {\n                        window.removeEventListener('dragstart', handleDragstart);\n                        window.removeEventListener('dragend', handleDragend);\n                    },\n                };\n            },\n            props: {\n                handleDOMEvents: {\n                    drop: (view, event) => {\n                        isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement;\n                        dropEvent = event;\n                        if (!isDroppedFromProseMirror) {\n                            const dragFromOtherEditor = tiptapDragFromOtherEditor;\n                            if (dragFromOtherEditor) {\n                                // setTimeout to avoid the wrong content after drop, timeout arg can't be empty or 0\n                                setTimeout(() => {\n                                    const selection = dragFromOtherEditor.state.selection;\n                                    if (selection) {\n                                        dragFromOtherEditor.commands.deleteRange({ from: selection.from, to: selection.to });\n                                    }\n                                }, 10);\n                            }\n                        }\n                        return false;\n                    },\n                    paste: (_view, event) => {\n                        var _a;\n                        const html = (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text/html');\n                        pasteEvent = event;\n                        isPastedFromProseMirror = !!(html === null || html === void 0 ? void 0 : html.includes('data-pm-slice'));\n                        return false;\n                    },\n                },\n            },\n            appendTransaction: (transactions, oldState, state) => {\n                const transaction = transactions[0];\n                const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror;\n                const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror;\n                // if PasteRule is triggered by insertContent()\n                const simulatedPasteMeta = transaction.getMeta('applyPasteRules');\n                const isSimulatedPaste = !!simulatedPasteMeta;\n                if (!isPaste && !isDrop && !isSimulatedPaste) {\n                    return;\n                }\n                // Handle simulated paste\n                if (isSimulatedPaste) {\n                    let { text } = simulatedPasteMeta;\n                    if (typeof text === 'string') {\n                        text = text;\n                    }\n                    else {\n                        text = getHTMLFromFragment(Fragment.from(text), state.schema);\n                    }\n                    const { from } = simulatedPasteMeta;\n                    const to = from + text.length;\n                    const pasteEvt = createClipboardPasteEvent(text);\n                    return processEvent({\n                        rule,\n                        state,\n                        from,\n                        to: { b: to },\n                        pasteEvt,\n                    });\n                }\n                // handle actual paste/drop\n                const from = oldState.doc.content.findDiffStart(state.doc.content);\n                const to = oldState.doc.content.findDiffEnd(state.doc.content);\n                // stop if there is no changed range\n                if (!isNumber(from) || !to || from === to.b) {\n                    return;\n                }\n                return processEvent({\n                    rule,\n                    state,\n                    from,\n                    to,\n                    pasteEvt: pasteEvent,\n                });\n            },\n        });\n    });\n    return plugins;\n}\n\nfunction findDuplicates(items) {\n    const filtered = items.filter((el, index) => items.indexOf(el) !== index);\n    return Array.from(new Set(filtered));\n}\n\nclass ExtensionManager {\n    constructor(extensions, editor) {\n        this.splittableMarks = [];\n        this.editor = editor;\n        this.extensions = ExtensionManager.resolve(extensions);\n        this.schema = getSchemaByResolvedExtensions(this.extensions, editor);\n        this.setupExtensions();\n    }\n    /**\n     * Returns a flattened and sorted extension list while\n     * also checking for duplicated extensions and warns the user.\n     * @param extensions An array of Tiptap extensions\n     * @returns An flattened and sorted array of Tiptap extensions\n     */\n    static resolve(extensions) {\n        const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions));\n        const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name));\n        if (duplicatedNames.length) {\n            console.warn(`[tiptap warn]: Duplicate extension names found: [${duplicatedNames\n                .map(item => `'${item}'`)\n                .join(', ')}]. This can lead to issues.`);\n        }\n        return resolvedExtensions;\n    }\n    /**\n     * Create a flattened array of extensions by traversing the `addExtensions` field.\n     * @param extensions An array of Tiptap extensions\n     * @returns A flattened array of Tiptap extensions\n     */\n    static flatten(extensions) {\n        return (extensions\n            .map(extension => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n            };\n            const addExtensions = getExtensionField(extension, 'addExtensions', context);\n            if (addExtensions) {\n                return [extension, ...this.flatten(addExtensions())];\n            }\n            return extension;\n        })\n            // `Infinity` will break TypeScript so we set a number that is probably high enough\n            .flat(10));\n    }\n    /**\n     * Sort extensions by priority.\n     * @param extensions An array of Tiptap extensions\n     * @returns A sorted array of Tiptap extensions by priority\n     */\n    static sort(extensions) {\n        const defaultPriority = 100;\n        return extensions.sort((a, b) => {\n            const priorityA = getExtensionField(a, 'priority') || defaultPriority;\n            const priorityB = getExtensionField(b, 'priority') || defaultPriority;\n            if (priorityA > priorityB) {\n                return -1;\n            }\n            if (priorityA < priorityB) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n    /**\n     * Get all commands from the extensions.\n     * @returns An object with all commands where the key is the command name and the value is the command function\n     */\n    get commands() {\n        return this.extensions.reduce((commands, extension) => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor: this.editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            const addCommands = getExtensionField(extension, 'addCommands', context);\n            if (!addCommands) {\n                return commands;\n            }\n            return {\n                ...commands,\n                ...addCommands(),\n            };\n        }, {});\n    }\n    /**\n     * Get all registered Prosemirror plugins from the extensions.\n     * @returns An array of Prosemirror plugins\n     */\n    get plugins() {\n        const { editor } = this;\n        // With ProseMirror, first plugins within an array are executed first.\n        // In Tiptap, we provide the ability to override plugins,\n        // so it feels more natural to run plugins at the end of an array first.\n        // That’s why we have to reverse the `extensions` array and sort again\n        // based on the `priority` option.\n        const extensions = ExtensionManager.sort([...this.extensions].reverse());\n        const inputRules = [];\n        const pasteRules = [];\n        const allPlugins = extensions\n            .map(extension => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            const plugins = [];\n            const addKeyboardShortcuts = getExtensionField(extension, 'addKeyboardShortcuts', context);\n            let defaultBindings = {};\n            // bind exit handling\n            if (extension.type === 'mark' && getExtensionField(extension, 'exitable', context)) {\n                defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension });\n            }\n            if (addKeyboardShortcuts) {\n                const bindings = Object.fromEntries(Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\n                    return [shortcut, () => method({ editor })];\n                }));\n                defaultBindings = { ...defaultBindings, ...bindings };\n            }\n            const keyMapPlugin = keymap(defaultBindings);\n            plugins.push(keyMapPlugin);\n            const addInputRules = getExtensionField(extension, 'addInputRules', context);\n            if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\n                inputRules.push(...addInputRules());\n            }\n            const addPasteRules = getExtensionField(extension, 'addPasteRules', context);\n            if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\n                pasteRules.push(...addPasteRules());\n            }\n            const addProseMirrorPlugins = getExtensionField(extension, 'addProseMirrorPlugins', context);\n            if (addProseMirrorPlugins) {\n                const proseMirrorPlugins = addProseMirrorPlugins();\n                plugins.push(...proseMirrorPlugins);\n            }\n            return plugins;\n        })\n            .flat();\n        return [\n            inputRulesPlugin({\n                editor,\n                rules: inputRules,\n            }),\n            ...pasteRulesPlugin({\n                editor,\n                rules: pasteRules,\n            }),\n            ...allPlugins,\n        ];\n    }\n    /**\n     * Get all attributes from the extensions.\n     * @returns An array of attributes\n     */\n    get attributes() {\n        return getAttributesFromExtensions(this.extensions);\n    }\n    /**\n     * Get all node views from the extensions.\n     * @returns An object with all node views where the key is the node name and the value is the node view function\n     */\n    get nodeViews() {\n        const { editor } = this;\n        const { nodeExtensions } = splitExtensions(this.extensions);\n        return Object.fromEntries(nodeExtensions\n            .filter(extension => !!getExtensionField(extension, 'addNodeView'))\n            .map(extension => {\n            const extensionAttributes = this.attributes.filter(attribute => attribute.type === extension.name);\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor,\n                type: getNodeType(extension.name, this.schema),\n            };\n            const addNodeView = getExtensionField(extension, 'addNodeView', context);\n            if (!addNodeView) {\n                return [];\n            }\n            const nodeview = (node, view, getPos, decorations, innerDecorations) => {\n                const HTMLAttributes = getRenderedAttributes(node, extensionAttributes);\n                return addNodeView()({\n                    // pass-through\n                    node,\n                    view,\n                    getPos: getPos,\n                    decorations,\n                    innerDecorations,\n                    // tiptap-specific\n                    editor,\n                    extension,\n                    HTMLAttributes,\n                });\n            };\n            return [extension.name, nodeview];\n        }));\n    }\n    /**\n     * Go through all extensions, create extension storages & setup marks\n     * & bind editor event listener.\n     */\n    setupExtensions() {\n        this.extensions.forEach(extension => {\n            var _a;\n            // store extension storage in editor\n            this.editor.extensionStorage[extension.name] = extension.storage;\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor: this.editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            if (extension.type === 'mark') {\n                const keepOnSplit = (_a = callOrReturn(getExtensionField(extension, 'keepOnSplit', context))) !== null && _a !== void 0 ? _a : true;\n                if (keepOnSplit) {\n                    this.splittableMarks.push(extension.name);\n                }\n            }\n            const onBeforeCreate = getExtensionField(extension, 'onBeforeCreate', context);\n            const onCreate = getExtensionField(extension, 'onCreate', context);\n            const onUpdate = getExtensionField(extension, 'onUpdate', context);\n            const onSelectionUpdate = getExtensionField(extension, 'onSelectionUpdate', context);\n            const onTransaction = getExtensionField(extension, 'onTransaction', context);\n            const onFocus = getExtensionField(extension, 'onFocus', context);\n            const onBlur = getExtensionField(extension, 'onBlur', context);\n            const onDestroy = getExtensionField(extension, 'onDestroy', context);\n            if (onBeforeCreate) {\n                this.editor.on('beforeCreate', onBeforeCreate);\n            }\n            if (onCreate) {\n                this.editor.on('create', onCreate);\n            }\n            if (onUpdate) {\n                this.editor.on('update', onUpdate);\n            }\n            if (onSelectionUpdate) {\n                this.editor.on('selectionUpdate', onSelectionUpdate);\n            }\n            if (onTransaction) {\n                this.editor.on('transaction', onTransaction);\n            }\n            if (onFocus) {\n                this.editor.on('focus', onFocus);\n            }\n            if (onBlur) {\n                this.editor.on('blur', onBlur);\n            }\n            if (onDestroy) {\n                this.editor.on('destroy', onDestroy);\n            }\n        });\n    }\n}\n\n/**\n * The Extension class is the base class for all extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Extension {\n    constructor(config = {}) {\n        this.type = 'extension';\n        this.name = 'extension';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Extension(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Extension({ ...this.config, ...extendedConfig });\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n}\n\n/**\n * Gets the text between two positions in a Prosemirror node\n * and serializes it using the given text serializers and block separator (see getText)\n * @param startNode The Prosemirror node to start from\n * @param range The range of the text to get\n * @param options Options for the text serializer & block separator\n * @returns The text between the two positions\n */\nfunction getTextBetween(startNode, range, options) {\n    const { from, to } = range;\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n    let text = '';\n    startNode.nodesBetween(from, to, (node, pos, parent, index) => {\n        var _a;\n        if (node.isBlock && pos > from) {\n            text += blockSeparator;\n        }\n        const textSerializer = textSerializers === null || textSerializers === void 0 ? void 0 : textSerializers[node.type.name];\n        if (textSerializer) {\n            if (parent) {\n                text += textSerializer({\n                    node,\n                    pos,\n                    parent,\n                    index,\n                    range,\n                });\n            }\n            // do not descend into child nodes when there exists a serializer\n            return false;\n        }\n        if (node.isText) {\n            text += (_a = node === null || node === void 0 ? void 0 : node.text) === null || _a === void 0 ? void 0 : _a.slice(Math.max(from, pos) - pos, to - pos); // eslint-disable-line\n        }\n    });\n    return text;\n}\n\n/**\n * Find text serializers `toText` in a Prosemirror schema\n * @param schema The Prosemirror schema to search in\n * @returns A record of text serializers by node name\n */\nfunction getTextSerializersFromSchema(schema) {\n    return Object.fromEntries(Object.entries(schema.nodes)\n        .filter(([, node]) => node.spec.toText)\n        .map(([name, node]) => [name, node.spec.toText]));\n}\n\nconst ClipboardTextSerializer = Extension.create({\n    name: 'clipboardTextSerializer',\n    addOptions() {\n        return {\n            blockSeparator: undefined,\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('clipboardTextSerializer'),\n                props: {\n                    clipboardTextSerializer: () => {\n                        const { editor } = this;\n                        const { state, schema } = editor;\n                        const { doc, selection } = state;\n                        const { ranges } = selection;\n                        const from = Math.min(...ranges.map(range => range.$from.pos));\n                        const to = Math.max(...ranges.map(range => range.$to.pos));\n                        const textSerializers = getTextSerializersFromSchema(schema);\n                        const range = { from, to };\n                        return getTextBetween(doc, range, {\n                            ...(this.options.blockSeparator !== undefined\n                                ? { blockSeparator: this.options.blockSeparator }\n                                : {}),\n                            textSerializers,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst blur = () => ({ editor, view }) => {\n    requestAnimationFrame(() => {\n        var _a;\n        if (!editor.isDestroyed) {\n            view.dom.blur();\n            // Browsers should remove the caret on blur but safari does not.\n            // See: https://github.com/ueberdosis/tiptap/issues/2405\n            (_a = window === null || window === void 0 ? void 0 : window.getSelection()) === null || _a === void 0 ? void 0 : _a.removeAllRanges();\n        }\n    });\n    return true;\n};\n\nconst clearContent = (emitUpdate = false) => ({ commands }) => {\n    return commands.setContent('', emitUpdate);\n};\n\nconst clearNodes = () => ({ state, tr, dispatch }) => {\n    const { selection } = tr;\n    const { ranges } = selection;\n    if (!dispatch) {\n        return true;\n    }\n    ranges.forEach(({ $from, $to }) => {\n        state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.type.isText) {\n                return;\n            }\n            const { doc, mapping } = tr;\n            const $mappedFrom = doc.resolve(mapping.map(pos));\n            const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize));\n            const nodeRange = $mappedFrom.blockRange($mappedTo);\n            if (!nodeRange) {\n                return;\n            }\n            const targetLiftDepth = liftTarget(nodeRange);\n            if (node.type.isTextblock) {\n                const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index());\n                tr.setNodeMarkup(nodeRange.start, defaultType);\n            }\n            if (targetLiftDepth || targetLiftDepth === 0) {\n                tr.lift(nodeRange, targetLiftDepth);\n            }\n        });\n    });\n    return true;\n};\n\nconst command = fn => props => {\n    return fn(props);\n};\n\nconst createParagraphNear = () => ({ state, dispatch }) => {\n    return createParagraphNear$1(state, dispatch);\n};\n\nconst cut = (originRange, targetPos) => ({ editor, tr }) => {\n    const { state } = editor;\n    const contentSlice = state.doc.slice(originRange.from, originRange.to);\n    tr.deleteRange(originRange.from, originRange.to);\n    const newPos = tr.mapping.map(targetPos);\n    tr.insert(newPos, contentSlice.content);\n    tr.setSelection(new TextSelection(tr.doc.resolve(newPos - 1)));\n    return true;\n};\n\nconst deleteCurrentNode = () => ({ tr, dispatch }) => {\n    const { selection } = tr;\n    const currentNode = selection.$anchor.node();\n    // if there is content inside the current node, break out of this command\n    if (currentNode.content.size > 0) {\n        return false;\n    }\n    const $pos = tr.selection.$anchor;\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n        const node = $pos.node(depth);\n        if (node.type === currentNode.type) {\n            if (dispatch) {\n                const from = $pos.before(depth);\n                const to = $pos.after(depth);\n                tr.delete(from, to).scrollIntoView();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst deleteNode = typeOrName => ({ tr, state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const $pos = tr.selection.$anchor;\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n        const node = $pos.node(depth);\n        if (node.type === type) {\n            if (dispatch) {\n                const from = $pos.before(depth);\n                const to = $pos.after(depth);\n                tr.delete(from, to).scrollIntoView();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst deleteRange = range => ({ tr, dispatch }) => {\n    const { from, to } = range;\n    if (dispatch) {\n        tr.delete(from, to);\n    }\n    return true;\n};\n\nconst deleteSelection = () => ({ state, dispatch }) => {\n    return deleteSelection$1(state, dispatch);\n};\n\nconst enter = () => ({ commands }) => {\n    return commands.keyboardShortcut('Enter');\n};\n\nconst exitCode = () => ({ state, dispatch }) => {\n    return exitCode$1(state, dispatch);\n};\n\n/**\n * Check if object1 includes object2\n * @param object1 Object\n * @param object2 Object\n */\nfunction objectIncludes(object1, object2, options = { strict: true }) {\n    const keys = Object.keys(object2);\n    if (!keys.length) {\n        return true;\n    }\n    return keys.every(key => {\n        if (options.strict) {\n            return object2[key] === object1[key];\n        }\n        if (isRegExp(object2[key])) {\n            return object2[key].test(object1[key]);\n        }\n        return object2[key] === object1[key];\n    });\n}\n\nfunction findMarkInSet(marks, type, attributes = {}) {\n    return marks.find(item => {\n        return (item.type === type\n            && objectIncludes(\n            // Only check equality for the attributes that are provided\n            Object.fromEntries(Object.keys(attributes).map(k => [k, item.attrs[k]])), attributes));\n    });\n}\nfunction isMarkInSet(marks, type, attributes = {}) {\n    return !!findMarkInSet(marks, type, attributes);\n}\n/**\n * Get the range of a mark at a resolved position.\n */\nfunction getMarkRange(\n/**\n * The position to get the mark range for.\n */\n$pos, \n/**\n * The mark type to get the range for.\n */\ntype, \n/**\n * The attributes to match against.\n * If not provided, only the first mark at the position will be matched.\n */\nattributes) {\n    var _a;\n    if (!$pos || !type) {\n        return;\n    }\n    let start = $pos.parent.childAfter($pos.parentOffset);\n    // If the cursor is at the start of a text node that does not have the mark, look backward\n    if (!start.node || !start.node.marks.some(mark => mark.type === type)) {\n        start = $pos.parent.childBefore($pos.parentOffset);\n    }\n    // If there is no text node with the mark even backward, return undefined\n    if (!start.node || !start.node.marks.some(mark => mark.type === type)) {\n        return;\n    }\n    // Default to only matching against the first mark's attributes\n    attributes = attributes || ((_a = start.node.marks[0]) === null || _a === void 0 ? void 0 : _a.attrs);\n    // We now know that the cursor is either at the start, middle or end of a text node with the specified mark\n    // so we can look it up on the targeted mark\n    const mark = findMarkInSet([...start.node.marks], type, attributes);\n    if (!mark) {\n        return;\n    }\n    let startIndex = start.index;\n    let startPos = $pos.start() + start.offset;\n    let endIndex = startIndex + 1;\n    let endPos = startPos + start.node.nodeSize;\n    while (startIndex > 0\n        && isMarkInSet([...$pos.parent.child(startIndex - 1).marks], type, attributes)) {\n        startIndex -= 1;\n        startPos -= $pos.parent.child(startIndex).nodeSize;\n    }\n    while (endIndex < $pos.parent.childCount\n        && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)) {\n        endPos += $pos.parent.child(endIndex).nodeSize;\n        endIndex += 1;\n    }\n    return {\n        from: startPos,\n        to: endPos,\n    };\n}\n\nfunction getMarkType(nameOrType, schema) {\n    if (typeof nameOrType === 'string') {\n        if (!schema.marks[nameOrType]) {\n            throw Error(`There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`);\n        }\n        return schema.marks[nameOrType];\n    }\n    return nameOrType;\n}\n\nconst extendMarkRange = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    const type = getMarkType(typeOrName, state.schema);\n    const { doc, selection } = tr;\n    const { $from, from, to } = selection;\n    if (dispatch) {\n        const range = getMarkRange($from, type, attributes);\n        if (range && range.from <= from && range.to >= to) {\n            const newSelection = TextSelection.create(doc, range.from, range.to);\n            tr.setSelection(newSelection);\n        }\n    }\n    return true;\n};\n\nconst first = commands => props => {\n    const items = typeof commands === 'function'\n        ? commands(props)\n        : commands;\n    for (let i = 0; i < items.length; i += 1) {\n        if (items[i](props)) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction isTextSelection(value) {\n    return value instanceof TextSelection;\n}\n\nfunction minMax(value = 0, min = 0, max = 0) {\n    return Math.min(Math.max(value, min), max);\n}\n\nfunction resolveFocusPosition(doc, position = null) {\n    if (!position) {\n        return null;\n    }\n    const selectionAtStart = Selection.atStart(doc);\n    const selectionAtEnd = Selection.atEnd(doc);\n    if (position === 'start' || position === true) {\n        return selectionAtStart;\n    }\n    if (position === 'end') {\n        return selectionAtEnd;\n    }\n    const minPos = selectionAtStart.from;\n    const maxPos = selectionAtEnd.to;\n    if (position === 'all') {\n        return TextSelection.create(doc, minMax(0, minPos, maxPos), minMax(doc.content.size, minPos, maxPos));\n    }\n    return TextSelection.create(doc, minMax(position, minPos, maxPos), minMax(position, minPos, maxPos));\n}\n\nfunction isAndroid() {\n    return navigator.platform === 'Android' || /android/i.test(navigator.userAgent);\n}\n\nfunction isiOS() {\n    return [\n        'iPad Simulator',\n        'iPhone Simulator',\n        'iPod Simulator',\n        'iPad',\n        'iPhone',\n        'iPod',\n    ].includes(navigator.platform)\n        // iPad on iOS 13 detection\n        || (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\n}\n\nconst focus = (position = null, options = {}) => ({ editor, view, tr, dispatch, }) => {\n    options = {\n        scrollIntoView: true,\n        ...options,\n    };\n    const delayedFocus = () => {\n        // focus within `requestAnimationFrame` breaks focus on iOS and Android\n        // so we have to call this\n        if (isiOS() || isAndroid()) {\n            view.dom.focus();\n        }\n        // For React we have to focus asynchronously. Otherwise wild things happen.\n        // see: https://github.com/ueberdosis/tiptap/issues/1520\n        requestAnimationFrame(() => {\n            if (!editor.isDestroyed) {\n                view.focus();\n                if (options === null || options === void 0 ? void 0 : options.scrollIntoView) {\n                    editor.commands.scrollIntoView();\n                }\n            }\n        });\n    };\n    if ((view.hasFocus() && position === null) || position === false) {\n        return true;\n    }\n    // we don’t try to resolve a NodeSelection or CellSelection\n    if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\n        delayedFocus();\n        return true;\n    }\n    // pass through tr.doc instead of editor.state.doc\n    // since transactions could change the editors state before this command has been run\n    const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection;\n    const isSameSelection = editor.state.selection.eq(selection);\n    if (dispatch) {\n        if (!isSameSelection) {\n            tr.setSelection(selection);\n        }\n        // `tr.setSelection` resets the stored marks\n        // so we’ll restore them if the selection is the same as before\n        if (isSameSelection && tr.storedMarks) {\n            tr.setStoredMarks(tr.storedMarks);\n        }\n        delayedFocus();\n    }\n    return true;\n};\n\nconst forEach = (items, fn) => props => {\n    return items.every((item, index) => fn(item, { ...props, index }));\n};\n\nconst insertContent = (value, options) => ({ tr, commands }) => {\n    return commands.insertContentAt({ from: tr.selection.from, to: tr.selection.to }, value, options);\n};\n\nconst removeWhitespaces = (node) => {\n    const children = node.childNodes;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n        const child = children[i];\n        if (child.nodeType === 3 && child.nodeValue && /^(\\n\\s\\s|\\n)$/.test(child.nodeValue)) {\n            node.removeChild(child);\n        }\n        else if (child.nodeType === 1) {\n            removeWhitespaces(child);\n        }\n    }\n    return node;\n};\nfunction elementFromString(value) {\n    // add a wrapper to preserve leading and trailing whitespace\n    const wrappedValue = `<body>${value}</body>`;\n    const html = new window.DOMParser().parseFromString(wrappedValue, 'text/html').body;\n    return removeWhitespaces(html);\n}\n\n/**\n * Takes a JSON or HTML content and creates a Prosemirror node or fragment from it.\n * @param content The JSON or HTML content to create the node from\n * @param schema The Prosemirror schema to use for the node\n * @param options Options for the parser\n * @returns The created Prosemirror node or fragment\n */\nfunction createNodeFromContent(content, schema, options) {\n    if (content instanceof Node$1 || content instanceof Fragment) {\n        return content;\n    }\n    options = {\n        slice: true,\n        parseOptions: {},\n        ...options,\n    };\n    const isJSONContent = typeof content === 'object' && content !== null;\n    const isTextContent = typeof content === 'string';\n    if (isJSONContent) {\n        try {\n            const isArrayContent = Array.isArray(content) && content.length > 0;\n            // if the JSON Content is an array of nodes, create a fragment for each node\n            if (isArrayContent) {\n                return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)));\n            }\n            const node = schema.nodeFromJSON(content);\n            if (options.errorOnInvalidContent) {\n                node.check();\n            }\n            return node;\n        }\n        catch (error) {\n            if (options.errorOnInvalidContent) {\n                throw new Error('[tiptap error]: Invalid JSON content', { cause: error });\n            }\n            console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error);\n            return createNodeFromContent('', schema, options);\n        }\n    }\n    if (isTextContent) {\n        // Check for invalid content\n        if (options.errorOnInvalidContent) {\n            let hasInvalidContent = false;\n            let invalidContent = '';\n            // A copy of the current schema with a catch-all node at the end\n            const contentCheckSchema = new Schema({\n                topNode: schema.spec.topNode,\n                marks: schema.spec.marks,\n                // Prosemirror's schemas are executed such that: the last to execute, matches last\n                // This means that we can add a catch-all node at the end of the schema to catch any content that we don't know how to handle\n                nodes: schema.spec.nodes.append({\n                    __tiptap__private__unknown__catch__all__node: {\n                        content: 'inline*',\n                        group: 'block',\n                        parseDOM: [\n                            {\n                                tag: '*',\n                                getAttrs: e => {\n                                    // If this is ever called, we know that the content has something that we don't know how to handle in the schema\n                                    hasInvalidContent = true;\n                                    // Try to stringify the element for a more helpful error message\n                                    invalidContent = typeof e === 'string' ? e : e.outerHTML;\n                                    return null;\n                                },\n                            },\n                        ],\n                    },\n                }),\n            });\n            if (options.slice) {\n                DOMParser.fromSchema(contentCheckSchema).parseSlice(elementFromString(content), options.parseOptions);\n            }\n            else {\n                DOMParser.fromSchema(contentCheckSchema).parse(elementFromString(content), options.parseOptions);\n            }\n            if (options.errorOnInvalidContent && hasInvalidContent) {\n                throw new Error('[tiptap error]: Invalid HTML content', { cause: new Error(`Invalid element found: ${invalidContent}`) });\n            }\n        }\n        const parser = DOMParser.fromSchema(schema);\n        if (options.slice) {\n            return parser.parseSlice(elementFromString(content), options.parseOptions).content;\n        }\n        return parser.parse(elementFromString(content), options.parseOptions);\n    }\n    return createNodeFromContent('', schema, options);\n}\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    const last = tr.steps.length - 1;\n    if (last < startLen) {\n        return;\n    }\n    const step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n        return;\n    }\n    const map = tr.mapping.maps[last];\n    let end = 0;\n    map.forEach((_from, _to, _newFrom, newTo) => {\n        if (end === 0) {\n            end = newTo;\n        }\n    });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst isFragment = (nodeOrFragment) => {\n    return !('type' in nodeOrFragment);\n};\nconst insertContentAt = (position, value, options) => ({ tr, dispatch, editor }) => {\n    var _a;\n    if (dispatch) {\n        options = {\n            parseOptions: editor.options.parseOptions,\n            updateSelection: true,\n            applyInputRules: false,\n            applyPasteRules: false,\n            ...options,\n        };\n        let content;\n        try {\n            content = createNodeFromContent(value, editor.schema, {\n                parseOptions: {\n                    preserveWhitespace: 'full',\n                    ...options.parseOptions,\n                },\n                errorOnInvalidContent: (_a = options.errorOnInvalidContent) !== null && _a !== void 0 ? _a : editor.options.enableContentCheck,\n            });\n        }\n        catch (e) {\n            editor.emit('contentError', {\n                editor,\n                error: e,\n                disableCollaboration: () => {\n                    if (editor.storage.collaboration) {\n                        editor.storage.collaboration.isDisabled = true;\n                    }\n                },\n            });\n            return false;\n        }\n        let { from, to } = typeof position === 'number' ? { from: position, to: position } : { from: position.from, to: position.to };\n        let isOnlyTextContent = true;\n        let isOnlyBlockContent = true;\n        const nodes = isFragment(content) ? content : [content];\n        nodes.forEach(node => {\n            // check if added node is valid\n            node.check();\n            isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false;\n            isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false;\n        });\n        // check if we can replace the wrapping node by\n        // the newly inserted content\n        // example:\n        // replace an empty paragraph by an inserted image\n        // instead of inserting the image below the paragraph\n        if (from === to && isOnlyBlockContent) {\n            const { parent } = tr.doc.resolve(from);\n            const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount;\n            if (isEmptyTextBlock) {\n                from -= 1;\n                to += 1;\n            }\n        }\n        let newContent;\n        // if there is only plain text we have to use `insertText`\n        // because this will keep the current marks\n        if (isOnlyTextContent) {\n            // if value is string, we can use it directly\n            // otherwise if it is an array, we have to join it\n            if (Array.isArray(value)) {\n                newContent = value.map(v => v.text || '').join('');\n            }\n            else if (value instanceof Fragment) {\n                let text = '';\n                value.forEach(node => {\n                    if (node.text) {\n                        text += node.text;\n                    }\n                });\n                newContent = text;\n            }\n            else if (typeof value === 'object' && !!value && !!value.text) {\n                newContent = value.text;\n            }\n            else {\n                newContent = value;\n            }\n            tr.insertText(newContent, from, to);\n        }\n        else {\n            newContent = content;\n            tr.replaceWith(from, to, newContent);\n        }\n        // set cursor at end of inserted content\n        if (options.updateSelection) {\n            selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\n        }\n        if (options.applyInputRules) {\n            tr.setMeta('applyInputRules', { from, text: newContent });\n        }\n        if (options.applyPasteRules) {\n            tr.setMeta('applyPasteRules', { from, text: newContent });\n        }\n    }\n    return true;\n};\n\nconst joinUp = () => ({ state, dispatch }) => {\n    return joinUp$1(state, dispatch);\n};\nconst joinDown = () => ({ state, dispatch }) => {\n    return joinDown$1(state, dispatch);\n};\nconst joinBackward = () => ({ state, dispatch }) => {\n    return joinBackward$1(state, dispatch);\n};\nconst joinForward = () => ({ state, dispatch }) => {\n    return joinForward$1(state, dispatch);\n};\n\nconst joinItemBackward = () => ({ state, dispatch, tr, }) => {\n    try {\n        const point = joinPoint(state.doc, state.selection.$from.pos, -1);\n        if (point === null || point === undefined) {\n            return false;\n        }\n        tr.join(point, 2);\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n\nconst joinItemForward = () => ({ state, dispatch, tr, }) => {\n    try {\n        const point = joinPoint(state.doc, state.selection.$from.pos, +1);\n        if (point === null || point === undefined) {\n            return false;\n        }\n        tr.join(point, 2);\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n\nconst joinTextblockBackward = () => ({ state, dispatch }) => {\n    return joinTextblockBackward$1(state, dispatch);\n};\n\nconst joinTextblockForward = () => ({ state, dispatch }) => {\n    return joinTextblockForward$1(state, dispatch);\n};\n\nfunction isMacOS() {\n    return typeof navigator !== 'undefined'\n        ? /Mac/.test(navigator.platform)\n        : false;\n}\n\nfunction normalizeKeyName(name) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result === 'Space') {\n        result = ' ';\n    }\n    let alt;\n    let ctrl;\n    let shift;\n    let meta;\n    for (let i = 0; i < parts.length - 1; i += 1) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod)) {\n            meta = true;\n        }\n        else if (/^a(lt)?$/i.test(mod)) {\n            alt = true;\n        }\n        else if (/^(c|ctrl|control)$/i.test(mod)) {\n            ctrl = true;\n        }\n        else if (/^s(hift)?$/i.test(mod)) {\n            shift = true;\n        }\n        else if (/^mod$/i.test(mod)) {\n            if (isiOS() || isMacOS()) {\n                meta = true;\n            }\n            else {\n                ctrl = true;\n            }\n        }\n        else {\n            throw new Error(`Unrecognized modifier name: ${mod}`);\n        }\n    }\n    if (alt) {\n        result = `Alt-${result}`;\n    }\n    if (ctrl) {\n        result = `Ctrl-${result}`;\n    }\n    if (meta) {\n        result = `Meta-${result}`;\n    }\n    if (shift) {\n        result = `Shift-${result}`;\n    }\n    return result;\n}\nconst keyboardShortcut = name => ({ editor, view, tr, dispatch, }) => {\n    const keys = normalizeKeyName(name).split(/-(?!$)/);\n    const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item));\n    const event = new KeyboardEvent('keydown', {\n        key: key === 'Space'\n            ? ' '\n            : key,\n        altKey: keys.includes('Alt'),\n        ctrlKey: keys.includes('Ctrl'),\n        metaKey: keys.includes('Meta'),\n        shiftKey: keys.includes('Shift'),\n        bubbles: true,\n        cancelable: true,\n    });\n    const capturedTransaction = editor.captureTransaction(() => {\n        view.someProp('handleKeyDown', f => f(view, event));\n    });\n    capturedTransaction === null || capturedTransaction === void 0 ? void 0 : capturedTransaction.steps.forEach(step => {\n        const newStep = step.map(tr.mapping);\n        if (newStep && dispatch) {\n            tr.maybeStep(newStep);\n        }\n    });\n    return true;\n};\n\nfunction isNodeActive(state, typeOrName, attributes = {}) {\n    const { from, to, empty } = state.selection;\n    const type = typeOrName ? getNodeType(typeOrName, state.schema) : null;\n    const nodeRanges = [];\n    state.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isText) {\n            return;\n        }\n        const relativeFrom = Math.max(from, pos);\n        const relativeTo = Math.min(to, pos + node.nodeSize);\n        nodeRanges.push({\n            node,\n            from: relativeFrom,\n            to: relativeTo,\n        });\n    });\n    const selectionRange = to - from;\n    const matchedNodeRanges = nodeRanges\n        .filter(nodeRange => {\n        if (!type) {\n            return true;\n        }\n        return type.name === nodeRange.node.type.name;\n    })\n        .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }));\n    if (empty) {\n        return !!matchedNodeRanges.length;\n    }\n    const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0);\n    return range >= selectionRange;\n}\n\nconst lift = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    if (!isActive) {\n        return false;\n    }\n    return lift$1(state, dispatch);\n};\n\nconst liftEmptyBlock = () => ({ state, dispatch }) => {\n    return liftEmptyBlock$1(state, dispatch);\n};\n\nconst liftListItem = typeOrName => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return liftListItem$1(type)(state, dispatch);\n};\n\nconst newlineInCode = () => ({ state, dispatch }) => {\n    return newlineInCode$1(state, dispatch);\n};\n\n/**\n * Get the type of a schema item by its name.\n * @param name The name of the schema item\n * @param schema The Prosemiror schema to search in\n * @returns The type of the schema item (`node` or `mark`), or null if it doesn't exist\n */\nfunction getSchemaTypeNameByName(name, schema) {\n    if (schema.nodes[name]) {\n        return 'node';\n    }\n    if (schema.marks[name]) {\n        return 'mark';\n    }\n    return null;\n}\n\n/**\n * Remove a property or an array of properties from an object\n * @param obj Object\n * @param key Key to remove\n */\nfunction deleteProps(obj, propOrProps) {\n    const props = typeof propOrProps === 'string'\n        ? [propOrProps]\n        : propOrProps;\n    return Object\n        .keys(obj)\n        .reduce((newObj, prop) => {\n        if (!props.includes(prop)) {\n            newObj[prop] = obj[prop];\n        }\n        return newObj;\n    }, {});\n}\n\nconst resetAttributes = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\n    let nodeType = null;\n    let markType = null;\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (!schemaType) {\n        return false;\n    }\n    if (schemaType === 'node') {\n        nodeType = getNodeType(typeOrName, state.schema);\n    }\n    if (schemaType === 'mark') {\n        markType = getMarkType(typeOrName, state.schema);\n    }\n    if (dispatch) {\n        tr.selection.ranges.forEach(range => {\n            state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\n                if (nodeType && nodeType === node.type) {\n                    tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes));\n                }\n                if (markType && node.marks.length) {\n                    node.marks.forEach(mark => {\n                        if (markType === mark.type) {\n                            tr.addMark(pos, pos + node.nodeSize, markType.create(deleteProps(mark.attrs, attributes)));\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return true;\n};\n\nconst scrollIntoView = () => ({ tr, dispatch }) => {\n    if (dispatch) {\n        tr.scrollIntoView();\n    }\n    return true;\n};\n\nconst selectAll = () => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const selection = new AllSelection(tr.doc);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst selectNodeBackward = () => ({ state, dispatch }) => {\n    return selectNodeBackward$1(state, dispatch);\n};\n\nconst selectNodeForward = () => ({ state, dispatch }) => {\n    return selectNodeForward$1(state, dispatch);\n};\n\nconst selectParentNode = () => ({ state, dispatch }) => {\n    return selectParentNode$1(state, dispatch);\n};\n\n// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nconst selectTextblockEnd = () => ({ state, dispatch }) => {\n    return selectTextblockEnd$1(state, dispatch);\n};\n\n// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nconst selectTextblockStart = () => ({ state, dispatch }) => {\n    return selectTextblockStart$1(state, dispatch);\n};\n\n/**\n * Create a new Prosemirror document node from content.\n * @param content The JSON or HTML content to create the document from\n * @param schema The Prosemirror schema to use for the document\n * @param parseOptions Options for the parser\n * @returns The created Prosemirror document node\n */\nfunction createDocument(content, schema, parseOptions = {}, options = {}) {\n    return createNodeFromContent(content, schema, {\n        slice: false,\n        parseOptions,\n        errorOnInvalidContent: options.errorOnInvalidContent,\n    });\n}\n\nconst setContent = (content, emitUpdate = false, parseOptions = {}, options = {}) => ({ editor, tr, dispatch, commands, }) => {\n    var _a, _b;\n    const { doc } = tr;\n    // This is to keep backward compatibility with the previous behavior\n    // TODO remove this in the next major version\n    if (parseOptions.preserveWhitespace !== 'full') {\n        const document = createDocument(content, editor.schema, parseOptions, {\n            errorOnInvalidContent: (_a = options.errorOnInvalidContent) !== null && _a !== void 0 ? _a : editor.options.enableContentCheck,\n        });\n        if (dispatch) {\n            tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate);\n        }\n        return true;\n    }\n    if (dispatch) {\n        tr.setMeta('preventUpdate', !emitUpdate);\n    }\n    return commands.insertContentAt({ from: 0, to: doc.content.size }, content, {\n        parseOptions,\n        errorOnInvalidContent: (_b = options.errorOnInvalidContent) !== null && _b !== void 0 ? _b : editor.options.enableContentCheck,\n    });\n};\n\nfunction getMarkAttributes(state, typeOrName) {\n    const type = getMarkType(typeOrName, state.schema);\n    const { from, to, empty } = state.selection;\n    const marks = [];\n    if (empty) {\n        if (state.storedMarks) {\n            marks.push(...state.storedMarks);\n        }\n        marks.push(...state.selection.$head.marks());\n    }\n    else {\n        state.doc.nodesBetween(from, to, node => {\n            marks.push(...node.marks);\n        });\n    }\n    const mark = marks.find(markItem => markItem.type.name === type.name);\n    if (!mark) {\n        return {};\n    }\n    return { ...mark.attrs };\n}\n\n/**\n * Returns a new `Transform` based on all steps of the passed transactions.\n * @param oldDoc The Prosemirror node to start from\n * @param transactions The transactions to combine\n * @returns A new `Transform` with all steps of the passed transactions\n */\nfunction combineTransactionSteps(oldDoc, transactions) {\n    const transform = new Transform(oldDoc);\n    transactions.forEach(transaction => {\n        transaction.steps.forEach(step => {\n            transform.step(step);\n        });\n    });\n    return transform;\n}\n\n/**\n * Gets the default block type at a given match\n * @param match The content match to get the default block type from\n * @returns The default block type or null\n */\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i += 1) {\n        const { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs()) {\n            return type;\n        }\n    }\n    return null;\n}\n\n/**\n * Find children inside a Prosemirror node that match a predicate.\n * @param node The Prosemirror node to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nfunction findChildren(node, predicate) {\n    const nodesWithPos = [];\n    node.descendants((child, pos) => {\n        if (predicate(child)) {\n            nodesWithPos.push({\n                node: child,\n                pos,\n            });\n        }\n    });\n    return nodesWithPos;\n}\n\n/**\n * Same as `findChildren` but searches only within a `range`.\n * @param node The Prosemirror node to search in\n * @param range The range to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nfunction findChildrenInRange(node, range, predicate) {\n    const nodesWithPos = [];\n    // if (range.from === range.to) {\n    //   const nodeAt = node.nodeAt(range.from)\n    //   if (nodeAt) {\n    //     nodesWithPos.push({\n    //       node: nodeAt,\n    //       pos: range.from,\n    //     })\n    //   }\n    // }\n    node.nodesBetween(range.from, range.to, (child, pos) => {\n        if (predicate(child)) {\n            nodesWithPos.push({\n                node: child,\n                pos,\n            });\n        }\n    });\n    return nodesWithPos;\n}\n\n/**\n * Finds the closest parent node to a resolved position that matches a predicate.\n * @param $pos The resolved position to search from\n * @param predicate The predicate to match\n * @returns The closest parent node to the resolved position that matches the predicate\n * @example ```js\n * findParentNodeClosestToPos($from, node => node.type.name === 'paragraph')\n * ```\n */\nfunction findParentNodeClosestToPos($pos, predicate) {\n    for (let i = $pos.depth; i > 0; i -= 1) {\n        const node = $pos.node(i);\n        if (predicate(node)) {\n            return {\n                pos: i > 0 ? $pos.before(i) : 0,\n                start: $pos.start(i),\n                depth: i,\n                node,\n            };\n        }\n    }\n}\n\n/**\n * Finds the closest parent node to the current selection that matches a predicate.\n * @param predicate The predicate to match\n * @returns A command that finds the closest parent node to the current selection that matches the predicate\n * @example ```js\n * findParentNode(node => node.type.name === 'paragraph')\n * ```\n */\nfunction findParentNode(predicate) {\n    return (selection) => findParentNodeClosestToPos(selection.$from, predicate);\n}\n\nfunction getSchema(extensions, editor) {\n    const resolvedExtensions = ExtensionManager.resolve(extensions);\n    return getSchemaByResolvedExtensions(resolvedExtensions, editor);\n}\n\n/**\n * Generate HTML from a JSONContent\n * @param doc The JSONContent to generate HTML from\n * @param extensions The extensions to use for the schema\n * @returns The generated HTML\n */\nfunction generateHTML(doc, extensions) {\n    const schema = getSchema(extensions);\n    const contentNode = Node$1.fromJSON(schema, doc);\n    return getHTMLFromFragment(contentNode.content, schema);\n}\n\n/**\n * Generate JSONContent from HTML\n * @param html The HTML to generate JSONContent from\n * @param extensions The extensions to use for the schema\n * @returns The generated JSONContent\n */\nfunction generateJSON(html, extensions) {\n    const schema = getSchema(extensions);\n    const dom = elementFromString(html);\n    return DOMParser.fromSchema(schema).parse(dom).toJSON();\n}\n\n/**\n * Gets the text of a Prosemirror node\n * @param node The Prosemirror node\n * @param options Options for the text serializer & block separator\n * @returns The text of the node\n * @example ```js\n * const text = getText(node, { blockSeparator: '\\n' })\n * ```\n */\nfunction getText(node, options) {\n    const range = {\n        from: 0,\n        to: node.content.size,\n    };\n    return getTextBetween(node, range, options);\n}\n\n/**\n * Generate raw text from a JSONContent\n * @param doc The JSONContent to generate text from\n * @param extensions The extensions to use for the schema\n * @param options Options for the text generation f.e. blockSeparator or textSerializers\n * @returns The generated text\n */\nfunction generateText(doc, extensions, options) {\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n    const schema = getSchema(extensions);\n    const contentNode = Node$1.fromJSON(schema, doc);\n    return getText(contentNode, {\n        blockSeparator,\n        textSerializers: {\n            ...getTextSerializersFromSchema(schema),\n            ...textSerializers,\n        },\n    });\n}\n\nfunction getNodeAttributes(state, typeOrName) {\n    const type = getNodeType(typeOrName, state.schema);\n    const { from, to } = state.selection;\n    const nodes = [];\n    state.doc.nodesBetween(from, to, node => {\n        nodes.push(node);\n    });\n    const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name);\n    if (!node) {\n        return {};\n    }\n    return { ...node.attrs };\n}\n\n/**\n * Get node or mark attributes by type or name on the current editor state\n * @param state The current editor state\n * @param typeOrName The node or mark type or name\n * @returns The attributes of the node or mark or an empty object\n */\nfunction getAttributes(state, typeOrName) {\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (schemaType === 'node') {\n        return getNodeAttributes(state, typeOrName);\n    }\n    if (schemaType === 'mark') {\n        return getMarkAttributes(state, typeOrName);\n    }\n    return {};\n}\n\n/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nfunction removeDuplicates(array, by = JSON.stringify) {\n    const seen = {};\n    return array.filter(item => {\n        const key = by(item);\n        return Object.prototype.hasOwnProperty.call(seen, key)\n            ? false\n            : (seen[key] = true);\n    });\n}\n\n/**\n * Removes duplicated ranges and ranges that are\n * fully captured by other ranges.\n */\nfunction simplifyChangedRanges(changes) {\n    const uniqueChanges = removeDuplicates(changes);\n    return uniqueChanges.length === 1\n        ? uniqueChanges\n        : uniqueChanges.filter((change, index) => {\n            const rest = uniqueChanges.filter((_, i) => i !== index);\n            return !rest.some(otherChange => {\n                return change.oldRange.from >= otherChange.oldRange.from\n                    && change.oldRange.to <= otherChange.oldRange.to\n                    && change.newRange.from >= otherChange.newRange.from\n                    && change.newRange.to <= otherChange.newRange.to;\n            });\n        });\n}\n/**\n * Returns a list of changed ranges\n * based on the first and last state of all steps.\n */\nfunction getChangedRanges(transform) {\n    const { mapping, steps } = transform;\n    const changes = [];\n    mapping.maps.forEach((stepMap, index) => {\n        const ranges = [];\n        // This accounts for step changes where no range was actually altered\n        // e.g. when setting a mark, node attribute, etc.\n        // @ts-ignore\n        if (!stepMap.ranges.length) {\n            const { from, to } = steps[index];\n            if (from === undefined || to === undefined) {\n                return;\n            }\n            ranges.push({ from, to });\n        }\n        else {\n            stepMap.forEach((from, to) => {\n                ranges.push({ from, to });\n            });\n        }\n        ranges.forEach(({ from, to }) => {\n            const newStart = mapping.slice(index).map(from, -1);\n            const newEnd = mapping.slice(index).map(to);\n            const oldStart = mapping.invert().map(newStart, -1);\n            const oldEnd = mapping.invert().map(newEnd);\n            changes.push({\n                oldRange: {\n                    from: oldStart,\n                    to: oldEnd,\n                },\n                newRange: {\n                    from: newStart,\n                    to: newEnd,\n                },\n            });\n        });\n    });\n    return simplifyChangedRanges(changes);\n}\n\nfunction getDebugJSON(node, startOffset = 0) {\n    const isTopNode = node.type === node.type.schema.topNodeType;\n    const increment = isTopNode ? 0 : 1;\n    const from = startOffset;\n    const to = from + node.nodeSize;\n    const marks = node.marks.map(mark => {\n        const output = {\n            type: mark.type.name,\n        };\n        if (Object.keys(mark.attrs).length) {\n            output.attrs = { ...mark.attrs };\n        }\n        return output;\n    });\n    const attrs = { ...node.attrs };\n    const output = {\n        type: node.type.name,\n        from,\n        to,\n    };\n    if (Object.keys(attrs).length) {\n        output.attrs = attrs;\n    }\n    if (marks.length) {\n        output.marks = marks;\n    }\n    if (node.content.childCount) {\n        output.content = [];\n        node.forEach((child, offset) => {\n            var _a;\n            (_a = output.content) === null || _a === void 0 ? void 0 : _a.push(getDebugJSON(child, startOffset + offset + increment));\n        });\n    }\n    if (node.text) {\n        output.text = node.text;\n    }\n    return output;\n}\n\nfunction getMarksBetween(from, to, doc) {\n    const marks = [];\n    // get all inclusive marks on empty selection\n    if (from === to) {\n        doc\n            .resolve(from)\n            .marks()\n            .forEach(mark => {\n            const $pos = doc.resolve(from);\n            const range = getMarkRange($pos, mark.type);\n            if (!range) {\n                return;\n            }\n            marks.push({\n                mark,\n                ...range,\n            });\n        });\n    }\n    else {\n        doc.nodesBetween(from, to, (node, pos) => {\n            if (!node || (node === null || node === void 0 ? void 0 : node.nodeSize) === undefined) {\n                return;\n            }\n            marks.push(...node.marks.map(mark => ({\n                from: pos,\n                to: pos + node.nodeSize,\n                mark,\n            })));\n        });\n    }\n    return marks;\n}\n\n/**\n * Finds the first node of a given type or name in the current selection.\n * @param state The editor state.\n * @param typeOrName The node type or name.\n * @param pos The position to start searching from.\n * @param maxDepth The maximum depth to search.\n * @returns The node and the depth as an array.\n */\nconst getNodeAtPosition = (state, typeOrName, pos, maxDepth = 20) => {\n    const $pos = state.doc.resolve(pos);\n    let currentDepth = maxDepth;\n    let node = null;\n    while (currentDepth > 0 && node === null) {\n        const currentNode = $pos.node(currentDepth);\n        if ((currentNode === null || currentNode === void 0 ? void 0 : currentNode.type.name) === typeOrName) {\n            node = currentNode;\n        }\n        else {\n            currentDepth -= 1;\n        }\n    }\n    return [node, currentDepth];\n};\n\n/**\n * Return attributes of an extension that should be splitted by keepOnSplit flag\n * @param extensionAttributes Array of extension attributes\n * @param typeName The type of the extension\n * @param attributes The attributes of the extension\n * @returns The splitted attributes\n */\nfunction getSplittedAttributes(extensionAttributes, typeName, attributes) {\n    return Object.fromEntries(Object\n        .entries(attributes)\n        .filter(([name]) => {\n        const extensionAttribute = extensionAttributes.find(item => {\n            return item.type === typeName && item.name === name;\n        });\n        if (!extensionAttribute) {\n            return false;\n        }\n        return extensionAttribute.attribute.keepOnSplit;\n    }));\n}\n\nfunction isMarkActive(state, typeOrName, attributes = {}) {\n    const { empty, ranges } = state.selection;\n    const type = typeOrName ? getMarkType(typeOrName, state.schema) : null;\n    if (empty) {\n        return !!(state.storedMarks || state.selection.$from.marks())\n            .filter(mark => {\n            if (!type) {\n                return true;\n            }\n            return type.name === mark.type.name;\n        })\n            .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }));\n    }\n    let selectionRange = 0;\n    const markRanges = [];\n    ranges.forEach(({ $from, $to }) => {\n        const from = $from.pos;\n        const to = $to.pos;\n        state.doc.nodesBetween(from, to, (node, pos) => {\n            if (!node.isText && !node.marks.length) {\n                return;\n            }\n            const relativeFrom = Math.max(from, pos);\n            const relativeTo = Math.min(to, pos + node.nodeSize);\n            const range = relativeTo - relativeFrom;\n            selectionRange += range;\n            markRanges.push(...node.marks.map(mark => ({\n                mark,\n                from: relativeFrom,\n                to: relativeTo,\n            })));\n        });\n    });\n    if (selectionRange === 0) {\n        return false;\n    }\n    // calculate range of matched mark\n    const matchedRange = markRanges\n        .filter(markRange => {\n        if (!type) {\n            return true;\n        }\n        return type.name === markRange.mark.type.name;\n    })\n        .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\n    // calculate range of marks that excludes the searched mark\n    // for example `code` doesn’t allow any other marks\n    const excludedRange = markRanges\n        .filter(markRange => {\n        if (!type) {\n            return true;\n        }\n        return markRange.mark.type !== type && markRange.mark.type.excludes(type);\n    })\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\n    // we only include the result of `excludedRange`\n    // if there is a match at all\n    const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange;\n    return range >= selectionRange;\n}\n\nfunction isActive(state, name, attributes = {}) {\n    if (!name) {\n        return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes);\n    }\n    const schemaType = getSchemaTypeNameByName(name, state.schema);\n    if (schemaType === 'node') {\n        return isNodeActive(state, name, attributes);\n    }\n    if (schemaType === 'mark') {\n        return isMarkActive(state, name, attributes);\n    }\n    return false;\n}\n\nconst isAtEndOfNode = (state, nodeType) => {\n    const { $from, $to, $anchor } = state.selection;\n    if (nodeType) {\n        const parentNode = findParentNode(node => node.type.name === nodeType)(state.selection);\n        if (!parentNode) {\n            return false;\n        }\n        const $parentPos = state.doc.resolve(parentNode.pos + 1);\n        if ($anchor.pos + 1 === $parentPos.end()) {\n            return true;\n        }\n        return false;\n    }\n    if ($to.parentOffset < $to.parent.nodeSize - 2 || $from.pos !== $to.pos) {\n        return false;\n    }\n    return true;\n};\n\nconst isAtStartOfNode = (state) => {\n    const { $from, $to } = state.selection;\n    if ($from.parentOffset > 0 || $from.pos !== $to.pos) {\n        return false;\n    }\n    return true;\n};\n\nfunction isList(name, extensions) {\n    const { nodeExtensions } = splitExtensions(extensions);\n    const extension = nodeExtensions.find(item => item.name === name);\n    if (!extension) {\n        return false;\n    }\n    const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n    };\n    const group = callOrReturn(getExtensionField(extension, 'group', context));\n    if (typeof group !== 'string') {\n        return false;\n    }\n    return group.split(' ').includes('list');\n}\n\n/**\n * Returns true if the given prosemirror node is empty.\n */\nfunction isNodeEmpty(node, { checkChildren = true, ignoreWhitespace = false, } = {}) {\n    var _a;\n    if (ignoreWhitespace) {\n        if (node.type.name === 'hardBreak') {\n            // Hard breaks are considered empty\n            return true;\n        }\n        if (node.isText) {\n            return /^\\s*$/m.test((_a = node.text) !== null && _a !== void 0 ? _a : '');\n        }\n    }\n    if (node.isText) {\n        return !node.text;\n    }\n    if (node.isAtom || node.isLeaf) {\n        return false;\n    }\n    if (node.content.childCount === 0) {\n        return true;\n    }\n    if (checkChildren) {\n        let isContentEmpty = true;\n        node.content.forEach(childNode => {\n            if (isContentEmpty === false) {\n                // Exit early for perf\n                return;\n            }\n            if (!isNodeEmpty(childNode, { ignoreWhitespace, checkChildren })) {\n                isContentEmpty = false;\n            }\n        });\n        return isContentEmpty;\n    }\n    return false;\n}\n\nfunction isNodeSelection(value) {\n    return value instanceof NodeSelection;\n}\n\nfunction posToDOMRect(view, from, to) {\n    const minPos = 0;\n    const maxPos = view.state.doc.content.size;\n    const resolvedFrom = minMax(from, minPos, maxPos);\n    const resolvedEnd = minMax(to, minPos, maxPos);\n    const start = view.coordsAtPos(resolvedFrom);\n    const end = view.coordsAtPos(resolvedEnd, -1);\n    const top = Math.min(start.top, end.top);\n    const bottom = Math.max(start.bottom, end.bottom);\n    const left = Math.min(start.left, end.left);\n    const right = Math.max(start.right, end.right);\n    const width = right - left;\n    const height = bottom - top;\n    const x = left;\n    const y = top;\n    const data = {\n        top,\n        bottom,\n        left,\n        right,\n        width,\n        height,\n        x,\n        y,\n    };\n    return {\n        ...data,\n        toJSON: () => data,\n    };\n}\n\n/**\n * The actual implementation of the rewriteUnknownContent function\n */\nfunction rewriteUnknownContentInner({ json, validMarks, validNodes, options, rewrittenContent = [], }) {\n    if (json.marks && Array.isArray(json.marks)) {\n        json.marks = json.marks.filter(mark => {\n            const name = typeof mark === 'string' ? mark : mark.type;\n            if (validMarks.has(name)) {\n                return true;\n            }\n            rewrittenContent.push({\n                original: JSON.parse(JSON.stringify(mark)),\n                unsupported: name,\n            });\n            // Just ignore any unknown marks\n            return false;\n        });\n    }\n    if (json.content && Array.isArray(json.content)) {\n        json.content = json.content\n            .map(value => rewriteUnknownContentInner({\n            json: value,\n            validMarks,\n            validNodes,\n            options,\n            rewrittenContent,\n        }).json)\n            .filter(a => a !== null && a !== undefined);\n    }\n    if (json.type && !validNodes.has(json.type)) {\n        rewrittenContent.push({\n            original: JSON.parse(JSON.stringify(json)),\n            unsupported: json.type,\n        });\n        if (json.content && Array.isArray(json.content) && ((options === null || options === void 0 ? void 0 : options.fallbackToParagraph) !== false)) {\n            // Just treat it like a paragraph and hope for the best\n            json.type = 'paragraph';\n            return {\n                json,\n                rewrittenContent,\n            };\n        }\n        // or just omit it entirely\n        return {\n            json: null,\n            rewrittenContent,\n        };\n    }\n    return { json, rewrittenContent };\n}\n/**\n * Rewrite unknown nodes and marks within JSON content\n * Allowing for user within the editor\n */\nfunction rewriteUnknownContent(\n/**\n * The JSON content to clean of unknown nodes and marks\n */\njson, \n/**\n * The schema to use for validation\n */\nschema, \n/**\n * Options for the cleaning process\n */\noptions) {\n    return rewriteUnknownContentInner({\n        json,\n        validNodes: new Set(Object.keys(schema.nodes)),\n        validMarks: new Set(Object.keys(schema.marks)),\n        options,\n    });\n}\n\nfunction canSetMark(state, tr, newMarkType) {\n    var _a;\n    const { selection } = tr;\n    let cursor = null;\n    if (isTextSelection(selection)) {\n        cursor = selection.$cursor;\n    }\n    if (cursor) {\n        const currentMarks = (_a = state.storedMarks) !== null && _a !== void 0 ? _a : cursor.marks();\n        // There can be no current marks that exclude the new mark\n        return (!!newMarkType.isInSet(currentMarks)\n            || !currentMarks.some(mark => mark.type.excludes(newMarkType)));\n    }\n    const { ranges } = selection;\n    return ranges.some(({ $from, $to }) => {\n        let someNodeSupportsMark = $from.depth === 0\n            ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\n            : false;\n        state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\n            // If we already found a mark that we can enable, return false to bypass the remaining search\n            if (someNodeSupportsMark) {\n                return false;\n            }\n            if (node.isInline) {\n                const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType);\n                const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\n                    || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType));\n                someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType;\n            }\n            return !someNodeSupportsMark;\n        });\n        return someNodeSupportsMark;\n    });\n}\nconst setMark = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    const { selection } = tr;\n    const { empty, ranges } = selection;\n    const type = getMarkType(typeOrName, state.schema);\n    if (dispatch) {\n        if (empty) {\n            const oldAttributes = getMarkAttributes(state, type);\n            tr.addStoredMark(type.create({\n                ...oldAttributes,\n                ...attributes,\n            }));\n        }\n        else {\n            ranges.forEach(range => {\n                const from = range.$from.pos;\n                const to = range.$to.pos;\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    const trimmedFrom = Math.max(pos, from);\n                    const trimmedTo = Math.min(pos + node.nodeSize, to);\n                    const someHasMark = node.marks.find(mark => mark.type === type);\n                    // if there is already a mark of this type\n                    // we know that we have to merge its attributes\n                    // otherwise we add a fresh new mark\n                    if (someHasMark) {\n                        node.marks.forEach(mark => {\n                            if (type === mark.type) {\n                                tr.addMark(trimmedFrom, trimmedTo, type.create({\n                                    ...mark.attrs,\n                                    ...attributes,\n                                }));\n                            }\n                        });\n                    }\n                    else {\n                        tr.addMark(trimmedFrom, trimmedTo, type.create(attributes));\n                    }\n                });\n            });\n        }\n    }\n    return canSetMark(state, tr, type);\n};\n\nconst setMeta = (key, value) => ({ tr }) => {\n    tr.setMeta(key, value);\n    return true;\n};\n\nconst setNode = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    let attributesToCopy;\n    if (state.selection.$anchor.sameParent(state.selection.$head)) {\n        // only copy attributes if the selection is pointing to a node of the same type\n        attributesToCopy = state.selection.$anchor.parent.attrs;\n    }\n    // TODO: use a fallback like insertContent?\n    if (!type.isTextblock) {\n        console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.');\n        return false;\n    }\n    return (chain()\n        // try to convert node to default node if needed\n        .command(({ commands }) => {\n        const canSetBlock = setBlockType(type, { ...attributesToCopy, ...attributes })(state);\n        if (canSetBlock) {\n            return true;\n        }\n        return commands.clearNodes();\n    })\n        .command(({ state: updatedState }) => {\n        return setBlockType(type, { ...attributesToCopy, ...attributes })(updatedState, dispatch);\n    })\n        .run());\n};\n\nconst setNodeSelection = position => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const { doc } = tr;\n        const from = minMax(position, 0, doc.content.size);\n        const selection = NodeSelection.create(doc, from);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst setTextSelection = position => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const { doc } = tr;\n        const { from, to } = typeof position === 'number' ? { from: position, to: position } : position;\n        const minPos = TextSelection.atStart(doc).from;\n        const maxPos = TextSelection.atEnd(doc).to;\n        const resolvedFrom = minMax(from, minPos, maxPos);\n        const resolvedEnd = minMax(to, minPos, maxPos);\n        const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst sinkListItem = typeOrName => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return sinkListItem$1(type)(state, dispatch);\n};\n\nfunction ensureMarks(state, splittableMarks) {\n    const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n    if (marks) {\n        const filteredMarks = marks.filter(mark => splittableMarks === null || splittableMarks === void 0 ? void 0 : splittableMarks.includes(mark.type.name));\n        state.tr.ensureMarks(filteredMarks);\n    }\n}\nconst splitBlock = ({ keepMarks = true } = {}) => ({ tr, state, dispatch, editor, }) => {\n    const { selection, doc } = tr;\n    const { $from, $to } = selection;\n    const extensionAttributes = editor.extensionManager.attributes;\n    const newAttributes = getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs);\n    if (selection instanceof NodeSelection && selection.node.isBlock) {\n        if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\n            return false;\n        }\n        if (dispatch) {\n            if (keepMarks) {\n                ensureMarks(state, editor.extensionManager.splittableMarks);\n            }\n            tr.split($from.pos).scrollIntoView();\n        }\n        return true;\n    }\n    if (!$from.parent.isBlock) {\n        return false;\n    }\n    const atEnd = $to.parentOffset === $to.parent.content.size;\n    const deflt = $from.depth === 0\n        ? undefined\n        : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n    let types = atEnd && deflt\n        ? [\n            {\n                type: deflt,\n                attrs: newAttributes,\n            },\n        ]\n        : undefined;\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n    if (!types\n        && !can\n        && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n        can = true;\n        types = deflt\n            ? [\n                {\n                    type: deflt,\n                    attrs: newAttributes,\n                },\n            ]\n            : undefined;\n    }\n    if (dispatch) {\n        if (can) {\n            if (selection instanceof TextSelection) {\n                tr.deleteSelection();\n            }\n            tr.split(tr.mapping.map($from.pos), 1, types);\n            if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\n                const first = tr.mapping.map($from.before());\n                const $first = tr.doc.resolve(first);\n                if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\n                    tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n        }\n        if (keepMarks) {\n            ensureMarks(state, editor.extensionManager.splittableMarks);\n        }\n        tr.scrollIntoView();\n    }\n    return can;\n};\n\nconst splitListItem = (typeOrName, overrideAttrs = {}) => ({ tr, state, dispatch, editor, }) => {\n    var _a;\n    const type = getNodeType(typeOrName, state.schema);\n    const { $from, $to } = state.selection;\n    // @ts-ignore\n    // eslint-disable-next-line\n    const node = state.selection.node;\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n        return false;\n    }\n    const grandParent = $from.node(-1);\n    if (grandParent.type !== type) {\n        return false;\n    }\n    const extensionAttributes = editor.extensionManager.attributes;\n    if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n        // In an empty block. If this is a nested list, the wrapping\n        // list item should be split. Otherwise, bail out and let next\n        // command handle lifting.\n        if ($from.depth === 2\n            || $from.node(-3).type !== type\n            || $from.index(-2) !== $from.node(-2).childCount - 1) {\n            return false;\n        }\n        if (dispatch) {\n            let wrap = Fragment.empty;\n            // eslint-disable-next-line\n            const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n            // Build a fragment containing empty versions of the structure\n            // from the outer list item to the parent node of the cursor\n            for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\n                wrap = Fragment.from($from.node(d).copy(wrap));\n            }\n            // eslint-disable-next-line\n            const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n            // Add a second list item with an empty default start node\n            const newNextTypeAttributes = {\n                ...getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs),\n                ...overrideAttrs,\n            };\n            const nextType = ((_a = type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.createAndFill(newNextTypeAttributes)) || undefined;\n            wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined));\n            const start = $from.before($from.depth - (depthBefore - 1));\n            tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n            let sel = -1;\n            tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\n                if (sel > -1) {\n                    return false;\n                }\n                if (n.isTextblock && n.content.size === 0) {\n                    sel = pos + 1;\n                }\n            });\n            if (sel > -1) {\n                tr.setSelection(TextSelection.near(tr.doc.resolve(sel)));\n            }\n            tr.scrollIntoView();\n        }\n        return true;\n    }\n    const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n    const newTypeAttributes = {\n        ...getSplittedAttributes(extensionAttributes, grandParent.type.name, grandParent.attrs),\n        ...overrideAttrs,\n    };\n    const newNextTypeAttributes = {\n        ...getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs),\n        ...overrideAttrs,\n    };\n    tr.delete($from.pos, $to.pos);\n    const types = nextType\n        ? [\n            { type, attrs: newTypeAttributes },\n            { type: nextType, attrs: newNextTypeAttributes },\n        ]\n        : [{ type, attrs: newTypeAttributes }];\n    if (!canSplit(tr.doc, $from.pos, 2)) {\n        return false;\n    }\n    if (dispatch) {\n        const { selection, storedMarks } = state;\n        const { splittableMarks } = editor.extensionManager;\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n        tr.split($from.pos, 2, types).scrollIntoView();\n        if (!marks || !dispatch) {\n            return true;\n        }\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n        tr.ensureMarks(filteredMarks);\n    }\n    return true;\n};\n\nconst joinListBackwards = (tr, listType) => {\n    const list = findParentNode(node => node.type === listType)(tr.selection);\n    if (!list) {\n        return true;\n    }\n    const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth);\n    if (before === undefined) {\n        return true;\n    }\n    const nodeBefore = tr.doc.nodeAt(before);\n    const canJoinBackwards = list.node.type === (nodeBefore === null || nodeBefore === void 0 ? void 0 : nodeBefore.type) && canJoin(tr.doc, list.pos);\n    if (!canJoinBackwards) {\n        return true;\n    }\n    tr.join(list.pos);\n    return true;\n};\nconst joinListForwards = (tr, listType) => {\n    const list = findParentNode(node => node.type === listType)(tr.selection);\n    if (!list) {\n        return true;\n    }\n    const after = tr.doc.resolve(list.start).after(list.depth);\n    if (after === undefined) {\n        return true;\n    }\n    const nodeAfter = tr.doc.nodeAt(after);\n    const canJoinForwards = list.node.type === (nodeAfter === null || nodeAfter === void 0 ? void 0 : nodeAfter.type) && canJoin(tr.doc, after);\n    if (!canJoinForwards) {\n        return true;\n    }\n    tr.join(after);\n    return true;\n};\nconst toggleList = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({ editor, tr, state, dispatch, chain, commands, can, }) => {\n    const { extensions, splittableMarks } = editor.extensionManager;\n    const listType = getNodeType(listTypeOrName, state.schema);\n    const itemType = getNodeType(itemTypeOrName, state.schema);\n    const { selection, storedMarks } = state;\n    const { $from, $to } = selection;\n    const range = $from.blockRange($to);\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n    if (!range) {\n        return false;\n    }\n    const parentList = findParentNode(node => isList(node.type.name, extensions))(selection);\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n        // remove list\n        if (parentList.node.type === listType) {\n            return commands.liftListItem(itemType);\n        }\n        // change list type\n        if (isList(parentList.node.type.name, extensions)\n            && listType.validContent(parentList.node.content)\n            && dispatch) {\n            return chain()\n                .command(() => {\n                tr.setNodeMarkup(parentList.pos, listType);\n                return true;\n            })\n                .command(() => joinListBackwards(tr, listType))\n                .command(() => joinListForwards(tr, listType))\n                .run();\n        }\n    }\n    if (!keepMarks || !marks || !dispatch) {\n        return chain()\n            // try to convert node to default node if needed\n            .command(() => {\n            const canWrapInList = can().wrapInList(listType, attributes);\n            if (canWrapInList) {\n                return true;\n            }\n            return commands.clearNodes();\n        })\n            .wrapInList(listType, attributes)\n            .command(() => joinListBackwards(tr, listType))\n            .command(() => joinListForwards(tr, listType))\n            .run();\n    }\n    return (chain()\n        // try to convert node to default node if needed\n        .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes);\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n        tr.ensureMarks(filteredMarks);\n        if (canWrapInList) {\n            return true;\n        }\n        return commands.clearNodes();\n    })\n        .wrapInList(listType, attributes)\n        .command(() => joinListBackwards(tr, listType))\n        .command(() => joinListForwards(tr, listType))\n        .run());\n};\n\nconst toggleMark = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\n    const { extendEmptyMarkRange = false } = options;\n    const type = getMarkType(typeOrName, state.schema);\n    const isActive = isMarkActive(state, type, attributes);\n    if (isActive) {\n        return commands.unsetMark(type, { extendEmptyMarkRange });\n    }\n    return commands.setMark(type, attributes);\n};\n\nconst toggleNode = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const toggleType = getNodeType(toggleTypeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    let attributesToCopy;\n    if (state.selection.$anchor.sameParent(state.selection.$head)) {\n        // only copy attributes if the selection is pointing to a node of the same type\n        attributesToCopy = state.selection.$anchor.parent.attrs;\n    }\n    if (isActive) {\n        return commands.setNode(toggleType, attributesToCopy);\n    }\n    // If the node is not active, we want to set the new node type with the given attributes\n    // Copying over the attributes from the current node if the selection is pointing to a node of the same type\n    return commands.setNode(type, { ...attributesToCopy, ...attributes });\n};\n\nconst toggleWrap = (typeOrName, attributes = {}) => ({ state, commands }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    if (isActive) {\n        return commands.lift(type);\n    }\n    return commands.wrapIn(type, attributes);\n};\n\nconst undoInputRule = () => ({ state, dispatch }) => {\n    const plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i += 1) {\n        const plugin = plugins[i];\n        let undoable;\n        // @ts-ignore\n        // eslint-disable-next-line\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                const tr = state.tr;\n                const toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                }\n                if (undoable.text) {\n                    const marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst unsetAllMarks = () => ({ tr, dispatch }) => {\n    const { selection } = tr;\n    const { empty, ranges } = selection;\n    if (empty) {\n        return true;\n    }\n    if (dispatch) {\n        ranges.forEach(range => {\n            tr.removeMark(range.$from.pos, range.$to.pos);\n        });\n    }\n    return true;\n};\n\nconst unsetMark = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\n    var _a;\n    const { extendEmptyMarkRange = false } = options;\n    const { selection } = tr;\n    const type = getMarkType(typeOrName, state.schema);\n    const { $from, empty, ranges } = selection;\n    if (!dispatch) {\n        return true;\n    }\n    if (empty && extendEmptyMarkRange) {\n        let { from, to } = selection;\n        const attrs = (_a = $from.marks().find(mark => mark.type === type)) === null || _a === void 0 ? void 0 : _a.attrs;\n        const range = getMarkRange($from, type, attrs);\n        if (range) {\n            from = range.from;\n            to = range.to;\n        }\n        tr.removeMark(from, to, type);\n    }\n    else {\n        ranges.forEach(range => {\n            tr.removeMark(range.$from.pos, range.$to.pos, type);\n        });\n    }\n    tr.removeStoredMark(type);\n    return true;\n};\n\nconst updateAttributes = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    let nodeType = null;\n    let markType = null;\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (!schemaType) {\n        return false;\n    }\n    if (schemaType === 'node') {\n        nodeType = getNodeType(typeOrName, state.schema);\n    }\n    if (schemaType === 'mark') {\n        markType = getMarkType(typeOrName, state.schema);\n    }\n    if (dispatch) {\n        tr.selection.ranges.forEach((range) => {\n            const from = range.$from.pos;\n            const to = range.$to.pos;\n            let lastPos;\n            let lastNode;\n            let trimmedFrom;\n            let trimmedTo;\n            if (tr.selection.empty) {\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    if (nodeType && nodeType === node.type) {\n                        trimmedFrom = Math.max(pos, from);\n                        trimmedTo = Math.min(pos + node.nodeSize, to);\n                        lastPos = pos;\n                        lastNode = node;\n                    }\n                });\n            }\n            else {\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    if (pos < from && nodeType && nodeType === node.type) {\n                        trimmedFrom = Math.max(pos, from);\n                        trimmedTo = Math.min(pos + node.nodeSize, to);\n                        lastPos = pos;\n                        lastNode = node;\n                    }\n                    if (pos >= from && pos <= to) {\n                        if (nodeType && nodeType === node.type) {\n                            tr.setNodeMarkup(pos, undefined, {\n                                ...node.attrs,\n                                ...attributes,\n                            });\n                        }\n                        if (markType && node.marks.length) {\n                            node.marks.forEach((mark) => {\n                                if (markType === mark.type) {\n                                    const trimmedFrom2 = Math.max(pos, from);\n                                    const trimmedTo2 = Math.min(pos + node.nodeSize, to);\n                                    tr.addMark(trimmedFrom2, trimmedTo2, markType.create({\n                                        ...mark.attrs,\n                                        ...attributes,\n                                    }));\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n            if (lastNode) {\n                if (lastPos !== undefined) {\n                    tr.setNodeMarkup(lastPos, undefined, {\n                        ...lastNode.attrs,\n                        ...attributes,\n                    });\n                }\n                if (markType && lastNode.marks.length) {\n                    lastNode.marks.forEach((mark) => {\n                        if (markType === mark.type) {\n                            tr.addMark(trimmedFrom, trimmedTo, markType.create({\n                                ...mark.attrs,\n                                ...attributes,\n                            }));\n                        }\n                    });\n                }\n            }\n        });\n    }\n    return true;\n};\n\nconst wrapIn = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return wrapIn$1(type, attributes)(state, dispatch);\n};\n\nconst wrapInList = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return wrapInList$1(type, attributes)(state, dispatch);\n};\n\nvar commands = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  blur: blur,\n  clearContent: clearContent,\n  clearNodes: clearNodes,\n  command: command,\n  createParagraphNear: createParagraphNear,\n  cut: cut,\n  deleteCurrentNode: deleteCurrentNode,\n  deleteNode: deleteNode,\n  deleteRange: deleteRange,\n  deleteSelection: deleteSelection,\n  enter: enter,\n  exitCode: exitCode,\n  extendMarkRange: extendMarkRange,\n  first: first,\n  focus: focus,\n  forEach: forEach,\n  insertContent: insertContent,\n  insertContentAt: insertContentAt,\n  joinBackward: joinBackward,\n  joinDown: joinDown,\n  joinForward: joinForward,\n  joinItemBackward: joinItemBackward,\n  joinItemForward: joinItemForward,\n  joinTextblockBackward: joinTextblockBackward,\n  joinTextblockForward: joinTextblockForward,\n  joinUp: joinUp,\n  keyboardShortcut: keyboardShortcut,\n  lift: lift,\n  liftEmptyBlock: liftEmptyBlock,\n  liftListItem: liftListItem,\n  newlineInCode: newlineInCode,\n  resetAttributes: resetAttributes,\n  scrollIntoView: scrollIntoView,\n  selectAll: selectAll,\n  selectNodeBackward: selectNodeBackward,\n  selectNodeForward: selectNodeForward,\n  selectParentNode: selectParentNode,\n  selectTextblockEnd: selectTextblockEnd,\n  selectTextblockStart: selectTextblockStart,\n  setContent: setContent,\n  setMark: setMark,\n  setMeta: setMeta,\n  setNode: setNode,\n  setNodeSelection: setNodeSelection,\n  setTextSelection: setTextSelection,\n  sinkListItem: sinkListItem,\n  splitBlock: splitBlock,\n  splitListItem: splitListItem,\n  toggleList: toggleList,\n  toggleMark: toggleMark,\n  toggleNode: toggleNode,\n  toggleWrap: toggleWrap,\n  undoInputRule: undoInputRule,\n  unsetAllMarks: unsetAllMarks,\n  unsetMark: unsetMark,\n  updateAttributes: updateAttributes,\n  wrapIn: wrapIn,\n  wrapInList: wrapInList\n});\n\nconst Commands = Extension.create({\n    name: 'commands',\n    addCommands() {\n        return {\n            ...commands,\n        };\n    },\n});\n\nconst Drop = Extension.create({\n    name: 'drop',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tiptapDrop'),\n                props: {\n                    handleDrop: (_, e, slice, moved) => {\n                        this.editor.emit('drop', {\n                            editor: this.editor,\n                            event: e,\n                            slice,\n                            moved,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Editable = Extension.create({\n    name: 'editable',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('editable'),\n                props: {\n                    editable: () => this.editor.options.editable,\n                },\n            }),\n        ];\n    },\n});\n\nconst FocusEvents = Extension.create({\n    name: 'focusEvents',\n    addProseMirrorPlugins() {\n        const { editor } = this;\n        return [\n            new Plugin({\n                key: new PluginKey('focusEvents'),\n                props: {\n                    handleDOMEvents: {\n                        focus: (view, event) => {\n                            editor.isFocused = true;\n                            const transaction = editor.state.tr\n                                .setMeta('focus', { event })\n                                .setMeta('addToHistory', false);\n                            view.dispatch(transaction);\n                            return false;\n                        },\n                        blur: (view, event) => {\n                            editor.isFocused = false;\n                            const transaction = editor.state.tr\n                                .setMeta('blur', { event })\n                                .setMeta('addToHistory', false);\n                            view.dispatch(transaction);\n                            return false;\n                        },\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Keymap = Extension.create({\n    name: 'keymap',\n    addKeyboardShortcuts() {\n        const handleBackspace = () => this.editor.commands.first(({ commands }) => [\n            () => commands.undoInputRule(),\n            // maybe convert first text block node to default node\n            () => commands.command(({ tr }) => {\n                const { selection, doc } = tr;\n                const { empty, $anchor } = selection;\n                const { pos, parent } = $anchor;\n                const $parentPos = $anchor.parent.isTextblock && pos > 0 ? tr.doc.resolve(pos - 1) : $anchor;\n                const parentIsIsolating = $parentPos.parent.type.spec.isolating;\n                const parentPos = $anchor.pos - $anchor.parentOffset;\n                const isAtStart = (parentIsIsolating && $parentPos.parent.childCount === 1)\n                    ? parentPos === $anchor.pos\n                    : Selection.atStart(doc).from === pos;\n                if (!empty\n                    || !parent.type.isTextblock\n                    || parent.textContent.length\n                    || !isAtStart\n                    || (isAtStart && $anchor.parent.type.name === 'paragraph') // prevent clearNodes when no nodes to clear, otherwise history stack is appended\n                ) {\n                    return false;\n                }\n                return commands.clearNodes();\n            }),\n            () => commands.deleteSelection(),\n            () => commands.joinBackward(),\n            () => commands.selectNodeBackward(),\n        ]);\n        const handleDelete = () => this.editor.commands.first(({ commands }) => [\n            () => commands.deleteSelection(),\n            () => commands.deleteCurrentNode(),\n            () => commands.joinForward(),\n            () => commands.selectNodeForward(),\n        ]);\n        const handleEnter = () => this.editor.commands.first(({ commands }) => [\n            () => commands.newlineInCode(),\n            () => commands.createParagraphNear(),\n            () => commands.liftEmptyBlock(),\n            () => commands.splitBlock(),\n        ]);\n        const baseKeymap = {\n            Enter: handleEnter,\n            'Mod-Enter': () => this.editor.commands.exitCode(),\n            Backspace: handleBackspace,\n            'Mod-Backspace': handleBackspace,\n            'Shift-Backspace': handleBackspace,\n            Delete: handleDelete,\n            'Mod-Delete': handleDelete,\n            'Mod-a': () => this.editor.commands.selectAll(),\n        };\n        const pcKeymap = {\n            ...baseKeymap,\n        };\n        const macKeymap = {\n            ...baseKeymap,\n            'Ctrl-h': handleBackspace,\n            'Alt-Backspace': handleBackspace,\n            'Ctrl-d': handleDelete,\n            'Ctrl-Alt-Backspace': handleDelete,\n            'Alt-Delete': handleDelete,\n            'Alt-d': handleDelete,\n            'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\n            'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\n        };\n        if (isiOS() || isMacOS()) {\n            return macKeymap;\n        }\n        return pcKeymap;\n    },\n    addProseMirrorPlugins() {\n        return [\n            // With this plugin we check if the whole document was selected and deleted.\n            // In this case we will additionally call `clearNodes()` to convert e.g. a heading\n            // to a paragraph if necessary.\n            // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well\n            // with many other commands.\n            new Plugin({\n                key: new PluginKey('clearDocument'),\n                appendTransaction: (transactions, oldState, newState) => {\n                    if (transactions.some(tr => tr.getMeta('composition'))) {\n                        return;\n                    }\n                    const docChanges = transactions.some(transaction => transaction.docChanged)\n                        && !oldState.doc.eq(newState.doc);\n                    const ignoreTr = transactions.some(transaction => transaction.getMeta('preventClearDocument'));\n                    if (!docChanges || ignoreTr) {\n                        return;\n                    }\n                    const { empty, from, to } = oldState.selection;\n                    const allFrom = Selection.atStart(oldState.doc).from;\n                    const allEnd = Selection.atEnd(oldState.doc).to;\n                    const allWasSelected = from === allFrom && to === allEnd;\n                    if (empty || !allWasSelected) {\n                        return;\n                    }\n                    const isEmpty = isNodeEmpty(newState.doc);\n                    if (!isEmpty) {\n                        return;\n                    }\n                    const tr = newState.tr;\n                    const state = createChainableState({\n                        state: newState,\n                        transaction: tr,\n                    });\n                    const { commands } = new CommandManager({\n                        editor: this.editor,\n                        state,\n                    });\n                    commands.clearNodes();\n                    if (!tr.steps.length) {\n                        return;\n                    }\n                    return tr;\n                },\n            }),\n        ];\n    },\n});\n\nconst Paste = Extension.create({\n    name: 'paste',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tiptapPaste'),\n                props: {\n                    handlePaste: (_view, e, slice) => {\n                        this.editor.emit('paste', {\n                            editor: this.editor,\n                            event: e,\n                            slice,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Tabindex = Extension.create({\n    name: 'tabindex',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tabindex'),\n                props: {\n                    attributes: () => (this.editor.isEditable ? { tabindex: '0' } : {}),\n                },\n            }),\n        ];\n    },\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ClipboardTextSerializer: ClipboardTextSerializer,\n  Commands: Commands,\n  Drop: Drop,\n  Editable: Editable,\n  FocusEvents: FocusEvents,\n  Keymap: Keymap,\n  Paste: Paste,\n  Tabindex: Tabindex\n});\n\nclass NodePos {\n    get name() {\n        return this.node.type.name;\n    }\n    constructor(pos, editor, isBlock = false, node = null) {\n        this.currentNode = null;\n        this.actualDepth = null;\n        this.isBlock = isBlock;\n        this.resolvedPos = pos;\n        this.editor = editor;\n        this.currentNode = node;\n    }\n    get node() {\n        return this.currentNode || this.resolvedPos.node();\n    }\n    get element() {\n        return this.editor.view.domAtPos(this.pos).node;\n    }\n    get depth() {\n        var _a;\n        return (_a = this.actualDepth) !== null && _a !== void 0 ? _a : this.resolvedPos.depth;\n    }\n    get pos() {\n        return this.resolvedPos.pos;\n    }\n    get content() {\n        return this.node.content;\n    }\n    set content(content) {\n        let from = this.from;\n        let to = this.to;\n        if (this.isBlock) {\n            if (this.content.size === 0) {\n                console.error(`You can’t set content on a block node. Tried to set content on ${this.name} at ${this.pos}`);\n                return;\n            }\n            from = this.from + 1;\n            to = this.to - 1;\n        }\n        this.editor.commands.insertContentAt({ from, to }, content);\n    }\n    get attributes() {\n        return this.node.attrs;\n    }\n    get textContent() {\n        return this.node.textContent;\n    }\n    get size() {\n        return this.node.nodeSize;\n    }\n    get from() {\n        if (this.isBlock) {\n            return this.pos;\n        }\n        return this.resolvedPos.start(this.resolvedPos.depth);\n    }\n    get range() {\n        return {\n            from: this.from,\n            to: this.to,\n        };\n    }\n    get to() {\n        if (this.isBlock) {\n            return this.pos + this.size;\n        }\n        return this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1);\n    }\n    get parent() {\n        if (this.depth === 0) {\n            return null;\n        }\n        const parentPos = this.resolvedPos.start(this.resolvedPos.depth - 1);\n        const $pos = this.resolvedPos.doc.resolve(parentPos);\n        return new NodePos($pos, this.editor);\n    }\n    get before() {\n        let $pos = this.resolvedPos.doc.resolve(this.from - (this.isBlock ? 1 : 2));\n        if ($pos.depth !== this.depth) {\n            $pos = this.resolvedPos.doc.resolve(this.from - 3);\n        }\n        return new NodePos($pos, this.editor);\n    }\n    get after() {\n        let $pos = this.resolvedPos.doc.resolve(this.to + (this.isBlock ? 2 : 1));\n        if ($pos.depth !== this.depth) {\n            $pos = this.resolvedPos.doc.resolve(this.to + 3);\n        }\n        return new NodePos($pos, this.editor);\n    }\n    get children() {\n        const children = [];\n        this.node.content.forEach((node, offset) => {\n            const isBlock = node.isBlock && !node.isTextblock;\n            const isNonTextAtom = node.isAtom && !node.isText;\n            const targetPos = this.pos + offset + (isNonTextAtom ? 0 : 1);\n            const $pos = this.resolvedPos.doc.resolve(targetPos);\n            if (!isBlock && $pos.depth <= this.depth) {\n                return;\n            }\n            const childNodePos = new NodePos($pos, this.editor, isBlock, isBlock ? node : null);\n            if (isBlock) {\n                childNodePos.actualDepth = this.depth + 1;\n            }\n            children.push(new NodePos($pos, this.editor, isBlock, isBlock ? node : null));\n        });\n        return children;\n    }\n    get firstChild() {\n        return this.children[0] || null;\n    }\n    get lastChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    closest(selector, attributes = {}) {\n        let node = null;\n        let currentNode = this.parent;\n        while (currentNode && !node) {\n            if (currentNode.node.type.name === selector) {\n                if (Object.keys(attributes).length > 0) {\n                    const nodeAttributes = currentNode.node.attrs;\n                    const attrKeys = Object.keys(attributes);\n                    for (let index = 0; index < attrKeys.length; index += 1) {\n                        const key = attrKeys[index];\n                        if (nodeAttributes[key] !== attributes[key]) {\n                            break;\n                        }\n                    }\n                }\n                else {\n                    node = currentNode;\n                }\n            }\n            currentNode = currentNode.parent;\n        }\n        return node;\n    }\n    querySelector(selector, attributes = {}) {\n        return this.querySelectorAll(selector, attributes, true)[0] || null;\n    }\n    querySelectorAll(selector, attributes = {}, firstItemOnly = false) {\n        let nodes = [];\n        if (!this.children || this.children.length === 0) {\n            return nodes;\n        }\n        const attrKeys = Object.keys(attributes);\n        /**\n         * Finds all children recursively that match the selector and attributes\n         * If firstItemOnly is true, it will return the first item found\n         */\n        this.children.forEach(childPos => {\n            // If we already found a node and we only want the first item, we dont need to keep going\n            if (firstItemOnly && nodes.length > 0) {\n                return;\n            }\n            if (childPos.node.type.name === selector) {\n                const doesAllAttributesMatch = attrKeys.every(key => attributes[key] === childPos.node.attrs[key]);\n                if (doesAllAttributesMatch) {\n                    nodes.push(childPos);\n                }\n            }\n            // If we already found a node and we only want the first item, we can stop here and skip the recursion\n            if (firstItemOnly && nodes.length > 0) {\n                return;\n            }\n            nodes = nodes.concat(childPos.querySelectorAll(selector, attributes, firstItemOnly));\n        });\n        return nodes;\n    }\n    setAttribute(attributes) {\n        const { tr } = this.editor.state;\n        tr.setNodeMarkup(this.from, undefined, {\n            ...this.node.attrs,\n            ...attributes,\n        });\n        this.editor.view.dispatch(tr);\n    }\n}\n\nconst style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 0 !important;\n  height: 0 !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`;\n\nfunction createStyleTag(style, nonce, suffix) {\n    const tiptapStyleTag = document.querySelector(`style[data-tiptap-style${suffix ? `-${suffix}` : ''}]`);\n    if (tiptapStyleTag !== null) {\n        return tiptapStyleTag;\n    }\n    const styleNode = document.createElement('style');\n    if (nonce) {\n        styleNode.setAttribute('nonce', nonce);\n    }\n    styleNode.setAttribute(`data-tiptap-style${suffix ? `-${suffix}` : ''}`, '');\n    styleNode.innerHTML = style;\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\n    return styleNode;\n}\n\nclass Editor extends EventEmitter {\n    constructor(options = {}) {\n        super();\n        this.isFocused = false;\n        /**\n         * The editor is considered initialized after the `create` event has been emitted.\n         */\n        this.isInitialized = false;\n        this.extensionStorage = {};\n        this.options = {\n            element: document.createElement('div'),\n            content: '',\n            injectCSS: true,\n            injectNonce: undefined,\n            extensions: [],\n            autofocus: false,\n            editable: true,\n            editorProps: {},\n            parseOptions: {},\n            coreExtensionOptions: {},\n            enableInputRules: true,\n            enablePasteRules: true,\n            enableCoreExtensions: true,\n            enableContentCheck: false,\n            onBeforeCreate: () => null,\n            onCreate: () => null,\n            onUpdate: () => null,\n            onSelectionUpdate: () => null,\n            onTransaction: () => null,\n            onFocus: () => null,\n            onBlur: () => null,\n            onDestroy: () => null,\n            onContentError: ({ error }) => { throw error; },\n            onPaste: () => null,\n            onDrop: () => null,\n        };\n        this.isCapturingTransaction = false;\n        this.capturedTransaction = null;\n        this.setOptions(options);\n        this.createExtensionManager();\n        this.createCommandManager();\n        this.createSchema();\n        this.on('beforeCreate', this.options.onBeforeCreate);\n        this.emit('beforeCreate', { editor: this });\n        this.on('contentError', this.options.onContentError);\n        this.createView();\n        this.injectCSS();\n        this.on('create', this.options.onCreate);\n        this.on('update', this.options.onUpdate);\n        this.on('selectionUpdate', this.options.onSelectionUpdate);\n        this.on('transaction', this.options.onTransaction);\n        this.on('focus', this.options.onFocus);\n        this.on('blur', this.options.onBlur);\n        this.on('destroy', this.options.onDestroy);\n        this.on('drop', ({ event, slice, moved }) => this.options.onDrop(event, slice, moved));\n        this.on('paste', ({ event, slice }) => this.options.onPaste(event, slice));\n        window.setTimeout(() => {\n            if (this.isDestroyed) {\n                return;\n            }\n            this.commands.focus(this.options.autofocus);\n            this.emit('create', { editor: this });\n            this.isInitialized = true;\n        }, 0);\n    }\n    /**\n     * Returns the editor storage.\n     */\n    get storage() {\n        return this.extensionStorage;\n    }\n    /**\n     * An object of all registered commands.\n     */\n    get commands() {\n        return this.commandManager.commands;\n    }\n    /**\n     * Create a command chain to call multiple commands at once.\n     */\n    chain() {\n        return this.commandManager.chain();\n    }\n    /**\n     * Check if a command or a command chain can be executed. Without executing it.\n     */\n    can() {\n        return this.commandManager.can();\n    }\n    /**\n     * Inject CSS styles.\n     */\n    injectCSS() {\n        if (this.options.injectCSS && document) {\n            this.css = createStyleTag(style, this.options.injectNonce);\n        }\n    }\n    /**\n     * Update editor options.\n     *\n     * @param options A list of options\n     */\n    setOptions(options = {}) {\n        this.options = {\n            ...this.options,\n            ...options,\n        };\n        if (!this.view || !this.state || this.isDestroyed) {\n            return;\n        }\n        if (this.options.editorProps) {\n            this.view.setProps(this.options.editorProps);\n        }\n        this.view.updateState(this.state);\n    }\n    /**\n     * Update editable state of the editor.\n     */\n    setEditable(editable, emitUpdate = true) {\n        this.setOptions({ editable });\n        if (emitUpdate) {\n            this.emit('update', { editor: this, transaction: this.state.tr });\n        }\n    }\n    /**\n     * Returns whether the editor is editable.\n     */\n    get isEditable() {\n        // since plugins are applied after creating the view\n        // `editable` is always `true` for one tick.\n        // that’s why we also have to check for `options.editable`\n        return this.options.editable && this.view && this.view.editable;\n    }\n    /**\n     * Returns the editor state.\n     */\n    get state() {\n        return this.view.state;\n    }\n    /**\n     * Register a ProseMirror plugin.\n     *\n     * @param plugin A ProseMirror plugin\n     * @param handlePlugins Control how to merge the plugin into the existing plugins.\n     * @returns The new editor state\n     */\n    registerPlugin(plugin, handlePlugins) {\n        const plugins = isFunction(handlePlugins)\n            ? handlePlugins(plugin, [...this.state.plugins])\n            : [...this.state.plugins, plugin];\n        const state = this.state.reconfigure({ plugins });\n        this.view.updateState(state);\n        return state;\n    }\n    /**\n     * Unregister a ProseMirror plugin.\n     *\n     * @param nameOrPluginKeyToRemove The plugins name\n     * @returns The new editor state or undefined if the editor is destroyed\n     */\n    unregisterPlugin(nameOrPluginKeyToRemove) {\n        if (this.isDestroyed) {\n            return undefined;\n        }\n        const prevPlugins = this.state.plugins;\n        let plugins = prevPlugins;\n        [].concat(nameOrPluginKeyToRemove).forEach(nameOrPluginKey => {\n            // @ts-ignore\n            const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key;\n            // @ts-ignore\n            plugins = prevPlugins.filter(plugin => !plugin.key.startsWith(name));\n        });\n        if (prevPlugins.length === plugins.length) {\n            // No plugin was removed, so we don’t need to update the state\n            return undefined;\n        }\n        const state = this.state.reconfigure({\n            plugins,\n        });\n        this.view.updateState(state);\n        return state;\n    }\n    /**\n     * Creates an extension manager.\n     */\n    createExtensionManager() {\n        var _a, _b;\n        const coreExtensions = this.options.enableCoreExtensions ? [\n            Editable,\n            ClipboardTextSerializer.configure({\n                blockSeparator: (_b = (_a = this.options.coreExtensionOptions) === null || _a === void 0 ? void 0 : _a.clipboardTextSerializer) === null || _b === void 0 ? void 0 : _b.blockSeparator,\n            }),\n            Commands,\n            FocusEvents,\n            Keymap,\n            Tabindex,\n            Drop,\n            Paste,\n        ].filter(ext => {\n            if (typeof this.options.enableCoreExtensions === 'object') {\n                return this.options.enableCoreExtensions[ext.name] !== false;\n            }\n            return true;\n        }) : [];\n        const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\n            return ['extension', 'node', 'mark'].includes(extension === null || extension === void 0 ? void 0 : extension.type);\n        });\n        this.extensionManager = new ExtensionManager(allExtensions, this);\n    }\n    /**\n     * Creates an command manager.\n     */\n    createCommandManager() {\n        this.commandManager = new CommandManager({\n            editor: this,\n        });\n    }\n    /**\n     * Creates a ProseMirror schema.\n     */\n    createSchema() {\n        this.schema = this.extensionManager.schema;\n    }\n    /**\n     * Creates a ProseMirror view.\n     */\n    createView() {\n        var _a;\n        let doc;\n        try {\n            doc = createDocument(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: this.options.enableContentCheck });\n        }\n        catch (e) {\n            if (!(e instanceof Error) || !['[tiptap error]: Invalid JSON content', '[tiptap error]: Invalid HTML content'].includes(e.message)) {\n                // Not the content error we were expecting\n                throw e;\n            }\n            this.emit('contentError', {\n                editor: this,\n                error: e,\n                disableCollaboration: () => {\n                    if (this.storage.collaboration) {\n                        this.storage.collaboration.isDisabled = true;\n                    }\n                    // To avoid syncing back invalid content, reinitialize the extensions without the collaboration extension\n                    this.options.extensions = this.options.extensions.filter(extension => extension.name !== 'collaboration');\n                    // Restart the initialization process by recreating the extension manager with the new set of extensions\n                    this.createExtensionManager();\n                },\n            });\n            // Content is invalid, but attempt to create it anyway, stripping out the invalid parts\n            doc = createDocument(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: false });\n        }\n        const selection = resolveFocusPosition(doc, this.options.autofocus);\n        this.view = new EditorView(this.options.element, {\n            ...this.options.editorProps,\n            attributes: {\n                // add `role=\"textbox\"` to the editor element\n                role: 'textbox',\n                ...(_a = this.options.editorProps) === null || _a === void 0 ? void 0 : _a.attributes,\n            },\n            dispatchTransaction: this.dispatchTransaction.bind(this),\n            state: EditorState.create({\n                doc,\n                selection: selection || undefined,\n            }),\n        });\n        // `editor.view` is not yet available at this time.\n        // Therefore we will add all plugins and node views directly afterwards.\n        const newState = this.state.reconfigure({\n            plugins: this.extensionManager.plugins,\n        });\n        this.view.updateState(newState);\n        this.createNodeViews();\n        this.prependClass();\n        // Let’s store the editor instance in the DOM element.\n        // So we’ll have access to it for tests.\n        // @ts-ignore\n        const dom = this.view.dom;\n        dom.editor = this;\n    }\n    /**\n     * Creates all node views.\n     */\n    createNodeViews() {\n        if (this.view.isDestroyed) {\n            return;\n        }\n        this.view.setProps({\n            nodeViews: this.extensionManager.nodeViews,\n        });\n    }\n    /**\n     * Prepend class name to element.\n     */\n    prependClass() {\n        this.view.dom.className = `tiptap ${this.view.dom.className}`;\n    }\n    captureTransaction(fn) {\n        this.isCapturingTransaction = true;\n        fn();\n        this.isCapturingTransaction = false;\n        const tr = this.capturedTransaction;\n        this.capturedTransaction = null;\n        return tr;\n    }\n    /**\n     * The callback over which to send transactions (state updates) produced by the view.\n     *\n     * @param transaction An editor state transaction\n     */\n    dispatchTransaction(transaction) {\n        // if the editor / the view of the editor was destroyed\n        // the transaction should not be dispatched as there is no view anymore.\n        if (this.view.isDestroyed) {\n            return;\n        }\n        if (this.isCapturingTransaction) {\n            if (!this.capturedTransaction) {\n                this.capturedTransaction = transaction;\n                return;\n            }\n            transaction.steps.forEach(step => { var _a; return (_a = this.capturedTransaction) === null || _a === void 0 ? void 0 : _a.step(step); });\n            return;\n        }\n        const state = this.state.apply(transaction);\n        const selectionHasChanged = !this.state.selection.eq(state.selection);\n        this.emit('beforeTransaction', {\n            editor: this,\n            transaction,\n            nextState: state,\n        });\n        this.view.updateState(state);\n        this.emit('transaction', {\n            editor: this,\n            transaction,\n        });\n        if (selectionHasChanged) {\n            this.emit('selectionUpdate', {\n                editor: this,\n                transaction,\n            });\n        }\n        const focus = transaction.getMeta('focus');\n        const blur = transaction.getMeta('blur');\n        if (focus) {\n            this.emit('focus', {\n                editor: this,\n                event: focus.event,\n                transaction,\n            });\n        }\n        if (blur) {\n            this.emit('blur', {\n                editor: this,\n                event: blur.event,\n                transaction,\n            });\n        }\n        if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n            return;\n        }\n        this.emit('update', {\n            editor: this,\n            transaction,\n        });\n    }\n    /**\n     * Get attributes of the currently selected node or mark.\n     */\n    getAttributes(nameOrType) {\n        return getAttributes(this.state, nameOrType);\n    }\n    isActive(nameOrAttributes, attributesOrUndefined) {\n        const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null;\n        const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes;\n        return isActive(this.state, name, attributes);\n    }\n    /**\n     * Get the document as JSON.\n     */\n    getJSON() {\n        return this.state.doc.toJSON();\n    }\n    /**\n     * Get the document as HTML.\n     */\n    getHTML() {\n        return getHTMLFromFragment(this.state.doc.content, this.schema);\n    }\n    /**\n     * Get the document as text.\n     */\n    getText(options) {\n        const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n        return getText(this.state.doc, {\n            blockSeparator,\n            textSerializers: {\n                ...getTextSerializersFromSchema(this.schema),\n                ...textSerializers,\n            },\n        });\n    }\n    /**\n     * Check if there is no content.\n     */\n    get isEmpty() {\n        return isNodeEmpty(this.state.doc);\n    }\n    /**\n     * Get the number of characters for the current document.\n     *\n     * @deprecated\n     */\n    getCharacterCount() {\n        console.warn('[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.');\n        return this.state.doc.content.size - 2;\n    }\n    /**\n     * Destroy the editor.\n     */\n    destroy() {\n        this.emit('destroy');\n        if (this.view) {\n            // Cleanup our reference to prevent circular references which caused memory leaks\n            // @ts-ignore\n            const dom = this.view.dom;\n            if (dom && dom.editor) {\n                delete dom.editor;\n            }\n            this.view.destroy();\n        }\n        this.removeAllListeners();\n    }\n    /**\n     * Check if the editor is already destroyed.\n     */\n    get isDestroyed() {\n        var _a;\n        // @ts-ignore\n        return !((_a = this.view) === null || _a === void 0 ? void 0 : _a.docView);\n    }\n    $node(selector, attributes) {\n        var _a;\n        return ((_a = this.$doc) === null || _a === void 0 ? void 0 : _a.querySelector(selector, attributes)) || null;\n    }\n    $nodes(selector, attributes) {\n        var _a;\n        return ((_a = this.$doc) === null || _a === void 0 ? void 0 : _a.querySelectorAll(selector, attributes)) || null;\n    }\n    $pos(pos) {\n        const $pos = this.state.doc.resolve(pos);\n        return new NodePos($pos, this);\n    }\n    get $doc() {\n        return this.$pos(0);\n    }\n}\n\n/**\n * Build an input rule that adds a mark when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction markInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const { tr } = state;\n            const captureGroup = match[match.length - 1];\n            const fullMatch = match[0];\n            if (captureGroup) {\n                const startSpaces = fullMatch.search(/\\S/);\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\n                const textEnd = textStart + captureGroup.length;\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n                    .filter(item => {\n                    // @ts-ignore\n                    const excluded = item.mark.type.excluded;\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\n                })\n                    .filter(item => item.to > textStart);\n                if (excludedMarks.length) {\n                    return null;\n                }\n                if (textEnd < range.to) {\n                    tr.delete(textEnd, range.to);\n                }\n                if (textStart > range.from) {\n                    tr.delete(range.from + startSpaces, textStart);\n                }\n                const markEnd = range.from + startSpaces + captureGroup.length;\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\n                tr.removeStoredMark(config.type);\n            }\n        },\n    });\n}\n\n/**\n * Build an input rule that adds a node when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction nodeInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            const { tr } = state;\n            const start = range.from;\n            let end = range.to;\n            const newNode = config.type.create(attributes);\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                let matchStart = start + offset;\n                if (matchStart > end) {\n                    matchStart = end;\n                }\n                else {\n                    end = matchStart + match[1].length;\n                }\n                // insert last typed character\n                const lastChar = match[0][match[0].length - 1];\n                tr.insertText(lastChar, start + match[0].length - 1);\n                // insert node from input rule\n                tr.replaceWith(matchStart, end, newNode);\n            }\n            else if (match[0]) {\n                const insertionStart = config.type.isInline ? start : start - 1;\n                tr.insert(insertionStart, config.type.create(attributes)).delete(tr.mapping.map(start), tr.mapping.map(end));\n            }\n            tr.scrollIntoView();\n        },\n    });\n}\n\n/**\n * Build an input rule that changes the type of a textblock when the\n * matched text is typed into it. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction textblockTypeInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const $start = state.doc.resolve(range.from);\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\n                return null;\n            }\n            state.tr\n                .delete(range.from, range.to)\n                .setBlockType(range.from, range.from, config.type, attributes);\n        },\n    });\n}\n\n/**\n * Build an input rule that replaces text when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction textInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            let insert = config.replace;\n            let start = range.from;\n            const end = range.to;\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                insert += match[0].slice(offset + match[1].length);\n                start += offset;\n                const cutOff = start - end;\n                if (cutOff > 0) {\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\n                    start = end;\n                }\n            }\n            state.tr.insertText(insert, start, end);\n        },\n    });\n}\n\n/**\n * Build an input rule for automatically wrapping a textblock when a\n * given string is typed. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n *\n * `type` is the type of node to wrap in.\n *\n * By default, if there’s a node with the same type above the newly\n * wrapped node, the rule will try to join those\n * two nodes. You can pass a join predicate, which takes a regular\n * expression match and the node before the wrapped node, and can\n * return a boolean to indicate whether a join should happen.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction wrappingInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match, chain, }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            const tr = state.tr.delete(range.from, range.to);\n            const $start = tr.doc.resolve(range.from);\n            const blockRange = $start.blockRange();\n            const wrapping = blockRange && findWrapping(blockRange, config.type, attributes);\n            if (!wrapping) {\n                return null;\n            }\n            tr.wrap(blockRange, wrapping);\n            if (config.keepMarks && config.editor) {\n                const { selection, storedMarks } = state;\n                const { splittableMarks } = config.editor.extensionManager;\n                const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n                if (marks) {\n                    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n                    tr.ensureMarks(filteredMarks);\n                }\n            }\n            if (config.keepAttributes) {\n                /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\n                const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList';\n                chain().updateAttributes(nodeType, attributes).run();\n            }\n            const before = tr.doc.resolve(range.from - 1).nodeBefore;\n            if (before\n                && before.type === config.type\n                && canJoin(tr.doc, range.from - 1)\n                && (!config.joinPredicate || config.joinPredicate(match, before))) {\n                tr.join(range.from - 1);\n            }\n        },\n    });\n}\n\n/**\n * The Node class is used to create custom node extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Node {\n    constructor(config = {}) {\n        this.type = 'node';\n        this.name = 'node';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Node(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Node(extendedConfig);\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n}\n\n/**\n * Node views are used to customize the rendered DOM structure of a node.\n * @see https://tiptap.dev/guide/node-views\n */\nclass NodeView {\n    constructor(component, props, options) {\n        this.isDragging = false;\n        this.component = component;\n        this.editor = props.editor;\n        this.options = {\n            stopEvent: null,\n            ignoreMutation: null,\n            ...options,\n        };\n        this.extension = props.extension;\n        this.node = props.node;\n        this.decorations = props.decorations;\n        this.innerDecorations = props.innerDecorations;\n        this.view = props.view;\n        this.HTMLAttributes = props.HTMLAttributes;\n        this.getPos = props.getPos;\n        this.mount();\n    }\n    mount() {\n        // eslint-disable-next-line\n        return;\n    }\n    get dom() {\n        return this.editor.view.dom;\n    }\n    get contentDOM() {\n        return null;\n    }\n    onDragStart(event) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const { view } = this.editor;\n        const target = event.target;\n        // get the drag handle element\n        // `closest` is not available for text nodes so we may have to use its parent\n        const dragHandle = target.nodeType === 3\n            ? (_a = target.parentElement) === null || _a === void 0 ? void 0 : _a.closest('[data-drag-handle]')\n            : target.closest('[data-drag-handle]');\n        if (!this.dom || ((_b = this.contentDOM) === null || _b === void 0 ? void 0 : _b.contains(target)) || !dragHandle) {\n            return;\n        }\n        let x = 0;\n        let y = 0;\n        // calculate offset for drag element if we use a different drag handle element\n        if (this.dom !== dragHandle) {\n            const domBox = this.dom.getBoundingClientRect();\n            const handleBox = dragHandle.getBoundingClientRect();\n            // In React, we have to go through nativeEvent to reach offsetX/offsetY.\n            const offsetX = (_c = event.offsetX) !== null && _c !== void 0 ? _c : (_d = event.nativeEvent) === null || _d === void 0 ? void 0 : _d.offsetX;\n            const offsetY = (_e = event.offsetY) !== null && _e !== void 0 ? _e : (_f = event.nativeEvent) === null || _f === void 0 ? void 0 : _f.offsetY;\n            x = handleBox.x - domBox.x + offsetX;\n            y = handleBox.y - domBox.y + offsetY;\n        }\n        (_g = event.dataTransfer) === null || _g === void 0 ? void 0 : _g.setDragImage(this.dom, x, y);\n        const pos = this.getPos();\n        if (typeof pos !== 'number') {\n            return;\n        }\n        // we need to tell ProseMirror that we want to move the whole node\n        // so we create a NodeSelection\n        const selection = NodeSelection.create(view.state.doc, pos);\n        const transaction = view.state.tr.setSelection(selection);\n        view.dispatch(transaction);\n    }\n    stopEvent(event) {\n        var _a;\n        if (!this.dom) {\n            return false;\n        }\n        if (typeof this.options.stopEvent === 'function') {\n            return this.options.stopEvent({ event });\n        }\n        const target = event.target;\n        const isInElement = this.dom.contains(target) && !((_a = this.contentDOM) === null || _a === void 0 ? void 0 : _a.contains(target));\n        // any event from child nodes should be handled by ProseMirror\n        if (!isInElement) {\n            return false;\n        }\n        const isDragEvent = event.type.startsWith('drag');\n        const isDropEvent = event.type === 'drop';\n        const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable;\n        // any input event within node views should be ignored by ProseMirror\n        if (isInput && !isDropEvent && !isDragEvent) {\n            return true;\n        }\n        const { isEditable } = this.editor;\n        const { isDragging } = this;\n        const isDraggable = !!this.node.type.spec.draggable;\n        const isSelectable = NodeSelection.isSelectable(this.node);\n        const isCopyEvent = event.type === 'copy';\n        const isPasteEvent = event.type === 'paste';\n        const isCutEvent = event.type === 'cut';\n        const isClickEvent = event.type === 'mousedown';\n        // ProseMirror tries to drag selectable nodes\n        // even if `draggable` is set to `false`\n        // this fix prevents that\n        if (!isDraggable && isSelectable && isDragEvent && event.target === this.dom) {\n            event.preventDefault();\n        }\n        if (isDraggable && isDragEvent && !isDragging && event.target === this.dom) {\n            event.preventDefault();\n            return false;\n        }\n        // we have to store that dragging started\n        if (isDraggable && isEditable && !isDragging && isClickEvent) {\n            const dragHandle = target.closest('[data-drag-handle]');\n            const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle));\n            if (isValidDragHandle) {\n                this.isDragging = true;\n                document.addEventListener('dragend', () => {\n                    this.isDragging = false;\n                }, { once: true });\n                document.addEventListener('drop', () => {\n                    this.isDragging = false;\n                }, { once: true });\n                document.addEventListener('mouseup', () => {\n                    this.isDragging = false;\n                }, { once: true });\n            }\n        }\n        // these events are handled by prosemirror\n        if (isDragging\n            || isDropEvent\n            || isCopyEvent\n            || isPasteEvent\n            || isCutEvent\n            || (isClickEvent && isSelectable)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Called when a DOM [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver) or a selection change happens within the view.\n     * @return `false` if the editor should re-read the selection or re-parse the range around the mutation\n     * @return `true` if it can safely be ignored.\n     */\n    ignoreMutation(mutation) {\n        if (!this.dom || !this.contentDOM) {\n            return true;\n        }\n        if (typeof this.options.ignoreMutation === 'function') {\n            return this.options.ignoreMutation({ mutation });\n        }\n        // a leaf/atom node is like a black box for ProseMirror\n        // and should be fully handled by the node view\n        if (this.node.isLeaf || this.node.isAtom) {\n            return true;\n        }\n        // ProseMirror should handle any selections\n        if (mutation.type === 'selection') {\n            return false;\n        }\n        // try to prevent a bug on iOS and Android that will break node views on enter\n        // this is because ProseMirror can’t preventDispatch on enter\n        // this will lead to a re-render of the node view on enter\n        // see: https://github.com/ueberdosis/tiptap/issues/1214\n        // see: https://github.com/ueberdosis/tiptap/issues/2534\n        if (this.dom.contains(mutation.target)\n            && mutation.type === 'childList'\n            && (isiOS() || isAndroid())\n            && this.editor.isFocused) {\n            const changedNodes = [\n                ...Array.from(mutation.addedNodes),\n                ...Array.from(mutation.removedNodes),\n            ];\n            // we’ll check if every changed node is contentEditable\n            // to make sure it’s probably mutated by ProseMirror\n            if (changedNodes.every(node => node.isContentEditable)) {\n                return false;\n            }\n        }\n        // we will allow mutation contentDOM with attributes\n        // so we can for example adding classes within our node view\n        if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\n            return true;\n        }\n        // ProseMirror should handle any changes within contentDOM\n        if (this.contentDOM.contains(mutation.target)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Update the attributes of the prosemirror node.\n     */\n    updateAttributes(attributes) {\n        this.editor.commands.command(({ tr }) => {\n            const pos = this.getPos();\n            if (typeof pos !== 'number') {\n                return false;\n            }\n            tr.setNodeMarkup(pos, undefined, {\n                ...this.node.attrs,\n                ...attributes,\n            });\n            return true;\n        });\n    }\n    /**\n     * Delete the node.\n     */\n    deleteNode() {\n        const from = this.getPos();\n        if (typeof from !== 'number') {\n            return;\n        }\n        const to = from + this.node.nodeSize;\n        this.editor.commands.deleteRange({ from, to });\n    }\n}\n\n/**\n * Build an paste rule that adds a mark when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction markPasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler: ({ state, range, match, pasteEvent, }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const { tr } = state;\n            const captureGroup = match[match.length - 1];\n            const fullMatch = match[0];\n            let markEnd = range.to;\n            if (captureGroup) {\n                const startSpaces = fullMatch.search(/\\S/);\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\n                const textEnd = textStart + captureGroup.length;\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n                    .filter(item => {\n                    // @ts-ignore\n                    const excluded = item.mark.type.excluded;\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\n                })\n                    .filter(item => item.to > textStart);\n                if (excludedMarks.length) {\n                    return null;\n                }\n                if (textEnd < range.to) {\n                    tr.delete(textEnd, range.to);\n                }\n                if (textStart > range.from) {\n                    tr.delete(range.from + startSpaces, textStart);\n                }\n                markEnd = range.from + startSpaces + captureGroup.length;\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\n                tr.removeStoredMark(config.type);\n            }\n        },\n    });\n}\n\n// source: https://stackoverflow.com/a/6969486\nfunction escapeForRegEx(string) {\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\n/**\n * Build an paste rule that adds a node when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction nodePasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler({ match, chain, range, pasteEvent, }) {\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\n            const content = callOrReturn(config.getContent, undefined, attributes);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const node = { type: config.type.name, attrs: attributes };\n            if (content) {\n                node.content = content;\n            }\n            if (match.input) {\n                chain().deleteRange(range).insertContentAt(range.from, node);\n            }\n        },\n    });\n}\n\n/**\n * Build an paste rule that replaces text when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction textPasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            let insert = config.replace;\n            let start = range.from;\n            const end = range.to;\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                insert += match[0].slice(offset + match[1].length);\n                start += offset;\n                const cutOff = start - end;\n                if (cutOff > 0) {\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\n                    start = end;\n                }\n            }\n            state.tr.insertText(insert, start, end);\n        },\n    });\n}\n\nclass Tracker {\n    constructor(transaction) {\n        this.transaction = transaction;\n        this.currentStep = this.transaction.steps.length;\n    }\n    map(position) {\n        let deleted = false;\n        const mappedPosition = this.transaction.steps\n            .slice(this.currentStep)\n            .reduce((newPosition, step) => {\n            const mapResult = step.getMap().mapResult(newPosition);\n            if (mapResult.deleted) {\n                deleted = true;\n            }\n            return mapResult.pos;\n        }, position);\n        return {\n            position: mappedPosition,\n            deleted,\n        };\n    }\n}\n\nexport { CommandManager, Editor, Extension, InputRule, Mark, Node, NodePos, NodeView, PasteRule, Tracker, callOrReturn, combineTransactionSteps, createChainableState, createDocument, createNodeFromContent, createStyleTag, defaultBlockAt, deleteProps, elementFromString, escapeForRegEx, index as extensions, findChildren, findChildrenInRange, findDuplicates, findParentNode, findParentNodeClosestToPos, fromString, generateHTML, generateJSON, generateText, getAttributes, getAttributesFromExtensions, getChangedRanges, getDebugJSON, getExtensionField, getHTMLFromFragment, getMarkAttributes, getMarkRange, getMarkType, getMarksBetween, getNodeAtPosition, getNodeAttributes, getNodeType, getRenderedAttributes, getSchema, getSchemaByResolvedExtensions, getSchemaTypeByName, getSchemaTypeNameByName, getSplittedAttributes, getText, getTextBetween, getTextContentFromNodes, getTextSerializersFromSchema, injectExtensionAttributesToParseRule, inputRulesPlugin, isActive, isAtEndOfNode, isAtStartOfNode, isEmptyObject, isExtensionRulesEnabled, isFunction, isList, isMacOS, isMarkActive, isNodeActive, isNodeEmpty, isNodeSelection, isNumber, isPlainObject, isRegExp, isString, isTextSelection, isiOS, markInputRule, markPasteRule, mergeAttributes, mergeDeep, minMax, nodeInputRule, nodePasteRule, objectIncludes, pasteRulesPlugin, posToDOMRect, removeDuplicates, resolveFocusPosition, rewriteUnknownContent, selectionToInsertionEnd, splitExtensions, textInputRule, textPasteRule, textblockTypeInputRule, wrappingInputRule };\n//# sourceMappingURL=index.js.map\n","import { Node } from '@tiptap/core';\n\n/**\n * The default document node which represents the top level node of the editor.\n * @see https://tiptap.dev/api/nodes/document\n */\nconst Document = Node.create({\n    name: 'doc',\n    topNode: true,\n    content: 'block+',\n});\n\nexport { Document, Document as default };\n//# sourceMappingURL=index.js.map\n","import { Node } from '@tiptap/core';\n\n/**\n * This extension allows you to create text nodes.\n * @see https://www.tiptap.dev/api/nodes/text\n */\nconst Text = Node.create({\n    name: 'text',\n    group: 'inline',\n});\n\nexport { Text, Text as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create subscript text.\n * @see https://www.tiptap.dev/api/marks/subscript\n */\nconst Subscript = Mark.create({\n    name: 'subscript',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'sub',\n            },\n            {\n                style: 'vertical-align',\n                getAttrs(value) {\n                    // Don’t match this rule if the vertical align isn’t sub.\n                    if (value !== 'sub') {\n                        return false;\n                    }\n                    // If it falls through we’ll match, and this mark will be applied.\n                    return null;\n                },\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['sub', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setSubscript: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleSubscript: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetSubscript: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-,': () => this.editor.commands.toggleSubscript(),\n        };\n    },\n});\n\nexport { Subscript, Subscript as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create superscript text.\n * @see https://www.tiptap.dev/api/marks/superscript\n */\nconst Superscript = Mark.create({\n    name: 'superscript',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'sup',\n            },\n            {\n                style: 'vertical-align',\n                getAttrs(value) {\n                    // Don’t match this rule if the vertical align isn’t super.\n                    if (value !== 'super') {\n                        return false;\n                    }\n                    // If it falls through we’ll match, and this mark will be applied.\n                    return null;\n                },\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['sup', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setSuperscript: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleSuperscript: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetSuperscript: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-.': () => this.editor.commands.toggleSuperscript(),\n        };\n    },\n});\n\nexport { Superscript, Superscript as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\n\n/**\n * Matches an image to a ![image](src \"title\") on input.\n */\nconst inputRegex = /(?:^|\\s)(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/;\n/**\n * This extension allows you to insert images.\n * @see https://www.tiptap.dev/api/nodes/image\n */\nconst Image = Node.create({\n    name: 'image',\n    addOptions() {\n        return {\n            inline: false,\n            allowBase64: false,\n            HTMLAttributes: {},\n        };\n    },\n    inline() {\n        return this.options.inline;\n    },\n    group() {\n        return this.options.inline ? 'inline' : 'block';\n    },\n    draggable: true,\n    addAttributes() {\n        return {\n            src: {\n                default: null,\n            },\n            alt: {\n                default: null,\n            },\n            title: {\n                default: null,\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: this.options.allowBase64\n                    ? 'img[src]'\n                    : 'img[src]:not([src^=\"data:\"])',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n    },\n    addCommands() {\n        return {\n            setImage: options => ({ commands }) => {\n                return commands.insertContent({\n                    type: this.name,\n                    attrs: options,\n                });\n            },\n        };\n    },\n    addInputRules() {\n        return [\n            nodeInputRule({\n                find: inputRegex,\n                type: this.type,\n                getAttributes: match => {\n                    const [, , alt, src, title] = match;\n                    return { src, alt, title };\n                },\n            }),\n        ];\n    },\n});\n\nexport { Image, Image as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nconst HardBreak = Node.create({\n    name: 'hardBreak',\n    addOptions() {\n        return {\n            keepMarks: true,\n            HTMLAttributes: {},\n        };\n    },\n    inline: true,\n    group: 'inline',\n    selectable: false,\n    linebreakReplacement: true,\n    parseHTML() {\n        return [\n            { tag: 'br' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n    },\n    renderText() {\n        return '\\n';\n    },\n    addCommands() {\n        return {\n            setHardBreak: () => ({ commands, chain, state, editor, }) => {\n                return commands.first([\n                    () => commands.exitCode(),\n                    () => commands.command(() => {\n                        const { selection, storedMarks } = state;\n                        if (selection.$from.parent.type.spec.isolating) {\n                            return false;\n                        }\n                        const { keepMarks } = this.options;\n                        const { splittableMarks } = editor.extensionManager;\n                        const marks = storedMarks\n                            || (selection.$to.parentOffset && selection.$from.marks());\n                        return chain()\n                            .insertContent({ type: this.name })\n                            .command(({ tr, dispatch }) => {\n                            if (dispatch && marks && keepMarks) {\n                                const filteredMarks = marks\n                                    .filter(mark => splittableMarks.includes(mark.type.name));\n                                tr.ensureMarks(filteredMarks);\n                            }\n                            return true;\n                        })\n                            .run();\n                    }),\n                ]);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Enter': () => this.editor.commands.setHardBreak(),\n            'Shift-Enter': () => this.editor.commands.setHardBreak(),\n        };\n    },\n});\n\nexport { HardBreak, HardBreak as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches an italic to a *italic* on input.\n */\nconst starInputRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))$/;\n/**\n * Matches an italic to a *italic* on paste.\n */\nconst starPasteRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))/g;\n/**\n * Matches an italic to a _italic_ on input.\n */\nconst underscoreInputRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))$/;\n/**\n * Matches an italic to a _italic_ on paste.\n */\nconst underscorePasteRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))/g;\n/**\n * This extension allows you to create italic text.\n * @see https://www.tiptap.dev/api/marks/italic\n */\nconst Italic = Mark.create({\n    name: 'italic',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'em',\n            },\n            {\n                tag: 'i',\n                getAttrs: node => node.style.fontStyle !== 'normal' && null,\n            },\n            {\n                style: 'font-style=normal',\n                clearMark: mark => mark.type.name === this.name,\n            },\n            {\n                style: 'font-style=italic',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setItalic: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleItalic: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetItalic: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-i': () => this.editor.commands.toggleItalic(),\n            'Mod-I': () => this.editor.commands.toggleItalic(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: starInputRegex,\n                type: this.type,\n            }),\n            markInputRule({\n                find: underscoreInputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: starPasteRegex,\n                type: this.type,\n            }),\n            markPasteRule({\n                find: underscorePasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Italic, Italic as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create underline text.\n * @see https://www.tiptap.dev/api/marks/underline\n */\nconst Underline = Mark.create({\n    name: 'underline',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'u',\n            },\n            {\n                style: 'text-decoration',\n                consuming: false,\n                getAttrs: style => (style.includes('underline') ? {} : false),\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setUnderline: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleUnderline: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetUnderline: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-u': () => this.editor.commands.toggleUnderline(),\n            'Mod-U': () => this.editor.commands.toggleUnderline(),\n        };\n    },\n});\n\nexport { Underline, Underline as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\n/**\n * Matches a blockquote to a `>` as input.\n */\nconst inputRegex = /^\\s*>\\s$/;\n/**\n * This extension allows you to create blockquotes.\n * @see https://tiptap.dev/api/nodes/blockquote\n */\nconst Blockquote = Node.create({\n    name: 'blockquote',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    content: 'block+',\n    group: 'block',\n    defining: true,\n    parseHTML() {\n        return [\n            { tag: 'blockquote' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setBlockquote: () => ({ commands }) => {\n                return commands.wrapIn(this.name);\n            },\n            toggleBlockquote: () => ({ commands }) => {\n                return commands.toggleWrap(this.name);\n            },\n            unsetBlockquote: () => ({ commands }) => {\n                return commands.lift(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n        };\n    },\n    addInputRules() {\n        return [\n            wrappingInputRule({\n                find: inputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Blockquote, Blockquote as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\nconst ListItemName = 'listItem';\nconst TextStyleName = 'textStyle';\n/**\n * Matches a bullet list to a dash or asterisk.\n */\nconst inputRegex = /^\\s*([-+*])\\s$/;\n/**\n * This extension allows you to create bullet lists.\n * This requires the ListItem extension\n * @see https://tiptap.dev/api/nodes/bullet-list\n * @see https://tiptap.dev/api/nodes/list-item.\n */\nconst BulletList = Node.create({\n    name: 'bulletList',\n    addOptions() {\n        return {\n            itemTypeName: 'listItem',\n            HTMLAttributes: {},\n            keepMarks: false,\n            keepAttributes: false,\n        };\n    },\n    group: 'block list',\n    content() {\n        return `${this.options.itemTypeName}+`;\n    },\n    parseHTML() {\n        return [\n            { tag: 'ul' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            toggleBulletList: () => ({ commands, chain }) => {\n                if (this.options.keepAttributes) {\n                    return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run();\n                }\n                return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n        };\n    },\n    addInputRules() {\n        let inputRule = wrappingInputRule({\n            find: inputRegex,\n            type: this.type,\n        });\n        if (this.options.keepMarks || this.options.keepAttributes) {\n            inputRule = wrappingInputRule({\n                find: inputRegex,\n                type: this.type,\n                keepMarks: this.options.keepMarks,\n                keepAttributes: this.options.keepAttributes,\n                getAttributes: () => { return this.editor.getAttributes(TextStyleName); },\n                editor: this.editor,\n            });\n        }\n        return [\n            inputRule,\n        ];\n    },\n});\n\nexport { BulletList, BulletList as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, textblockTypeInputRule } from '@tiptap/core';\n\n/**\n * This extension allows you to create headings.\n * @see https://www.tiptap.dev/api/nodes/heading\n */\nconst Heading = Node.create({\n    name: 'heading',\n    addOptions() {\n        return {\n            levels: [1, 2, 3, 4, 5, 6],\n            HTMLAttributes: {},\n        };\n    },\n    content: 'inline*',\n    group: 'block',\n    defining: true,\n    addAttributes() {\n        return {\n            level: {\n                default: 1,\n                rendered: false,\n            },\n        };\n    },\n    parseHTML() {\n        return this.options.levels\n            .map((level) => ({\n            tag: `h${level}`,\n            attrs: { level },\n        }));\n    },\n    renderHTML({ node, HTMLAttributes }) {\n        const hasLevel = this.options.levels.includes(node.attrs.level);\n        const level = hasLevel\n            ? node.attrs.level\n            : this.options.levels[0];\n        return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setHeading: attributes => ({ commands }) => {\n                if (!this.options.levels.includes(attributes.level)) {\n                    return false;\n                }\n                return commands.setNode(this.name, attributes);\n            },\n            toggleHeading: attributes => ({ commands }) => {\n                if (!this.options.levels.includes(attributes.level)) {\n                    return false;\n                }\n                return commands.toggleNode(this.name, 'paragraph', attributes);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return this.options.levels.reduce((items, level) => ({\n            ...items,\n            ...{\n                [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n            },\n        }), {});\n    },\n    addInputRules() {\n        return this.options.levels.map(level => {\n            return textblockTypeInputRule({\n                find: new RegExp(`^(#{${Math.min(...this.options.levels)},${level}})\\\\s$`),\n                type: this.type,\n                getAttributes: {\n                    level,\n                },\n            });\n        });\n    },\n});\n\nexport { Heading, Heading as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, isNodeSelection, nodeInputRule } from '@tiptap/core';\nimport { TextSelection, NodeSelection } from '@tiptap/pm/state';\n\n/**\n * This extension allows you to insert horizontal rules.\n * @see https://www.tiptap.dev/api/nodes/horizontal-rule\n */\nconst HorizontalRule = Node.create({\n    name: 'horizontalRule',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    group: 'block',\n    parseHTML() {\n        return [{ tag: 'hr' }];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n    },\n    addCommands() {\n        return {\n            setHorizontalRule: () => ({ chain, state }) => {\n                const { selection } = state;\n                const { $from: $originFrom, $to: $originTo } = selection;\n                const currentChain = chain();\n                if ($originFrom.parentOffset === 0) {\n                    currentChain.insertContentAt({\n                        from: Math.max($originFrom.pos - 1, 0),\n                        to: $originTo.pos,\n                    }, {\n                        type: this.name,\n                    });\n                }\n                else if (isNodeSelection(selection)) {\n                    currentChain.insertContentAt($originTo.pos, {\n                        type: this.name,\n                    });\n                }\n                else {\n                    currentChain.insertContent({ type: this.name });\n                }\n                return (currentChain\n                    // set cursor after horizontal rule\n                    .command(({ tr, dispatch }) => {\n                    var _a;\n                    if (dispatch) {\n                        const { $to } = tr.selection;\n                        const posAfter = $to.end();\n                        if ($to.nodeAfter) {\n                            if ($to.nodeAfter.isTextblock) {\n                                tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1));\n                            }\n                            else if ($to.nodeAfter.isBlock) {\n                                tr.setSelection(NodeSelection.create(tr.doc, $to.pos));\n                            }\n                            else {\n                                tr.setSelection(TextSelection.create(tr.doc, $to.pos));\n                            }\n                        }\n                        else {\n                            // add node after horizontal rule if it’s the end of the document\n                            const node = (_a = $to.parent.type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.create();\n                            if (node) {\n                                tr.insert(posAfter, node);\n                                tr.setSelection(TextSelection.create(tr.doc, posAfter + 1));\n                            }\n                        }\n                        tr.scrollIntoView();\n                    }\n                    return true;\n                })\n                    .run());\n            },\n        };\n    },\n    addInputRules() {\n        return [\n            nodeInputRule({\n                find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { HorizontalRule, HorizontalRule as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\nconst ListItemName = 'listItem';\nconst TextStyleName = 'textStyle';\n/**\n * Matches an ordered list to a 1. on input (or any number followed by a dot).\n */\nconst inputRegex = /^(\\d+)\\.\\s$/;\n/**\n * This extension allows you to create ordered lists.\n * This requires the ListItem extension\n * @see https://www.tiptap.dev/api/nodes/ordered-list\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nconst OrderedList = Node.create({\n    name: 'orderedList',\n    addOptions() {\n        return {\n            itemTypeName: 'listItem',\n            HTMLAttributes: {},\n            keepMarks: false,\n            keepAttributes: false,\n        };\n    },\n    group: 'block list',\n    content() {\n        return `${this.options.itemTypeName}+`;\n    },\n    addAttributes() {\n        return {\n            start: {\n                default: 1,\n                parseHTML: element => {\n                    return element.hasAttribute('start')\n                        ? parseInt(element.getAttribute('start') || '', 10)\n                        : 1;\n                },\n            },\n            type: {\n                default: undefined,\n                parseHTML: element => element.getAttribute('type'),\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'ol',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        const { start, ...attributesWithoutStart } = HTMLAttributes;\n        return start === 1\n            ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0]\n            : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            toggleOrderedList: () => ({ commands, chain }) => {\n                if (this.options.keepAttributes) {\n                    return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run();\n                }\n                return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-7': () => this.editor.commands.toggleOrderedList(),\n        };\n    },\n    addInputRules() {\n        let inputRule = wrappingInputRule({\n            find: inputRegex,\n            type: this.type,\n            getAttributes: match => ({ start: +match[1] }),\n            joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        });\n        if (this.options.keepMarks || this.options.keepAttributes) {\n            inputRule = wrappingInputRule({\n                find: inputRegex,\n                type: this.type,\n                keepMarks: this.options.keepMarks,\n                keepAttributes: this.options.keepAttributes,\n                getAttributes: match => ({ start: +match[1], ...this.editor.getAttributes(TextStyleName) }),\n                joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n                editor: this.editor,\n            });\n        }\n        return [\n            inputRule,\n        ];\n    },\n});\n\nexport { OrderedList, OrderedList as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches a strike to a ~~strike~~ on input.\n */\nconst inputRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))$/;\n/**\n * Matches a strike to a ~~strike~~ on paste.\n */\nconst pasteRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))/g;\n/**\n * This extension allows you to create strike text.\n * @see https://www.tiptap.dev/api/marks/strike\n */\nconst Strike = Mark.create({\n    name: 'strike',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 's',\n            },\n            {\n                tag: 'del',\n            },\n            {\n                tag: 'strike',\n            },\n            {\n                style: 'text-decoration',\n                consuming: false,\n                getAttrs: style => (style.includes('line-through') ? {} : false),\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setStrike: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleStrike: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetStrike: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-s': () => this.editor.commands.toggleStrike(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: inputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: pasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Strike, Strike as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { Extension } from '@tiptap/core';\nimport { dropCursor } from '@tiptap/pm/dropcursor';\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nconst Dropcursor = Extension.create({\n    name: 'dropCursor',\n    addOptions() {\n        return {\n            color: 'currentColor',\n            width: 1,\n            class: undefined,\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            dropCursor(this.options),\n        ];\n    },\n});\n\nexport { Dropcursor, Dropcursor as default };\n//# sourceMappingURL=index.js.map\n","import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n","import { Extension, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { gapCursor } from '@tiptap/pm/gapcursor';\n\n/**\n * This extension allows you to add a gap cursor to your editor.\n * A gap cursor is a cursor that appears when you click on a place\n * where no content is present, for example inbetween nodes.\n * @see https://tiptap.dev/api/extensions/gapcursor\n */\nconst Gapcursor = Extension.create({\n    name: 'gapCursor',\n    addProseMirrorPlugins() {\n        return [\n            gapCursor(),\n        ];\n    },\n    extendNodeSchema(extension) {\n        var _a;\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n        };\n        return {\n            allowGapCursor: (_a = callOrReturn(getExtensionField(extension, 'allowGapCursor', context))) !== null && _a !== void 0 ? _a : null,\n        };\n    },\n});\n\nexport { Gapcursor, Gapcursor as default };\n//# sourceMappingURL=index.js.map\n","import { Extension } from '@tiptap/core';\n\n/**\n * This extension allows you to align text.\n * @see https://www.tiptap.dev/api/extensions/text-align\n */\nconst TextAlign = Extension.create({\n    name: 'textAlign',\n    addOptions() {\n        return {\n            types: [],\n            alignments: ['left', 'center', 'right', 'justify'],\n            defaultAlignment: null,\n        };\n    },\n    addGlobalAttributes() {\n        return [\n            {\n                types: this.options.types,\n                attributes: {\n                    textAlign: {\n                        default: this.options.defaultAlignment,\n                        parseHTML: element => {\n                            const alignment = element.style.textAlign;\n                            return this.options.alignments.includes(alignment) ? alignment : this.options.defaultAlignment;\n                        },\n                        renderHTML: attributes => {\n                            if (!attributes.textAlign) {\n                                return {};\n                            }\n                            return { style: `text-align: ${attributes.textAlign}` };\n                        },\n                    },\n                },\n            },\n        ];\n    },\n    addCommands() {\n        return {\n            setTextAlign: (alignment) => ({ commands }) => {\n                if (!this.options.alignments.includes(alignment)) {\n                    return false;\n                }\n                return this.options.types\n                    .map(type => commands.updateAttributes(type, { textAlign: alignment }))\n                    .every(response => response);\n            },\n            unsetTextAlign: () => ({ commands }) => {\n                return this.options.types\n                    .map(type => commands.resetAttributes(type, 'textAlign'))\n                    .every(response => response);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-l': () => this.editor.commands.setTextAlign('left'),\n            'Mod-Shift-e': () => this.editor.commands.setTextAlign('center'),\n            'Mod-Shift-r': () => this.editor.commands.setTextAlign('right'),\n            'Mod-Shift-j': () => this.editor.commands.setTextAlign('justify'),\n        };\n    },\n});\n\nexport { TextAlign, TextAlign as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, getMarkAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create text styles. It is required by default\n * for the `textColor` and `backgroundColor` extensions.\n * @see https://www.tiptap.dev/api/marks/text-style\n */\nconst TextStyle = Mark.create({\n    name: 'textStyle',\n    priority: 101,\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'span',\n                getAttrs: element => {\n                    const hasStyles = element.hasAttribute('style');\n                    if (!hasStyles) {\n                        return false;\n                    }\n                    return {};\n                },\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            removeEmptyTextStyle: () => ({ state, commands }) => {\n                const attributes = getMarkAttributes(state, this.type);\n                const hasStyles = Object.entries(attributes).some(([, value]) => !!value);\n                if (hasStyles) {\n                    return true;\n                }\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n});\n\nexport { TextStyle, TextStyle as default };\n//# sourceMappingURL=index.js.map\n","import '@tiptap/extension-text-style';\nimport { Extension } from '@tiptap/core';\n\n/**\n * This extension allows you to color your text.\n * @see https://tiptap.dev/api/extensions/color\n */\nconst Color = Extension.create({\n    name: 'color',\n    addOptions() {\n        return {\n            types: ['textStyle'],\n        };\n    },\n    addGlobalAttributes() {\n        return [\n            {\n                types: this.options.types,\n                attributes: {\n                    color: {\n                        default: null,\n                        parseHTML: element => { var _a; return (_a = element.style.color) === null || _a === void 0 ? void 0 : _a.replace(/['\"]+/g, ''); },\n                        renderHTML: attributes => {\n                            if (!attributes.color) {\n                                return {};\n                            }\n                            return {\n                                style: `color: ${attributes.color}`,\n                            };\n                        },\n                    },\n                },\n            },\n        ];\n    },\n    addCommands() {\n        return {\n            setColor: color => ({ chain }) => {\n                return chain()\n                    .setMark('textStyle', { color })\n                    .run();\n            },\n            unsetColor: () => ({ chain }) => {\n                return chain()\n                    .setMark('textStyle', { color: null })\n                    .removeEmptyTextStyle()\n                    .run();\n            },\n        };\n    },\n});\n\nexport { Color, Color as default };\n//# sourceMappingURL=index.js.map\n","import { Node } from \"@tiptap/core\";\n\nexport default Node.create({\n  name: \"iframe\",\n  group: \"inline\",\n  content: \"text*\",\n  inline: true,\n  atom: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: \"iframe\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"iframe\", HTMLAttributes];\n  },\n});\n","// src/index.ts\nimport { Plugin as Plugin2 } from \"prosemirror-state\";\n\n// src/cellselection.ts\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport {\n  NodeSelection as NodeSelection2,\n  Selection,\n  SelectionRange,\n  TextSelection\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/tablemap.ts\nvar readFromCache;\nvar addToCache;\nif (typeof WeakMap != \"undefined\") {\n  let cache = /* @__PURE__ */ new WeakMap();\n  readFromCache = (key) => cache.get(key);\n  addToCache = (key, value) => {\n    cache.set(key, value);\n    return value;\n  };\n} else {\n  const cache = [];\n  const cacheSize = 10;\n  let cachePos = 0;\n  readFromCache = (key) => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key)\n        return cache[i + 1];\n  };\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize)\n      cachePos = 0;\n    cache[cachePos++] = key;\n    return cache[cachePos++] = value;\n  };\n}\nvar TableMap = class {\n  constructor(width, height, map, problems) {\n    this.width = width;\n    this.height = height;\n    this.map = map;\n    this.problems = problems;\n  }\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      const curPos = this.map[i];\n      if (curPos != pos)\n        continue;\n      const left = i % this.width;\n      const top = i / this.width | 0;\n      let right = left + 1;\n      let bottom = top + 1;\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) {\n        right++;\n      }\n      for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) {\n        bottom++;\n      }\n      return { left, top, right, bottom };\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      if (this.map[i] == pos) {\n        return i % this.width;\n      }\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    const { left, right, top, bottom } = this.findCell(pos);\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width)\n        return null;\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height)\n        return null;\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n    }\n  }\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    const {\n      left: leftA,\n      right: rightA,\n      top: topA,\n      bottom: bottomA\n    } = this.findCell(a);\n    const {\n      left: leftB,\n      right: rightB,\n      top: topB,\n      bottom: bottomB\n    } = this.findCell(b);\n    return {\n      left: Math.min(leftA, leftB),\n      top: Math.min(topA, topB),\n      right: Math.max(rightA, rightB),\n      bottom: Math.max(bottomA, bottomB)\n    };\n  }\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    const result = [];\n    const seen = {};\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const index = row * this.width + col;\n        const pos = this.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        if (col == rect.left && col && this.map[index - 1] == pos || row == rect.top && row && this.map[index - this.width] == pos) {\n          continue;\n        }\n        result.push(pos);\n      }\n    }\n    return result;\n  }\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0; ; i++) {\n      const rowEnd = rowStart + table.child(i).nodeSize;\n      if (i == row) {\n        let index = col + row * this.width;\n        const rowEndIndex = (row + 1) * this.width;\n        while (index < rowEndIndex && this.map[index] < rowStart)\n          index++;\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index];\n      }\n      rowStart = rowEnd;\n    }\n  }\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table));\n  }\n};\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\")\n    throw new RangeError(\"Not a table node: \" + table.type.name);\n  const width = findWidth(table), height = table.childCount;\n  const map = [];\n  let mapPos = 0;\n  let problems = null;\n  const colWidths = [];\n  for (let i = 0, e = width * height; i < e; i++)\n    map[i] = 0;\n  for (let row = 0, pos = 0; row < height; row++) {\n    const rowNode = table.child(row);\n    pos++;\n    for (let i = 0; ; i++) {\n      while (mapPos < map.length && map[mapPos] != 0)\n        mapPos++;\n      if (i == rowNode.childCount)\n        break;\n      const cellNode = rowNode.child(i);\n      const { colspan, rowspan, colwidth } = cellNode.attrs;\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({\n            type: \"overlong_rowspan\",\n            pos,\n            n: rowspan - h\n          });\n          break;\n        }\n        const start = mapPos + h * width;\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos;\n          else\n            (problems || (problems = [])).push({\n              type: \"collision\",\n              row,\n              pos,\n              n: colspan - w\n            });\n          const colW = colwidth && colwidth[w];\n          if (colW) {\n            const widthIndex = (start + w) % width * 2, prev = colWidths[widthIndex];\n            if (prev == null || prev != colW && colWidths[widthIndex + 1] == 1) {\n              colWidths[widthIndex] = colW;\n              colWidths[widthIndex + 1] = 1;\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++;\n            }\n          }\n        }\n      }\n      mapPos += colspan;\n      pos += cellNode.nodeSize;\n    }\n    const expectedPos = (row + 1) * width;\n    let missing = 0;\n    while (mapPos < expectedPos)\n      if (map[mapPos++] == 0)\n        missing++;\n    if (missing)\n      (problems || (problems = [])).push({ type: \"missing\", row, n: missing });\n    pos++;\n  }\n  const tableMap = new TableMap(width, height, map, problems);\n  let badWidths = false;\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height)\n      badWidths = true;\n  if (badWidths)\n    findBadColWidths(tableMap, colWidths, table);\n  return tableMap;\n}\nfunction findWidth(table) {\n  let width = -1;\n  let hasRowSpan = false;\n  for (let row = 0; row < table.childCount; row++) {\n    const rowNode = table.child(row);\n    let rowWidth = 0;\n    if (hasRowSpan)\n      for (let j = 0; j < row; j++) {\n        const prevRow = table.child(j);\n        for (let i = 0; i < prevRow.childCount; i++) {\n          const cell = prevRow.child(i);\n          if (j + cell.attrs.rowspan > row)\n            rowWidth += cell.attrs.colspan;\n        }\n      }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      const cell = rowNode.child(i);\n      rowWidth += cell.attrs.colspan;\n      if (cell.attrs.rowspan > 1)\n        hasRowSpan = true;\n    }\n    if (width == -1)\n      width = rowWidth;\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth);\n  }\n  return width;\n}\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems)\n    map.problems = [];\n  const seen = {};\n  for (let i = 0; i < map.map.length; i++) {\n    const pos = map.map[i];\n    if (seen[pos])\n      continue;\n    seen[pos] = true;\n    const node = table.nodeAt(pos);\n    if (!node) {\n      throw new RangeError(`No cell with offset ${pos} found`);\n    }\n    let updated = null;\n    const attrs = node.attrs;\n    for (let j = 0; j < attrs.colspan; j++) {\n      const col = (i + j) % map.width;\n      const colWidth = colWidths[col * 2];\n      if (colWidth != null && (!attrs.colwidth || attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(attrs)))[j] = colWidth;\n    }\n    if (updated)\n      map.problems.unshift({\n        type: \"colwidth mismatch\",\n        pos,\n        colwidth: updated\n      });\n  }\n}\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth)\n    return attrs.colwidth.slice();\n  const result = [];\n  for (let i = 0; i < attrs.colspan; i++)\n    result.push(0);\n  return result;\n}\n\n// src/util.ts\nimport { PluginKey } from \"prosemirror-state\";\n\n// src/schema.ts\nfunction getCellAttrs(dom, extraAttrs) {\n  if (typeof dom === \"string\") {\n    return {};\n  }\n  const widthAttr = dom.getAttribute(\"data-colwidth\");\n  const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map((s) => Number(s)) : null;\n  const colspan = Number(dom.getAttribute(\"colspan\") || 1);\n  const result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  };\n  for (const prop in extraAttrs) {\n    const getter = extraAttrs[prop].getFromDOM;\n    const value = getter && getter(dom);\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n  return result;\n}\nfunction setCellAttrs(node, extraAttrs) {\n  const attrs = {};\n  if (node.attrs.colspan != 1)\n    attrs.colspan = node.attrs.colspan;\n  if (node.attrs.rowspan != 1)\n    attrs.rowspan = node.attrs.rowspan;\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\");\n  for (const prop in extraAttrs) {\n    const setter = extraAttrs[prop].setDOMAttr;\n    if (setter)\n      setter(node.attrs[prop], attrs);\n  }\n  return attrs;\n}\nfunction tableNodes(options) {\n  const extraAttrs = options.cellAttributes || {};\n  const cellAttrs = {\n    colspan: { default: 1 },\n    rowspan: { default: 1 },\n    colwidth: { default: null }\n  };\n  for (const prop in extraAttrs)\n    cellAttrs[prop] = { default: extraAttrs[prop].default };\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{ tag: \"table\" }],\n      toDOM() {\n        return [\"table\", [\"tbody\", 0]];\n      }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{ tag: \"tr\" }],\n      toDOM() {\n        return [\"tr\", 0];\n      }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"td\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"td\", setCellAttrs(node, extraAttrs), 0];\n      }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"th\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"th\", setCellAttrs(node, extraAttrs), 0];\n      }\n    }\n  };\n}\nfunction tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes;\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {};\n    for (const name in schema.nodes) {\n      const type = schema.nodes[name], role = type.spec.tableRole;\n      if (role)\n        result[role] = type;\n    }\n  }\n  return result;\n}\n\n// src/util.ts\nvar tableEditingKey = new PluginKey(\"selectingCells\");\nfunction cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\")\n      return $pos.node(0).resolve($pos.before(d + 1));\n  return null;\n}\nfunction cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) {\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === \"header_cell\")\n      return $pos.node(d);\n  }\n  return null;\n}\nfunction isInTable(state) {\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--)\n    if ($head.node(d).type.spec.tableRole == \"row\")\n      return true;\n  return false;\n}\nfunction selectionCell(state) {\n  const sel = state.selection;\n  if (\"$anchorCell\" in sel && sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (\"node\" in sel && sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor;\n  }\n  const $cell = cellAround(sel.$head) || cellNear(sel.$head);\n  if ($cell) {\n    return $cell;\n  }\n  throw new RangeError(`No cell found around position ${sel.head}`);\n}\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    const role = after.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos);\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    const role = before.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos - before.nodeSize);\n  }\n}\nfunction pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && !!$pos.nodeAfter;\n}\nfunction moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize);\n}\nfunction inSameTable($cellA, $cellB) {\n  return $cellA.depth == $cellB.depth && $cellA.pos >= $cellB.start(-1) && $cellA.pos <= $cellB.end(-1);\n}\nfunction findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1));\n}\nfunction colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1));\n}\nfunction nextCell($pos, axis, dir) {\n  const table = $pos.node(-1);\n  const map = TableMap.get(table);\n  const tableStart = $pos.start(-1);\n  const moved = map.nextCell($pos.pos - tableStart, axis, dir);\n  return moved == null ? null : $pos.node(0).resolve(tableStart + moved);\n}\nfunction removeColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan - n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    result.colwidth.splice(pos, n);\n    if (!result.colwidth.some((w) => w > 0))\n      result.colwidth = null;\n  }\n  return result;\n}\nfunction addColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan + n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    for (let i = 0; i < n; i++)\n      result.colwidth.splice(pos, 0, 0);\n  }\n  return result;\n}\nfunction columnIsHeader(map, table, col) {\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false;\n  return true;\n}\n\n// src/cellselection.ts\nvar CellSelection = class _CellSelection extends Selection {\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const rect = map.rectBetween(\n      $anchorCell.pos - tableStart,\n      $headCell.pos - tableStart\n    );\n    const doc = $anchorCell.node(0);\n    const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - tableStart);\n    cells.unshift($headCell.pos - tableStart);\n    const ranges = cells.map((pos) => {\n      const cell = table.nodeAt(pos);\n      if (!cell) {\n        throw RangeError(`No cell with offset ${pos} found`);\n      }\n      const from = tableStart + pos + 1;\n      return new SelectionRange(\n        doc.resolve(from),\n        doc.resolve(from + cell.content.size)\n      );\n    });\n    super(ranges[0].$from, ranges[0].$to, ranges);\n    this.$anchorCell = $anchorCell;\n    this.$headCell = $headCell;\n  }\n  map(doc, mapping) {\n    const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n    const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n      if (tableChanged && this.isRowSelection())\n        return _CellSelection.rowSelection($anchorCell, $headCell);\n      else if (tableChanged && this.isColSelection())\n        return _CellSelection.colSelection($anchorCell, $headCell);\n      else\n        return new _CellSelection($anchorCell, $headCell);\n    }\n    return TextSelection.between($anchorCell, $headCell);\n  }\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const rect = map.rectBetween(\n      this.$anchorCell.pos - tableStart,\n      this.$headCell.pos - tableStart\n    );\n    const seen = {};\n    const rows = [];\n    for (let row = rect.top; row < rect.bottom; row++) {\n      const rowContent = [];\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        const pos = map.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        const cellRect = map.findCell(pos);\n        let cell = table.nodeAt(pos);\n        if (!cell) {\n          throw RangeError(`No cell with offset ${pos} found`);\n        }\n        const extraLeft = rect.left - cellRect.left;\n        const extraRight = cellRect.right - rect.right;\n        if (extraLeft > 0 || extraRight > 0) {\n          let attrs = cell.attrs;\n          if (extraLeft > 0) {\n            attrs = removeColSpan(attrs, 0, extraLeft);\n          }\n          if (extraRight > 0) {\n            attrs = removeColSpan(\n              attrs,\n              attrs.colspan - extraRight,\n              extraRight\n            );\n          }\n          if (cellRect.left < rect.left) {\n            cell = cell.type.createAndFill(attrs);\n            if (!cell) {\n              throw RangeError(\n                `Could not create cell with attrs ${JSON.stringify(attrs)}`\n              );\n            }\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n          const attrs = {\n            ...cell.attrs,\n            rowspan: Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top)\n          };\n          if (cellRect.top < rect.top) {\n            cell = cell.type.createAndFill(attrs);\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        rowContent.push(cell);\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)));\n    }\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1);\n  }\n  replace(tr, content = Slice.empty) {\n    const mapFrom = tr.steps.length, ranges = this.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n      tr.replace(\n        mapping.map($from.pos),\n        mapping.map($to.pos),\n        i ? Slice.empty : content\n      );\n    }\n    const sel = Selection.findFrom(\n      tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)),\n      -1\n    );\n    if (sel)\n      tr.setSelection(sel);\n  }\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n  }\n  forEachCell(f) {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const cells = map.cellsInRect(\n      map.rectBetween(\n        this.$anchorCell.pos - tableStart,\n        this.$headCell.pos - tableStart\n      )\n    );\n    for (let i = 0; i < cells.length; i++) {\n      f(table.nodeAt(cells[i]), tableStart + cells[i]);\n    }\n  }\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    const anchorTop = this.$anchorCell.index(-1);\n    const headTop = this.$headCell.index(-1);\n    if (Math.min(anchorTop, headTop) > 0)\n      return false;\n    const anchorBottom = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan;\n    const headBottom = headTop + this.$headCell.nodeAfter.attrs.rowspan;\n    return Math.max(anchorBottom, headBottom) == this.$headCell.node(-1).childCount;\n  }\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(tableStart + map.map[anchorRect.left]);\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + headRect.right - 1]\n        );\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.left]);\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + anchorRect.right - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const anchorLeft = map.colCount(this.$anchorCell.pos - tableStart);\n    const headLeft = map.colCount(this.$headCell.pos - tableStart);\n    if (Math.min(anchorLeft, headLeft) > 0)\n      return false;\n    const anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan;\n    const headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan;\n    return Math.max(anchorRight, headRight) == map.width;\n  }\n  eq(other) {\n    return other instanceof _CellSelection && other.$anchorCell.pos == this.$anchorCell.pos && other.$headCell.pos == this.$headCell.pos;\n  }\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[anchorRect.top * map.width]\n        );\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (headRect.top + 1) - 1]\n        );\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.top * map.width]);\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (anchorRect.top + 1) - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  toJSON() {\n    return {\n      type: \"cell\",\n      anchor: this.$anchorCell.pos,\n      head: this.$headCell.pos\n    };\n  }\n  static fromJSON(doc, json) {\n    return new _CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n  }\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new _CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n  }\n  getBookmark() {\n    return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n  }\n};\nCellSelection.prototype.visible = false;\nSelection.jsonID(\"cell\", CellSelection);\nvar CellBookmark = class _CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor;\n    this.head = head;\n  }\n  map(mapping) {\n    return new _CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n  }\n  resolve(doc) {\n    const $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head);\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" && $headCell.parent.type.spec.tableRole == \"row\" && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell);\n    else\n      return Selection.near($headCell, 1);\n  }\n};\nfunction drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection))\n    return null;\n  const cells = [];\n  state.selection.forEachCell((node, pos) => {\n    cells.push(\n      Decoration.node(pos, pos + node.nodeSize, { class: \"selectedCell\" })\n    );\n  });\n  return DecorationSet.create(state.doc, cells);\n}\nfunction isCellBoundarySelection({ $from, $to }) {\n  if ($from.pos == $to.pos || $from.pos < $to.pos - 6)\n    return false;\n  let afterFrom = $from.pos;\n  let beforeTo = $to.pos;\n  let depth = $from.depth;\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth))\n      break;\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d))\n      break;\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole);\n}\nfunction isTextSelectionAcrossCells({ $from, $to }) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n  for (let i = $from.depth; i > 0; i--) {\n    const node = $from.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n  for (let i = $to.depth; i > 0; i--) {\n    const node = $to.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\nfunction normalizeSelection(state, tr, allowTableNodeSelection) {\n  const sel = (tr || state).selection;\n  const doc = (tr || state).doc;\n  let normalize;\n  let role;\n  if (sel instanceof NodeSelection2 && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from);\n    } else if (role == \"row\") {\n      const $cell = doc.resolve(sel.from + 1);\n      normalize = CellSelection.rowSelection($cell, $cell);\n    } else if (!allowTableNodeSelection) {\n      const map = TableMap.get(sel.node);\n      const start = sel.from + 1;\n      const lastCell = start + map.map[map.width * map.height - 1];\n      normalize = CellSelection.create(doc, start + 1, lastCell);\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from);\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize);\n  return tr;\n}\n\n// src/fixtables.ts\nimport { PluginKey as PluginKey2 } from \"prosemirror-state\";\nvar fixTablesKey = new PluginKey2(\"fix-tables\");\nfunction changedDescendants(old, cur, offset, f) {\n  const oldSize = old.childCount, curSize = cur.childCount;\n  outer:\n    for (let i = 0, j = 0; i < curSize; i++) {\n      const child = cur.child(i);\n      for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n        if (old.child(scan) == child) {\n          j = scan + 1;\n          offset += child.nodeSize;\n          continue outer;\n        }\n      }\n      f(child, offset);\n      if (j < oldSize && old.child(j).sameMarkup(child))\n        changedDescendants(old.child(j), child, offset + 1, f);\n      else\n        child.nodesBetween(0, child.content.size, f, offset + 1);\n      offset += child.nodeSize;\n    }\n}\nfunction fixTables(state, oldState) {\n  let tr;\n  const check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\")\n      tr = fixTable(state, node, pos, tr);\n  };\n  if (!oldState)\n    state.doc.descendants(check);\n  else if (oldState.doc != state.doc)\n    changedDescendants(oldState.doc, state.doc, 0, check);\n  return tr;\n}\nfunction fixTable(state, table, tablePos, tr) {\n  const map = TableMap.get(table);\n  if (!map.problems)\n    return tr;\n  if (!tr)\n    tr = state.tr;\n  const mustAdd = [];\n  for (let i = 0; i < map.height; i++)\n    mustAdd.push(0);\n  for (let i = 0; i < map.problems.length; i++) {\n    const prob = map.problems[i];\n    if (prob.type == \"collision\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      const attrs = cell.attrs;\n      for (let j = 0; j < attrs.rowspan; j++)\n        mustAdd[prob.row + j] += prob.n;\n      tr.setNodeMarkup(\n        tr.mapping.map(tablePos + 1 + prob.pos),\n        null,\n        removeColSpan(attrs, attrs.colspan - prob.n, prob.n)\n      );\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n;\n    } else if (prob.type == \"overlong_rowspan\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        rowspan: cell.attrs.rowspan - prob.n\n      });\n    } else if (prob.type == \"colwidth mismatch\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        colwidth: prob.colwidth\n      });\n    }\n  }\n  let first, last;\n  for (let i = 0; i < mustAdd.length; i++)\n    if (mustAdd[i]) {\n      if (first == null)\n        first = i;\n      last = i;\n    }\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    const row = table.child(i);\n    const end = pos + row.nodeSize;\n    const add = mustAdd[i];\n    if (add > 0) {\n      let role = \"cell\";\n      if (row.firstChild) {\n        role = row.firstChild.type.spec.tableRole;\n      }\n      const nodes = [];\n      for (let j = 0; j < add; j++) {\n        const node = tableNodeTypes(state.schema)[role].createAndFill();\n        if (node)\n          nodes.push(node);\n      }\n      const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n      tr.insert(tr.mapping.map(side), nodes);\n    }\n    pos = end;\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n\n// src/input.ts\nimport { keydownHandler } from \"prosemirror-keymap\";\nimport { Fragment as Fragment4 } from \"prosemirror-model\";\nimport {\n  Selection as Selection2,\n  TextSelection as TextSelection3\n} from \"prosemirror-state\";\n\n// src/commands.ts\nimport {\n  Fragment as Fragment2,\n  Slice as Slice2\n} from \"prosemirror-model\";\nimport {\n  TextSelection as TextSelection2\n} from \"prosemirror-state\";\nfunction selectedRect(state) {\n  const sel = state.selection;\n  const $pos = selectionCell(state);\n  const table = $pos.node(-1);\n  const tableStart = $pos.start(-1);\n  const map = TableMap.get(table);\n  const rect = sel instanceof CellSelection ? map.rectBetween(\n    sel.$anchorCell.pos - tableStart,\n    sel.$headCell.pos - tableStart\n  ) : map.findCell($pos.pos - tableStart);\n  return { ...rect, tableStart, map, table };\n}\nfunction addColumn(tr, { map, tableStart, table }, col) {\n  let refColumn = col > 0 ? -1 : 0;\n  if (columnIsHeader(map, table, col + refColumn)) {\n    refColumn = col == 0 || col == map.width ? null : 0;\n  }\n  for (let row = 0; row < map.height; row++) {\n    const index = row * map.width + col;\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      const pos = map.map[index];\n      const cell = table.nodeAt(pos);\n      tr.setNodeMarkup(\n        tr.mapping.map(tableStart + pos),\n        null,\n        addColSpan(cell.attrs, col - map.colCount(pos))\n      );\n      row += cell.attrs.rowspan - 1;\n    } else {\n      const type = refColumn == null ? tableNodeTypes(table.type.schema).cell : table.nodeAt(map.map[index + refColumn]).type;\n      const pos = map.positionAt(row, col, table);\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n    }\n  }\n  return tr;\n}\nfunction addColumnBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.left));\n  }\n  return true;\n}\nfunction addColumnAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.right));\n  }\n  return true;\n}\nfunction removeColumn(tr, { map, table, tableStart }, col) {\n  const mapStart = tr.mapping.maps.length;\n  for (let row = 0; row < map.height; ) {\n    const index = row * map.width + col;\n    const pos = map.map[index];\n    const cell = table.nodeAt(pos);\n    const attrs = cell.attrs;\n    if (col > 0 && map.map[index - 1] == pos || col < map.width - 1 && map.map[index + 1] == pos) {\n      tr.setNodeMarkup(\n        tr.mapping.slice(mapStart).map(tableStart + pos),\n        null,\n        removeColSpan(attrs, col - map.colCount(pos))\n      );\n    } else {\n      const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n      tr.delete(start, start + cell.nodeSize);\n    }\n    row += attrs.rowspan;\n  }\n}\nfunction deleteColumn(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    const tr = state.tr;\n    if (rect.left == 0 && rect.right == rect.map.width)\n      return false;\n    for (let i = rect.right - 1; ; i--) {\n      removeColumn(tr, rect, i);\n      if (i == rect.left)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction rowIsHeader(map, table, row) {\n  var _a;\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let col = 0; col < map.width; col++)\n    if (((_a = table.nodeAt(map.map[col + row * map.width])) == null ? void 0 : _a.type) != headerCell)\n      return false;\n  return true;\n}\nfunction addRow(tr, { map, tableStart, table }, row) {\n  var _a;\n  let rowPos = tableStart;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const cells = [];\n  let refRow = row > 0 ? -1 : 0;\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0;\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      const pos = map.map[index];\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tableStart + pos, null, {\n        ...attrs,\n        rowspan: attrs.rowspan + 1\n      });\n      col += attrs.colspan - 1;\n    } else {\n      const type = refRow == null ? tableNodeTypes(table.type.schema).cell : (_a = table.nodeAt(map.map[index + refRow * map.width])) == null ? void 0 : _a.type;\n      const node = type == null ? void 0 : type.createAndFill();\n      if (node)\n        cells.push(node);\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n  return tr;\n}\nfunction addRowBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.top));\n  }\n  return true;\n}\nfunction addRowAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.bottom));\n  }\n  return true;\n}\nfunction removeRow(tr, { map, table, tableStart }, row) {\n  let rowPos = 0;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const nextRow = rowPos + table.child(row).nodeSize;\n  const mapFrom = tr.mapping.maps.length;\n  tr.delete(rowPos + tableStart, nextRow + tableStart);\n  const seen = /* @__PURE__ */ new Set();\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    const pos = map.map[index];\n    if (seen.has(pos))\n      continue;\n    seen.add(pos);\n    if (row > 0 && pos == map.map[index - map.width]) {\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, {\n        ...attrs,\n        rowspan: attrs.rowspan - 1\n      });\n      col += attrs.colspan - 1;\n    } else if (row < map.height && pos == map.map[index + map.width]) {\n      const cell = table.nodeAt(pos);\n      const attrs = cell.attrs;\n      const copy = cell.type.create(\n        { ...attrs, rowspan: cell.attrs.rowspan - 1 },\n        cell.content\n      );\n      const newPos = map.positionAt(row + 1, col, table);\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n      col += attrs.colspan - 1;\n    }\n  }\n}\nfunction deleteRow(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state), tr = state.tr;\n    if (rect.top == 0 && rect.bottom == rect.map.height)\n      return false;\n    for (let i = rect.bottom - 1; ; i--) {\n      removeRow(tr, rect, i);\n      if (i == rect.top)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(rect.table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction isEmpty(cell) {\n  const c = cell.content;\n  return c.childCount == 1 && c.child(0).isTextblock && c.child(0).childCount == 0;\n}\nfunction cellsOverlapRectangle({ width, height, map }, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop;\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1);\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] || rect.right < width && map[indexRight] == map[indexRight + 1])\n      return true;\n    indexLeft += width;\n    indexRight += width;\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] || rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n      return true;\n    indexTop++;\n    indexBottom++;\n  }\n  return false;\n}\nfunction mergeCells(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos)\n    return false;\n  const rect = selectedRect(state), { map } = rect;\n  if (cellsOverlapRectangle(map, rect))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const seen = {};\n    let content = Fragment2.empty;\n    let mergedPos;\n    let mergedCell;\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const cellPos = map.map[row * map.width + col];\n        const cell = rect.table.nodeAt(cellPos);\n        if (seen[cellPos] || !cell)\n          continue;\n        seen[cellPos] = true;\n        if (mergedPos == null) {\n          mergedPos = cellPos;\n          mergedCell = cell;\n        } else {\n          if (!isEmpty(cell))\n            content = content.append(cell.content);\n          const mapped = tr.mapping.map(cellPos + rect.tableStart);\n          tr.delete(mapped, mapped + cell.nodeSize);\n        }\n      }\n    }\n    if (mergedPos == null || mergedCell == null) {\n      return true;\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null, {\n      ...addColSpan(\n        mergedCell.attrs,\n        mergedCell.attrs.colspan,\n        rect.right - rect.left - mergedCell.attrs.colspan\n      ),\n      rowspan: rect.bottom - rect.top\n    });\n    if (content.size) {\n      const end = mergedPos + 1 + mergedCell.content.size;\n      const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n    }\n    tr.setSelection(\n      new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart))\n    );\n    dispatch(tr);\n  }\n  return true;\n}\nfunction splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({ node }) => {\n    return nodeTypes[node.type.spec.tableRole];\n  })(state, dispatch);\n}\nfunction splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    var _a;\n    const sel = state.selection;\n    let cellNode;\n    let cellPos;\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from);\n      if (!cellNode)\n        return false;\n      cellPos = (_a = cellAround(sel.$from)) == null ? void 0 : _a.pos;\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos)\n        return false;\n      cellNode = sel.$anchorCell.nodeAfter;\n      cellPos = sel.$anchorCell.pos;\n    }\n    if (cellNode == null || cellPos == null) {\n      return false;\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {\n      return false;\n    }\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs;\n      const attrs = [];\n      const colwidth = baseAttrs.colwidth;\n      if (baseAttrs.rowspan > 1)\n        baseAttrs = { ...baseAttrs, rowspan: 1 };\n      if (baseAttrs.colspan > 1)\n        baseAttrs = { ...baseAttrs, colspan: 1 };\n      const rect = selectedRect(state), tr = state.tr;\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(\n          colwidth ? {\n            ...baseAttrs,\n            colwidth: colwidth && colwidth[i] ? [colwidth[i]] : null\n          } : baseAttrs\n        );\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table);\n        if (row == rect.top)\n          pos += cellNode.nodeSize;\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top)\n            continue;\n          tr.insert(\n            lastCell = tr.mapping.map(pos + rect.tableStart, 1),\n            getCellType({ node: cellNode, row, col }).createAndFill(attrs[i])\n          );\n        }\n      }\n      tr.setNodeMarkup(\n        cellPos,\n        getCellType({ node: cellNode, row: rect.top, col: rect.left }),\n        attrs[0]\n      );\n      if (sel instanceof CellSelection)\n        tr.setSelection(\n          new CellSelection(\n            tr.doc.resolve(sel.$anchorCell.pos),\n            lastCell ? tr.doc.resolve(lastCell) : void 0\n          )\n        );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const $cell = selectionCell(state);\n    if ($cell.nodeAfter.attrs[name] === value)\n      return false;\n    if (dispatch) {\n      const tr = state.tr;\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, {\n              ...node.attrs,\n              [name]: value\n            });\n        });\n      else\n        tr.setNodeMarkup($cell.pos, null, {\n          ...$cell.nodeAfter.attrs,\n          [name]: value\n        });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const cells = rect.map.cellsInRect(\n        type == \"column\" ? {\n          left: rect.left,\n          top: 0,\n          right: rect.right,\n          bottom: rect.map.height\n        } : type == \"row\" ? {\n          left: 0,\n          top: rect.top,\n          right: rect.map.width,\n          bottom: rect.bottom\n        } : rect\n      );\n      const nodes = cells.map((pos) => rect.table.nodeAt(pos));\n      for (let i = 0; i < cells.length; i++)\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.cell,\n            nodes[i].attrs\n          );\n      if (tr.steps.length == 0)\n        for (let i = 0; i < cells.length; i++)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.header_cell,\n            nodes[i].attrs\n          );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction isHeaderEnabledByType(type, rect, types) {\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1\n  });\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i]);\n    if (cell && cell.type !== types.header_cell) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false };\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type);\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types);\n      const isHeaderColumnEnabled = isHeaderEnabledByType(\n        \"column\",\n        rect,\n        types\n      );\n      const isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled : type === \"row\" ? isHeaderColumnEnabled : false;\n      const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n      const cellsRect = type == \"column\" ? {\n        left: 0,\n        top: selectionStartsAt,\n        right: 1,\n        bottom: rect.map.height\n      } : type == \"row\" ? {\n        left: selectionStartsAt,\n        top: 0,\n        right: rect.map.width,\n        bottom: 1\n      } : rect;\n      const newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell : type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell;\n      rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n        const cellPos = relativeCellPos + rect.tableStart;\n        const cell = tr.doc.nodeAt(cellPos);\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs);\n        }\n      });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nvar toggleHeaderRow = toggleHeader(\"row\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderColumn = toggleHeader(\"column\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderCell = toggleHeader(\"cell\", {\n  useDeprecatedLogic: true\n});\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    const before = $cell.nodeBefore;\n    if (before)\n      return $cell.pos - before.nodeSize;\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      const rowNode = $cell.node(-1).child(row);\n      const lastChild = rowNode.lastChild;\n      if (lastChild) {\n        return rowEnd - 1 - lastChild.nodeSize;\n      }\n      rowEnd -= rowNode.nodeSize;\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) {\n      return $cell.pos + $cell.nodeAfter.nodeSize;\n    }\n    const table = $cell.node(-1);\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      const rowNode = table.child(row);\n      if (rowNode.childCount)\n        return rowStart + 1;\n      rowStart += rowNode.nodeSize;\n    }\n  }\n  return null;\n}\nfunction goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const cell = findNextCell(selectionCell(state), direction);\n    if (cell == null)\n      return false;\n    if (dispatch) {\n      const $cell = state.doc.resolve(cell);\n      dispatch(\n        state.tr.setSelection(TextSelection2.between($cell, moveCellForward($cell))).scrollIntoView()\n      );\n    }\n    return true;\n  };\n}\nfunction deleteTable(state, dispatch) {\n  const $pos = state.selection.$anchor;\n  for (let d = $pos.depth; d > 0; d--) {\n    const node = $pos.node(d);\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch)\n        dispatch(\n          state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView()\n        );\n      return true;\n    }\n  }\n  return false;\n}\nfunction deleteCellSelection(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(\n          tr.mapping.map(pos + 1),\n          tr.mapping.map(pos + cell.nodeSize - 1),\n          new Slice2(baseContent, 0, 0)\n        );\n    });\n    if (tr.docChanged)\n      dispatch(tr);\n  }\n  return true;\n}\n\n// src/copypaste.ts\nimport { Fragment as Fragment3, Slice as Slice3 } from \"prosemirror-model\";\nimport { Transform } from \"prosemirror-transform\";\nfunction pastedCells(slice) {\n  if (!slice.size)\n    return null;\n  let { content, openStart, openEnd } = slice;\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.child(0).type.spec.tableRole == \"table\")) {\n    openStart--;\n    openEnd--;\n    content = content.child(0).content;\n  }\n  const first = content.child(0);\n  const role = first.type.spec.tableRole;\n  const schema = first.type.schema, rows = [];\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content;\n      const left = i ? 0 : Math.max(0, openStart - 1);\n      const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n      if (left || right)\n        cells = fitSlice(\n          tableNodeTypes(schema).row,\n          new Slice3(cells, left, right)\n        ).content;\n      rows.push(cells);\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(\n      openStart || openEnd ? fitSlice(\n        tableNodeTypes(schema).row,\n        new Slice3(content, openStart, openEnd)\n      ).content : content\n    );\n  } else {\n    return null;\n  }\n  return ensureRectangular(schema, rows);\n}\nfunction ensureRectangular(schema, rows) {\n  const widths = [];\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      const { rowspan, colspan } = row.child(j).attrs;\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan;\n    }\n  }\n  let width = 0;\n  for (let r = 0; r < widths.length; r++)\n    width = Math.max(width, widths[r]);\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length)\n      rows.push(Fragment3.empty);\n    if (widths[r] < width) {\n      const empty = tableNodeTypes(schema).cell.createAndFill();\n      const cells = [];\n      for (let i = widths[r]; i < width; i++) {\n        cells.push(empty);\n      }\n      rows[r] = rows[r].append(Fragment3.from(cells));\n    }\n  }\n  return { height: rows.length, width, rows };\n}\nfunction fitSlice(nodeType, slice) {\n  const node = nodeType.createAndFill();\n  const tr = new Transform(node).replace(0, node.content.size, slice);\n  return tr.doc;\n}\nfunction clipCells({ width, height, rows }, newWidth, newHeight) {\n  if (width != newWidth) {\n    const added = [];\n    const newRows = [];\n    for (let row = 0; row < rows.length; row++) {\n      const frag = rows[row], cells = [];\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount);\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.createChecked(\n            removeColSpan(\n              cell.attrs,\n              cell.attrs.colspan,\n              col + cell.attrs.colspan - newWidth\n            ),\n            cell.content\n          );\n        cells.push(cell);\n        col += cell.attrs.colspan;\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan;\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    width = newWidth;\n  }\n  if (height != newHeight) {\n    const newRows = [];\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      const cells = [], source = rows[i % height];\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j);\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(\n            {\n              ...cell.attrs,\n              rowspan: Math.max(1, newHeight - cell.attrs.rowspan)\n            },\n            cell.content\n          );\n        cells.push(cell);\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    height = newHeight;\n  }\n  return { width, height, rows };\n}\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  const schema = tr.doc.type.schema;\n  const types = tableNodeTypes(schema);\n  let empty;\n  let emptyHead;\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      const rowNode = table.child(row);\n      rowEnd += rowNode.nodeSize;\n      const cells = [];\n      let add;\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill());\n      else\n        add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n      for (let i = map.width; i < width; i++)\n        cells.push(add);\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n    }\n  }\n  if (height > map.height) {\n    const cells = [];\n    for (let i = 0, start2 = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      const header = i >= map.width ? false : table.nodeAt(map.map[start2 + i]).type == types.header_cell;\n      cells.push(\n        header ? emptyHead || (emptyHead = types.header_cell.createAndFill()) : empty || (empty = types.cell.createAndFill())\n      );\n    }\n    const emptyRow = types.row.create(null, Fragment3.from(cells)), rows = [];\n    for (let i = map.height; i < height; i++)\n      rows.push(emptyRow);\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n  }\n  return !!(empty || emptyHead);\n}\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height)\n    return false;\n  let found = false;\n  for (let col = left; col < right; col++) {\n    const index = top * map.width + col, pos = map.map[index];\n    if (map.map[index - map.width] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const { top: cellTop, left: cellLeft } = map.findCell(pos);\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, {\n        ...cell.attrs,\n        rowspan: top - cellTop\n      });\n      tr.insert(\n        tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n        cell.type.createAndFill({\n          ...cell.attrs,\n          rowspan: cellTop + cell.attrs.rowspan - top\n        })\n      );\n      col += cell.attrs.colspan - 1;\n    }\n  }\n  return found;\n}\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width)\n    return false;\n  let found = false;\n  for (let row = top; row < bottom; row++) {\n    const index = row * map.width + left, pos = map.map[index];\n    if (map.map[index - 1] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const cellLeft = map.colCount(pos);\n      const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n      tr.setNodeMarkup(\n        updatePos,\n        null,\n        removeColSpan(\n          cell.attrs,\n          left - cellLeft,\n          cell.attrs.colspan - (left - cellLeft)\n        )\n      );\n      tr.insert(\n        updatePos + cell.nodeSize,\n        cell.type.createAndFill(\n          removeColSpan(cell.attrs, 0, left - cellLeft)\n        )\n      );\n      row += cell.attrs.rowspan - 1;\n    }\n  }\n  return found;\n}\nfunction insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc;\n  if (!table) {\n    throw new Error(\"No table found\");\n  }\n  let map = TableMap.get(table);\n  const { top, left } = rect;\n  const right = left + cells.width, bottom = top + cells.height;\n  const tr = state.tr;\n  let mapFrom = 0;\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc;\n    if (!table) {\n      throw new Error(\"No table found\");\n    }\n    map = TableMap.get(table);\n    mapFrom = tr.mapping.maps.length;\n  }\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom))\n    recomp();\n  for (let row = top; row < bottom; row++) {\n    const from = map.positionAt(row, left, table), to = map.positionAt(row, right, table);\n    tr.replace(\n      tr.mapping.slice(mapFrom).map(from + tableStart),\n      tr.mapping.slice(mapFrom).map(to + tableStart),\n      new Slice3(cells.rows[row - top], 0, 0)\n    );\n  }\n  recomp();\n  tr.setSelection(\n    new CellSelection(\n      tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n      tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))\n    )\n  );\n  dispatch(tr);\n}\n\n// src/input.ts\nvar handleKeyDown = keydownHandler({\n  ArrowLeft: arrow(\"horiz\", -1),\n  ArrowRight: arrow(\"horiz\", 1),\n  ArrowUp: arrow(\"vert\", -1),\n  ArrowDown: arrow(\"vert\", 1),\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n  Backspace: deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  Delete: deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n});\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection))\n    return false;\n  if (dispatch)\n    dispatch(state.tr.setSelection(selection).scrollIntoView());\n  return true;\n}\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(sel.$headCell, dir)\n      );\n    }\n    if (axis != \"horiz\" && !sel.empty)\n      return false;\n    const end = atEndOfCell(view, axis, dir);\n    if (end == null)\n      return false;\n    if (axis == \"horiz\") {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(state.doc.resolve(sel.head + dir), dir)\n      );\n    } else {\n      const $cell = state.doc.resolve(end);\n      const $next = nextCell($cell, axis, dir);\n      let newSel;\n      if ($next)\n        newSel = Selection2.near($next, 1);\n      else if (dir < 0)\n        newSel = Selection2.near(state.doc.resolve($cell.before(-1)), -1);\n      else\n        newSel = Selection2.near(state.doc.resolve($cell.after(-1)), 1);\n      return maybeSetSelection(state, dispatch, newSel);\n    }\n  };\n}\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    let cellSel;\n    if (sel instanceof CellSelection) {\n      cellSel = sel;\n    } else {\n      const end = atEndOfCell(view, axis, dir);\n      if (end == null)\n        return false;\n      cellSel = new CellSelection(state.doc.resolve(end));\n    }\n    const $head = nextCell(cellSel.$headCell, axis, dir);\n    if (!$head)\n      return false;\n    return maybeSetSelection(\n      state,\n      dispatch,\n      new CellSelection(cellSel.$anchorCell, $head)\n    );\n  };\n}\nfunction handleTripleClick(view, pos) {\n  const doc = view.state.doc, $cell = cellAround(doc.resolve(pos));\n  if (!$cell)\n    return false;\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n  return true;\n}\nfunction handlePaste(view, _, slice) {\n  if (!isInTable(view.state))\n    return false;\n  let cells = pastedCells(slice);\n  const sel = view.state.selection;\n  if (sel instanceof CellSelection) {\n    if (!cells)\n      cells = {\n        width: 1,\n        height: 1,\n        rows: [\n          Fragment4.from(\n            fitSlice(tableNodeTypes(view.state.schema).cell, slice)\n          )\n        ]\n      };\n    const table = sel.$anchorCell.node(-1);\n    const start = sel.$anchorCell.start(-1);\n    const rect = TableMap.get(table).rectBetween(\n      sel.$anchorCell.pos - start,\n      sel.$headCell.pos - start\n    );\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n    insertCells(view.state, view.dispatch, start, rect, cells);\n    return true;\n  } else if (cells) {\n    const $cell = selectionCell(view.state);\n    const start = $cell.start(-1);\n    insertCells(\n      view.state,\n      view.dispatch,\n      start,\n      TableMap.get($cell.node(-1)).findCell($cell.pos - start),\n      cells\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleMouseDown(view, startEvent) {\n  var _a;\n  if (startEvent.ctrlKey || startEvent.metaKey)\n    return;\n  const startDOMCell = domInCell(view, startEvent.target);\n  let $anchor;\n  if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n    setCellSelection(view.state.selection.$anchorCell, startEvent);\n    startEvent.preventDefault();\n  } else if (startEvent.shiftKey && startDOMCell && ($anchor = cellAround(view.state.selection.$anchor)) != null && ((_a = cellUnderMouse(view, startEvent)) == null ? void 0 : _a.pos) != $anchor.pos) {\n    setCellSelection($anchor, startEvent);\n    startEvent.preventDefault();\n  } else if (!startDOMCell) {\n    return;\n  }\n  function setCellSelection($anchor2, event) {\n    let $head = cellUnderMouse(view, event);\n    const starting = tableEditingKey.getState(view.state) == null;\n    if (!$head || !inSameTable($anchor2, $head)) {\n      if (starting)\n        $head = $anchor2;\n      else\n        return;\n    }\n    const selection = new CellSelection($anchor2, $head);\n    if (starting || !view.state.selection.eq(selection)) {\n      const tr = view.state.tr.setSelection(selection);\n      if (starting)\n        tr.setMeta(tableEditingKey, $anchor2.pos);\n      view.dispatch(tr);\n    }\n  }\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop);\n    view.root.removeEventListener(\"dragstart\", stop);\n    view.root.removeEventListener(\"mousemove\", move);\n    if (tableEditingKey.getState(view.state) != null)\n      view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n  }\n  function move(_event) {\n    const event = _event;\n    const anchor = tableEditingKey.getState(view.state);\n    let $anchor2;\n    if (anchor != null) {\n      $anchor2 = view.state.doc.resolve(anchor);\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      $anchor2 = cellUnderMouse(view, startEvent);\n      if (!$anchor2)\n        return stop();\n    }\n    if ($anchor2)\n      setCellSelection($anchor2, event);\n  }\n  view.root.addEventListener(\"mouseup\", stop);\n  view.root.addEventListener(\"dragstart\", stop);\n  view.root.addEventListener(\"mousemove\", move);\n}\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection3))\n    return null;\n  const { $head } = view.state.selection;\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    const parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n    if (index != (dir < 0 ? 0 : parent.childCount))\n      return null;\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      const cellPos = $head.before(d);\n      const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n      return view.endOfTextblock(dirStr) ? cellPos : null;\n    }\n  }\n  return null;\n}\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode) {\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") {\n      return dom;\n    }\n  }\n  return null;\n}\nfunction cellUnderMouse(view, event) {\n  const mousePos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (!mousePos)\n    return null;\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\n// src/columnresizing.ts\nimport { Plugin, PluginKey as PluginKey3 } from \"prosemirror-state\";\nimport {\n  Decoration as Decoration2,\n  DecorationSet as DecorationSet2\n} from \"prosemirror-view\";\n\n// src/tableview.ts\nvar TableView = class {\n  constructor(node, defaultCellMinWidth) {\n    this.node = node;\n    this.defaultCellMinWidth = defaultCellMinWidth;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"tableWrapper\";\n    this.table = this.dom.appendChild(document.createElement(\"table\"));\n    this.table.style.setProperty(\n      \"--default-cell-min-width\",\n      `${defaultCellMinWidth}px`\n    );\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"));\n    updateColumnsOnResize(node, this.colgroup, this.table, defaultCellMinWidth);\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"));\n  }\n  update(node) {\n    if (node.type != this.node.type)\n      return false;\n    this.node = node;\n    updateColumnsOnResize(\n      node,\n      this.colgroup,\n      this.table,\n      this.defaultCellMinWidth\n    );\n    return true;\n  }\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target));\n  }\n};\nfunction updateColumnsOnResize(node, colgroup, table, defaultCellMinWidth, overrideCol, overrideValue) {\n  var _a;\n  let totalWidth = 0;\n  let fixedWidth = true;\n  let nextDOM = colgroup.firstChild;\n  const row = node.firstChild;\n  if (!row)\n    return;\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    const { colspan, colwidth } = row.child(i).attrs;\n    for (let j = 0; j < colspan; j++, col++) {\n      const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n      const cssWidth = hasWidth ? hasWidth + \"px\" : \"\";\n      totalWidth += hasWidth || defaultCellMinWidth;\n      if (!hasWidth)\n        fixedWidth = false;\n      if (!nextDOM) {\n        const col2 = document.createElement(\"col\");\n        col2.style.width = cssWidth;\n        colgroup.appendChild(col2);\n      } else {\n        if (nextDOM.style.width != cssWidth) {\n          nextDOM.style.width = cssWidth;\n        }\n        nextDOM = nextDOM.nextSibling;\n      }\n    }\n  }\n  while (nextDOM) {\n    const after = nextDOM.nextSibling;\n    (_a = nextDOM.parentNode) == null ? void 0 : _a.removeChild(nextDOM);\n    nextDOM = after;\n  }\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\";\n    table.style.minWidth = \"\";\n  } else {\n    table.style.width = \"\";\n    table.style.minWidth = totalWidth + \"px\";\n  }\n}\n\n// src/columnresizing.ts\nvar columnResizingPluginKey = new PluginKey3(\n  \"tableColumnResizing\"\n);\nfunction columnResizing({\n  handleWidth = 5,\n  cellMinWidth = 25,\n  defaultCellMinWidth = 100,\n  View = TableView,\n  lastColumnResizable = true\n} = {}) {\n  const plugin = new Plugin({\n    key: columnResizingPluginKey,\n    state: {\n      init(_, state) {\n        var _a, _b;\n        const nodeViews = (_b = (_a = plugin.spec) == null ? void 0 : _a.props) == null ? void 0 : _b.nodeViews;\n        const tableName = tableNodeTypes(state.schema).table.name;\n        if (View && nodeViews) {\n          nodeViews[tableName] = (node, view) => {\n            return new View(node, defaultCellMinWidth, view);\n          };\n        }\n        return new ResizeState(-1, false);\n      },\n      apply(tr, prev) {\n        return prev.apply(tr);\n      }\n    },\n    props: {\n      attributes: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        return pluginState && pluginState.activeHandle > -1 ? { class: \"resize-cursor\" } : {};\n      },\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          handleMouseMove(view, event, handleWidth, lastColumnResizable);\n        },\n        mouseleave: (view) => {\n          handleMouseLeave(view);\n        },\n        mousedown: (view, event) => {\n          handleMouseDown2(view, event, cellMinWidth, defaultCellMinWidth);\n        }\n      },\n      decorations: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        if (pluginState && pluginState.activeHandle > -1) {\n          return handleDecorations(state, pluginState.activeHandle);\n        }\n      },\n      nodeViews: {}\n    }\n  });\n  return plugin;\n}\nvar ResizeState = class _ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle;\n    this.dragging = dragging;\n  }\n  apply(tr) {\n    const state = this;\n    const action = tr.getMeta(columnResizingPluginKey);\n    if (action && action.setHandle != null)\n      return new _ResizeState(action.setHandle, false);\n    if (action && action.setDragging !== void 0)\n      return new _ResizeState(state.activeHandle, action.setDragging);\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1);\n      if (!pointsAtCell(tr.doc.resolve(handle))) {\n        handle = -1;\n      }\n      return new _ResizeState(handle, state.dragging);\n    }\n    return state;\n  }\n};\nfunction handleMouseMove(view, event, handleWidth, lastColumnResizable) {\n  if (!view.editable)\n    return;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState)\n    return;\n  if (!pluginState.dragging) {\n    const target = domCellAround(event.target);\n    let cell = -1;\n    if (target) {\n      const { left, right } = target.getBoundingClientRect();\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\", handleWidth);\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\", handleWidth);\n    }\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        const $cell = view.state.doc.resolve(cell);\n        const table = $cell.node(-1);\n        const map = TableMap.get(table);\n        const tableStart = $cell.start(-1);\n        const col = map.colCount($cell.pos - tableStart) + $cell.nodeAfter.attrs.colspan - 1;\n        if (col == map.width - 1) {\n          return;\n        }\n      }\n      updateHandle(view, cell);\n    }\n  }\n}\nfunction handleMouseLeave(view) {\n  if (!view.editable)\n    return;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (pluginState && pluginState.activeHandle > -1 && !pluginState.dragging)\n    updateHandle(view, -1);\n}\nfunction handleMouseDown2(view, event, cellMinWidth, defaultCellMinWidth) {\n  var _a;\n  if (!view.editable)\n    return false;\n  const win = (_a = view.dom.ownerDocument.defaultView) != null ? _a : window;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState || pluginState.activeHandle == -1 || pluginState.dragging)\n    return false;\n  const cell = view.state.doc.nodeAt(pluginState.activeHandle);\n  const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, {\n      setDragging: { startX: event.clientX, startWidth: width }\n    })\n  );\n  function finish(event2) {\n    win.removeEventListener(\"mouseup\", finish);\n    win.removeEventListener(\"mousemove\", move);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (pluginState2 == null ? void 0 : pluginState2.dragging) {\n      updateColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        draggedWidth(pluginState2.dragging, event2, cellMinWidth)\n      );\n      view.dispatch(\n        view.state.tr.setMeta(columnResizingPluginKey, { setDragging: null })\n      );\n    }\n  }\n  function move(event2) {\n    if (!event2.which)\n      return finish(event2);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (!pluginState2)\n      return;\n    if (pluginState2.dragging) {\n      const dragged = draggedWidth(pluginState2.dragging, event2, cellMinWidth);\n      displayColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        dragged,\n        defaultCellMinWidth\n      );\n    }\n  }\n  displayColumnWidth(\n    view,\n    pluginState.activeHandle,\n    width,\n    defaultCellMinWidth\n  );\n  win.addEventListener(\"mouseup\", finish);\n  win.addEventListener(\"mousemove\", move);\n  event.preventDefault();\n  return true;\n}\nfunction currentColWidth(view, cellPos, { colspan, colwidth }) {\n  const width = colwidth && colwidth[colwidth.length - 1];\n  if (width)\n    return width;\n  const dom = view.domAtPos(cellPos);\n  const node = dom.node.childNodes[dom.offset];\n  let domWidth = node.offsetWidth, parts = colspan;\n  if (colwidth) {\n    for (let i = 0; i < colspan; i++)\n      if (colwidth[i]) {\n        domWidth -= colwidth[i];\n        parts--;\n      }\n  }\n  return domWidth / parts;\n}\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList && target.classList.contains(\"ProseMirror\") ? null : target.parentNode;\n  return target;\n}\nfunction edgeCell(view, event, side, handleWidth) {\n  const offset = side == \"right\" ? -handleWidth : handleWidth;\n  const found = view.posAtCoords({\n    left: event.clientX + offset,\n    top: event.clientY\n  });\n  if (!found)\n    return -1;\n  const { pos } = found;\n  const $cell = cellAround(view.state.doc.resolve(pos));\n  if (!$cell)\n    return -1;\n  if (side == \"right\")\n    return $cell.pos;\n  const map = TableMap.get($cell.node(-1)), start = $cell.start(-1);\n  const index = map.map.indexOf($cell.pos - start);\n  return index % map.width == 0 ? -1 : start + map.map[index - 1];\n}\nfunction draggedWidth(dragging, event, resizeMinWidth) {\n  const offset = event.clientX - dragging.startX;\n  return Math.max(resizeMinWidth, dragging.startWidth + offset);\n}\nfunction updateHandle(view, value) {\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, { setHandle: value })\n  );\n}\nfunction updateColumnWidth(view, cell, width) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  const tr = view.state.tr;\n  for (let row = 0; row < map.height; row++) {\n    const mapIndex = row * map.width + col;\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width])\n      continue;\n    const pos = map.map[mapIndex];\n    const attrs = table.nodeAt(pos).attrs;\n    const index = attrs.colspan == 1 ? 0 : col - map.colCount(pos);\n    if (attrs.colwidth && attrs.colwidth[index] == width)\n      continue;\n    const colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan);\n    colwidth[index] = width;\n    tr.setNodeMarkup(start + pos, null, { ...attrs, colwidth });\n  }\n  if (tr.docChanged)\n    view.dispatch(tr);\n}\nfunction displayColumnWidth(view, cell, width, defaultCellMinWidth) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), start = $cell.start(-1);\n  const col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  let dom = view.domAtPos($cell.start(-1)).node;\n  while (dom && dom.nodeName != \"TABLE\") {\n    dom = dom.parentNode;\n  }\n  if (!dom)\n    return;\n  updateColumnsOnResize(\n    table,\n    dom.firstChild,\n    dom,\n    defaultCellMinWidth,\n    col,\n    width\n  );\n}\nfunction zeroes(n) {\n  return Array(n).fill(0);\n}\nfunction handleDecorations(state, cell) {\n  var _a;\n  const decorations = [];\n  const $cell = state.doc.resolve(cell);\n  const table = $cell.node(-1);\n  if (!table) {\n    return DecorationSet2.empty;\n  }\n  const map = TableMap.get(table);\n  const start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  for (let row = 0; row < map.height; row++) {\n    const index = col + row * map.width;\n    if ((col == map.width - 1 || map.map[index] != map.map[index + 1]) && (row == 0 || map.map[index] != map.map[index - map.width])) {\n      const cellPos = map.map[index];\n      const pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1;\n      const dom = document.createElement(\"div\");\n      dom.className = \"column-resize-handle\";\n      if ((_a = columnResizingPluginKey.getState(state)) == null ? void 0 : _a.dragging) {\n        decorations.push(\n          Decoration2.node(\n            start + cellPos,\n            start + cellPos + table.nodeAt(cellPos).nodeSize,\n            {\n              class: \"column-resize-dragging\"\n            }\n          )\n        );\n      }\n      decorations.push(Decoration2.widget(pos, dom));\n    }\n  }\n  return DecorationSet2.create(state.doc, decorations);\n}\n\n// src/index.ts\nfunction tableEditing({\n  allowTableNodeSelection = false\n} = {}) {\n  return new Plugin2({\n    key: tableEditingKey,\n    // This piece of state is used to remember when a mouse-drag\n    // cell-selection is happening, so that it can continue even as\n    // transactions (which might move its anchor cell) come in.\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, cur) {\n        const set = tr.getMeta(tableEditingKey);\n        if (set != null)\n          return set == -1 ? null : set;\n        if (cur == null || !tr.docChanged)\n          return cur;\n        const { deleted, pos } = tr.mapping.mapResult(cur);\n        return deleted ? null : pos;\n      }\n    },\n    props: {\n      decorations: drawCellSelection,\n      handleDOMEvents: {\n        mousedown: handleMouseDown\n      },\n      createSelectionBetween(view) {\n        return tableEditingKey.getState(view.state) != null ? view.state.selection : null;\n      },\n      handleTripleClick,\n      handleKeyDown,\n      handlePaste\n    },\n    appendTransaction(_, oldState, state) {\n      return normalizeSelection(\n        state,\n        fixTables(state, oldState),\n        allowTableNodeSelection\n      );\n    }\n  });\n}\nexport {\n  CellBookmark,\n  CellSelection,\n  ResizeState,\n  TableMap,\n  TableView,\n  clipCells as __clipCells,\n  insertCells as __insertCells,\n  pastedCells as __pastedCells,\n  addColSpan,\n  addColumn,\n  addColumnAfter,\n  addColumnBefore,\n  addRow,\n  addRowAfter,\n  addRowBefore,\n  cellAround,\n  cellNear,\n  colCount,\n  columnIsHeader,\n  columnResizing,\n  columnResizingPluginKey,\n  deleteCellSelection,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  findCell,\n  fixTables,\n  fixTablesKey,\n  goToNextCell,\n  handlePaste,\n  inSameTable,\n  isInTable,\n  mergeCells,\n  moveCellForward,\n  nextCell,\n  pointsAtCell,\n  removeColSpan,\n  removeColumn,\n  removeRow,\n  rowIsHeader,\n  selectedRect,\n  selectionCell,\n  setCellAttr,\n  splitCell,\n  splitCellWithType,\n  tableEditing,\n  tableEditingKey,\n  tableNodeTypes,\n  tableNodes,\n  toggleHeader,\n  toggleHeaderCell,\n  toggleHeaderColumn,\n  toggleHeaderRow,\n  updateColumnsOnResize\n};\n","import { findParentNodeClosestToPos, Node, mergeAttributes, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { TextSelection } from '@tiptap/pm/state';\nimport { CellSelection, addColumnBefore, addColumnAfter, deleteColumn, addRowBefore, addRowAfter, deleteRow, deleteTable, mergeCells, splitCell, toggleHeader, toggleHeaderCell, setCellAttr, goToNextCell, fixTables, columnResizing, tableEditing } from '@tiptap/pm/tables';\n\nfunction getColStyleDeclaration(minWidth, width) {\n    if (width) {\n        // apply the stored width unless it is below the configured minimum cell width\n        return ['width', `${Math.max(width, minWidth)}px`];\n    }\n    // set the minimum with on the column if it has no stored width\n    return ['min-width', `${minWidth}px`];\n}\n\nfunction updateColumns(node, colgroup, // <colgroup> has the same prototype as <col>\ntable, cellMinWidth, overrideCol, overrideValue) {\n    var _a;\n    let totalWidth = 0;\n    let fixedWidth = true;\n    let nextDOM = colgroup.firstChild;\n    const row = node.firstChild;\n    if (row !== null) {\n        for (let i = 0, col = 0; i < row.childCount; i += 1) {\n            const { colspan, colwidth } = row.child(i).attrs;\n            for (let j = 0; j < colspan; j += 1, col += 1) {\n                const hasWidth = overrideCol === col ? overrideValue : (colwidth && colwidth[j]);\n                const cssWidth = hasWidth ? `${hasWidth}px` : '';\n                totalWidth += hasWidth || cellMinWidth;\n                if (!hasWidth) {\n                    fixedWidth = false;\n                }\n                if (!nextDOM) {\n                    const colElement = document.createElement('col');\n                    const [propertyKey, propertyValue] = getColStyleDeclaration(cellMinWidth, hasWidth);\n                    colElement.style.setProperty(propertyKey, propertyValue);\n                    colgroup.appendChild(colElement);\n                }\n                else {\n                    if (nextDOM.style.width !== cssWidth) {\n                        const [propertyKey, propertyValue] = getColStyleDeclaration(cellMinWidth, hasWidth);\n                        nextDOM.style.setProperty(propertyKey, propertyValue);\n                    }\n                    nextDOM = nextDOM.nextSibling;\n                }\n            }\n        }\n    }\n    while (nextDOM) {\n        const after = nextDOM.nextSibling;\n        (_a = nextDOM.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(nextDOM);\n        nextDOM = after;\n    }\n    if (fixedWidth) {\n        table.style.width = `${totalWidth}px`;\n        table.style.minWidth = '';\n    }\n    else {\n        table.style.width = '';\n        table.style.minWidth = `${totalWidth}px`;\n    }\n}\nclass TableView {\n    constructor(node, cellMinWidth) {\n        this.node = node;\n        this.cellMinWidth = cellMinWidth;\n        this.dom = document.createElement('div');\n        this.dom.className = 'tableWrapper';\n        this.table = this.dom.appendChild(document.createElement('table'));\n        this.colgroup = this.table.appendChild(document.createElement('colgroup'));\n        updateColumns(node, this.colgroup, this.table, cellMinWidth);\n        this.contentDOM = this.table.appendChild(document.createElement('tbody'));\n    }\n    update(node) {\n        if (node.type !== this.node.type) {\n            return false;\n        }\n        this.node = node;\n        updateColumns(node, this.colgroup, this.table, this.cellMinWidth);\n        return true;\n    }\n    ignoreMutation(mutation) {\n        return (mutation.type === 'attributes'\n            && (mutation.target === this.table || this.colgroup.contains(mutation.target)));\n    }\n}\n\nfunction createColGroup(node, cellMinWidth, overrideCol, overrideValue) {\n    let totalWidth = 0;\n    let fixedWidth = true;\n    const cols = [];\n    const row = node.firstChild;\n    if (!row) {\n        return {};\n    }\n    for (let i = 0, col = 0; i < row.childCount; i += 1) {\n        const { colspan, colwidth } = row.child(i).attrs;\n        for (let j = 0; j < colspan; j += 1, col += 1) {\n            const hasWidth = overrideCol === col ? overrideValue : colwidth && colwidth[j];\n            totalWidth += hasWidth || cellMinWidth;\n            if (!hasWidth) {\n                fixedWidth = false;\n            }\n            const [property, value] = getColStyleDeclaration(cellMinWidth, hasWidth);\n            cols.push([\n                'col',\n                { style: `${property}: ${value}` },\n            ]);\n        }\n    }\n    const tableWidth = fixedWidth ? `${totalWidth}px` : '';\n    const tableMinWidth = fixedWidth ? '' : `${totalWidth}px`;\n    const colgroup = ['colgroup', {}, ...cols];\n    return { colgroup, tableWidth, tableMinWidth };\n}\n\nfunction createCell(cellType, cellContent) {\n    if (cellContent) {\n        return cellType.createChecked(null, cellContent);\n    }\n    return cellType.createAndFill();\n}\n\nfunction getTableNodeTypes(schema) {\n    if (schema.cached.tableNodeTypes) {\n        return schema.cached.tableNodeTypes;\n    }\n    const roles = {};\n    Object.keys(schema.nodes).forEach(type => {\n        const nodeType = schema.nodes[type];\n        if (nodeType.spec.tableRole) {\n            roles[nodeType.spec.tableRole] = nodeType;\n        }\n    });\n    schema.cached.tableNodeTypes = roles;\n    return roles;\n}\n\nfunction createTable(schema, rowsCount, colsCount, withHeaderRow, cellContent) {\n    const types = getTableNodeTypes(schema);\n    const headerCells = [];\n    const cells = [];\n    for (let index = 0; index < colsCount; index += 1) {\n        const cell = createCell(types.cell, cellContent);\n        if (cell) {\n            cells.push(cell);\n        }\n        if (withHeaderRow) {\n            const headerCell = createCell(types.header_cell, cellContent);\n            if (headerCell) {\n                headerCells.push(headerCell);\n            }\n        }\n    }\n    const rows = [];\n    for (let index = 0; index < rowsCount; index += 1) {\n        rows.push(types.row.createChecked(null, withHeaderRow && index === 0 ? headerCells : cells));\n    }\n    return types.table.createChecked(null, rows);\n}\n\nfunction isCellSelection(value) {\n    return value instanceof CellSelection;\n}\n\nconst deleteTableWhenAllCellsSelected = ({ editor }) => {\n    const { selection } = editor.state;\n    if (!isCellSelection(selection)) {\n        return false;\n    }\n    let cellCount = 0;\n    const table = findParentNodeClosestToPos(selection.ranges[0].$from, node => {\n        return node.type.name === 'table';\n    });\n    table === null || table === void 0 ? void 0 : table.node.descendants(node => {\n        if (node.type.name === 'table') {\n            return false;\n        }\n        if (['tableCell', 'tableHeader'].includes(node.type.name)) {\n            cellCount += 1;\n        }\n    });\n    const allCellsSelected = cellCount === selection.ranges.length;\n    if (!allCellsSelected) {\n        return false;\n    }\n    editor.commands.deleteTable();\n    return true;\n};\n\n/**\n * This extension allows you to create tables.\n * @see https://www.tiptap.dev/api/nodes/table\n */\nconst Table = Node.create({\n    name: 'table',\n    // @ts-ignore\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n            resizable: false,\n            handleWidth: 5,\n            cellMinWidth: 25,\n            // TODO: fix\n            View: TableView,\n            lastColumnResizable: true,\n            allowTableNodeSelection: false,\n        };\n    },\n    content: 'tableRow+',\n    tableRole: 'table',\n    isolating: true,\n    group: 'block',\n    parseHTML() {\n        return [{ tag: 'table' }];\n    },\n    renderHTML({ node, HTMLAttributes }) {\n        const { colgroup, tableWidth, tableMinWidth } = createColGroup(node, this.options.cellMinWidth);\n        const table = [\n            'table',\n            mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n                style: tableWidth\n                    ? `width: ${tableWidth}`\n                    : `min-width: ${tableMinWidth}`,\n            }),\n            colgroup,\n            ['tbody', 0],\n        ];\n        return table;\n    },\n    addCommands() {\n        return {\n            insertTable: ({ rows = 3, cols = 3, withHeaderRow = true } = {}) => ({ tr, dispatch, editor }) => {\n                const node = createTable(editor.schema, rows, cols, withHeaderRow);\n                if (dispatch) {\n                    const offset = tr.selection.from + 1;\n                    tr.replaceSelectionWith(node)\n                        .scrollIntoView()\n                        .setSelection(TextSelection.near(tr.doc.resolve(offset)));\n                }\n                return true;\n            },\n            addColumnBefore: () => ({ state, dispatch }) => {\n                return addColumnBefore(state, dispatch);\n            },\n            addColumnAfter: () => ({ state, dispatch }) => {\n                return addColumnAfter(state, dispatch);\n            },\n            deleteColumn: () => ({ state, dispatch }) => {\n                return deleteColumn(state, dispatch);\n            },\n            addRowBefore: () => ({ state, dispatch }) => {\n                return addRowBefore(state, dispatch);\n            },\n            addRowAfter: () => ({ state, dispatch }) => {\n                return addRowAfter(state, dispatch);\n            },\n            deleteRow: () => ({ state, dispatch }) => {\n                return deleteRow(state, dispatch);\n            },\n            deleteTable: () => ({ state, dispatch }) => {\n                return deleteTable(state, dispatch);\n            },\n            mergeCells: () => ({ state, dispatch }) => {\n                return mergeCells(state, dispatch);\n            },\n            splitCell: () => ({ state, dispatch }) => {\n                return splitCell(state, dispatch);\n            },\n            toggleHeaderColumn: () => ({ state, dispatch }) => {\n                return toggleHeader('column')(state, dispatch);\n            },\n            toggleHeaderRow: () => ({ state, dispatch }) => {\n                return toggleHeader('row')(state, dispatch);\n            },\n            toggleHeaderCell: () => ({ state, dispatch }) => {\n                return toggleHeaderCell(state, dispatch);\n            },\n            mergeOrSplit: () => ({ state, dispatch }) => {\n                if (mergeCells(state, dispatch)) {\n                    return true;\n                }\n                return splitCell(state, dispatch);\n            },\n            setCellAttribute: (name, value) => ({ state, dispatch }) => {\n                return setCellAttr(name, value)(state, dispatch);\n            },\n            goToNextCell: () => ({ state, dispatch }) => {\n                return goToNextCell(1)(state, dispatch);\n            },\n            goToPreviousCell: () => ({ state, dispatch }) => {\n                return goToNextCell(-1)(state, dispatch);\n            },\n            fixTables: () => ({ state, dispatch }) => {\n                if (dispatch) {\n                    fixTables(state);\n                }\n                return true;\n            },\n            setCellSelection: position => ({ tr, dispatch }) => {\n                if (dispatch) {\n                    const selection = CellSelection.create(tr.doc, position.anchorCell, position.headCell);\n                    // @ts-ignore\n                    tr.setSelection(selection);\n                }\n                return true;\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            Tab: () => {\n                if (this.editor.commands.goToNextCell()) {\n                    return true;\n                }\n                if (!this.editor.can().addRowAfter()) {\n                    return false;\n                }\n                return this.editor.chain().addRowAfter().goToNextCell().run();\n            },\n            'Shift-Tab': () => this.editor.commands.goToPreviousCell(),\n            Backspace: deleteTableWhenAllCellsSelected,\n            'Mod-Backspace': deleteTableWhenAllCellsSelected,\n            Delete: deleteTableWhenAllCellsSelected,\n            'Mod-Delete': deleteTableWhenAllCellsSelected,\n        };\n    },\n    addProseMirrorPlugins() {\n        const isResizable = this.options.resizable && this.editor.isEditable;\n        return [\n            ...(isResizable\n                ? [\n                    columnResizing({\n                        handleWidth: this.options.handleWidth,\n                        cellMinWidth: this.options.cellMinWidth,\n                        defaultCellMinWidth: this.options.cellMinWidth,\n                        View: this.options.View,\n                        lastColumnResizable: this.options.lastColumnResizable,\n                    }),\n                ]\n                : []),\n            tableEditing({\n                allowTableNodeSelection: this.options.allowTableNodeSelection,\n            }),\n        ];\n    },\n    extendNodeSchema(extension) {\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n        };\n        return {\n            tableRole: callOrReturn(getExtensionField(extension, 'tableRole', context)),\n        };\n    },\n});\n\nexport { Table, createColGroup, createTable, Table as default };\n//# sourceMappingURL=index.js.map\n","import { Node as ProseMirrorNode } from \"@tiptap/pm/model\";\nimport { Table as TiptapTable } from \"@tiptap/extension-table\";\n\nexport const Table = TiptapTable.extend({\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      style: {\n        default: \"width: 100%;\",\n      },\n    };\n  },\n\n  addOptions() {\n    const options = this.parent?.();\n    if (options) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).View = class extends (options.View as any) {\n        update(node: ProseMirrorNode) {\n          super.update(node);\n          this.table.style.cssText = node.attrs.style;\n          return true;\n        }\n      };\n    }\n    return options;\n  },\n\n  // FIXME: renderHTML with customized attributes\n  renderHTML({ HTMLAttributes }) {\n    return [\"table\", HTMLAttributes, 0];\n  },\n});\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create table cells.\n * @see https://www.tiptap.dev/api/nodes/table-cell\n */\nconst TableCell = Node.create({\n    name: 'tableCell',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    content: 'block+',\n    addAttributes() {\n        return {\n            colspan: {\n                default: 1,\n            },\n            rowspan: {\n                default: 1,\n            },\n            colwidth: {\n                default: null,\n                parseHTML: element => {\n                    const colwidth = element.getAttribute('colwidth');\n                    const value = colwidth\n                        ? colwidth.split(',').map(width => parseInt(width, 10))\n                        : null;\n                    return value;\n                },\n            },\n        };\n    },\n    tableRole: 'cell',\n    isolating: true,\n    parseHTML() {\n        return [\n            { tag: 'td' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['td', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n});\n\nexport { TableCell, TableCell as default };\n//# sourceMappingURL=index.js.map\n","import { mergeAttributes } from \"@tiptap/core\";\nimport { TableCell as TiptapTableCell } from \"@tiptap/extension-table-cell\";\n\nexport const TableCell = TiptapTableCell.extend({\n  content: \"inline*\",\n\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      style: {\n        default: \"\",\n      },\n    };\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { colspan, rowspan, style, ...attrs } = HTMLAttributes;\n    return [\n      \"td\",\n      mergeAttributes(attrs, {\n        colspan: colspan === 1 ? undefined : colspan,\n        rowspan: rowspan === 1 ? undefined : rowspan,\n        style: style === \"\" ? undefined : style,\n      }),\n      0,\n    ];\n  },\n});\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create table headers.\n * @see https://www.tiptap.dev/api/nodes/table-header\n */\nconst TableHeader = Node.create({\n    name: 'tableHeader',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    content: 'block+',\n    addAttributes() {\n        return {\n            colspan: {\n                default: 1,\n            },\n            rowspan: {\n                default: 1,\n            },\n            colwidth: {\n                default: null,\n                parseHTML: element => {\n                    const colwidth = element.getAttribute('colwidth');\n                    const value = colwidth\n                        ? colwidth.split(',').map(width => parseInt(width, 10))\n                        : null;\n                    return value;\n                },\n            },\n        };\n    },\n    tableRole: 'header_cell',\n    isolating: true,\n    parseHTML() {\n        return [\n            { tag: 'th' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['th', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n});\n\nexport { TableHeader, TableHeader as default };\n//# sourceMappingURL=index.js.map\n","import { mergeAttributes } from \"@tiptap/core\";\nimport { TableHeader as TiptapTableHeader } from \"@tiptap/extension-table-header\";\n\nexport const TableHeader = TiptapTableHeader.extend({\n  content: \"inline*\",\n\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      scope: {\n        default: \"\",\n      },\n      style: {\n        default: \"\",\n      },\n    };\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { colspan, rowspan, scope, style, ...attrs } = HTMLAttributes;\n    return [\n      \"th\",\n      mergeAttributes(attrs, {\n        colspan: colspan === 1 ? undefined : colspan,\n        rowspan: rowspan === 1 ? undefined : rowspan,\n        scope: scope === \"\" ? undefined : scope,\n        style: style === \"\" ? undefined : style,\n      }),\n      0,\n    ];\n  },\n});\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create table rows.\n * @see https://www.tiptap.dev/api/nodes/table-row\n */\nconst TableRow = Node.create({\n    name: 'tableRow',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    content: '(tableCell | tableHeader)*',\n    tableRole: 'row',\n    parseHTML() {\n        return [\n            { tag: 'tr' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['tr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n});\n\nexport { TableRow, TableRow as default };\n//# sourceMappingURL=index.js.map\n","import { Command, Extension } from \"@tiptap/core\";\nimport { AllSelection, TextSelection, Transaction } from \"prosemirror-state\";\n\nexport interface IndentOptions {\n  types: string[];\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    indent: {\n      indent: () => ReturnType;\n      outdent: () => ReturnType;\n    };\n  }\n}\n\nexport const Indent = Extension.create<IndentOptions>({\n  name: \"indent\",\n\n  addOptions() {\n    return {\n      types: [\"listItem\", \"paragraph\"],\n    };\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          \"data-mt-indent\": {\n            default: null,\n            renderHTML: ({ \"data-mt-indent\": indent }) =>\n              indent && indent !== \"0\"\n                ? {\n                    style: `padding-left: ${indent * 80}px`,\n                  }\n                : {},\n            parseHTML: (element) => Number(element.getAttribute(\"data-mt-indent\")),\n          },\n        },\n      },\n    ];\n  },\n\n  addCommands() {\n    const setNodeIndentMarkup = (tr: Transaction, pos: number, delta: number): Transaction => {\n      const node = tr?.doc?.nodeAt(pos);\n\n      if (node) {\n        let { \"data-mt-indent\": indent, ...attrs } = node.attrs;\n        indent = (indent || 0) + delta;\n        if (indent > 0) {\n          attrs = { ...attrs, \"data-mt-indent\": indent };\n        }\n        return tr.setNodeMarkup(pos, node.type, attrs, node.marks);\n      }\n      return tr;\n    };\n\n    const updateIndentLevel = (tr: Transaction, delta: number): Transaction => {\n      const { doc, selection } = tr;\n\n      if (\n        doc &&\n        selection &&\n        (selection instanceof TextSelection || selection instanceof AllSelection)\n      ) {\n        const { from, to } = selection;\n        doc.nodesBetween(from, to, (node, pos) => {\n          if (this.options.types.includes(node.type.name)) {\n            tr = setNodeIndentMarkup(tr, pos, delta);\n            return false;\n          }\n\n          return true;\n        });\n      }\n\n      return tr;\n    };\n    const applyIndent: (direction: number) => () => Command =\n      (direction) =>\n      () =>\n      ({ tr, state, dispatch }) => {\n        const { selection } = state;\n        tr = tr.setSelection(selection);\n        tr = updateIndentLevel(tr, direction);\n\n        if (tr.docChanged) {\n          dispatch?.(tr);\n          return true;\n        }\n\n        return false;\n      };\n\n    return {\n      indent: applyIndent(1),\n      outdent: applyIndent(-1),\n    };\n  },\n});\n","import { Node, mergeAttributes } from \"@tiptap/core\";\n\nexport interface DivOptions {\n  HTMLAttributes: Record<string, unknown>;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    div: {\n      setDiv: () => ReturnType;\n      unsetDiv: () => ReturnType;\n      setMain: () => ReturnType;\n      unsetMain: () => ReturnType;\n      setArticle: () => ReturnType;\n      unsetArticle: () => ReturnType;\n    };\n  }\n}\n\nexport const Div = Node.create<DivOptions>({\n  name: \"div\",\n\n  priority: 1000,\n\n  group: \"block\",\n\n  content: \"block+\",\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: \"div\" },\n      { tag: \"main\" },\n      { tag: \"article\" },\n      { tag: \"section\" },\n      { tag: \"aside\" },\n      { tag: \"nav\" },\n      { tag: \"header\" },\n      { tag: \"footer\" },\n      { tag: \"figure\" },\n      { tag: \"details\" },\n      { tag: \"dialog\" },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes, node }) {\n    const tag = node.attrs[\"data-tag\"] || \"div\";\n    return [\n      tag,\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n        \"data-tag\": undefined,\n      }),\n      0,\n    ];\n  },\n\n  addAttributes() {\n    return {\n      \"data-tag\": {\n        default: \"div\",\n        parseHTML: (element) => element.tagName.toLowerCase(),\n      },\n    };\n  },\n});\n","import { Mark } from \"@tiptap/core\";\n\nexport const Span = Mark.create({\n  name: \"span\",\n  priority: 1000,\n  content: \"inline*\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n      },\n    ];\n  },\n  renderHTML({ HTMLAttributes }) {\n    return [\"span\", HTMLAttributes, 0];\n  },\n});\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches bold text via `**` as input.\n */\nconst starInputRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))$/;\n/**\n * Matches bold text via `**` while pasting.\n */\nconst starPasteRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))/g;\n/**\n * Matches bold text via `__` as input.\n */\nconst underscoreInputRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))$/;\n/**\n * Matches bold text via `__` while pasting.\n */\nconst underscorePasteRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))/g;\n/**\n * This extension allows you to mark text as bold.\n * @see https://tiptap.dev/api/marks/bold\n */\nconst Bold = Mark.create({\n    name: 'bold',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'strong',\n            },\n            {\n                tag: 'b',\n                getAttrs: node => node.style.fontWeight !== 'normal' && null,\n            },\n            {\n                style: 'font-weight=400',\n                clearMark: mark => mark.type.name === this.name,\n            },\n            {\n                style: 'font-weight',\n                getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setBold: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleBold: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetBold: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-b': () => this.editor.commands.toggleBold(),\n            'Mod-B': () => this.editor.commands.toggleBold(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: starInputRegex,\n                type: this.type,\n            }),\n            markInputRule({\n                find: underscoreInputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: starPasteRegex,\n                type: this.type,\n            }),\n            markPasteRule({\n                find: underscorePasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Bold, Bold as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Bold as TiptapBold } from \"@tiptap/extension-bold\";\n\nexport const Bold = TiptapBold.extend({\n  priority: 1000,\n  content: \"inline*\",\n});\n","import { Node, mergeAttributes } from \"@tiptap/core\";\n\nexport interface BlockLinkOptions {\n  HTMLAttributes: Record<string, unknown>;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    blockLink: {\n      setBlockLink: (attributes?: {\n        href?: string;\n        \"data-mt-rich-text-editor-block\"?: string;\n      }) => ReturnType;\n      unsetBlockLink: () => ReturnType;\n    };\n  }\n}\n\nexport const BlockLink = Node.create<BlockLinkOptions>({\n  name: \"blockLink\",\n  priority: 1000,\n  group: \"block\",\n  content: \"block+\",\n  defining: true,\n\n  addAttributes() {\n    return {\n      HTMLAttributes: {\n        default: {},\n        parseHTML: (element) => {\n          const attrs: Record<string, string> = {};\n          Array.from(element.attributes).forEach((attr) => {\n            attrs[attr.name] = attr.value;\n          });\n          return attrs;\n        },\n        renderHTML: (attributes) => attributes.HTMLAttributes,\n      },\n      \"data-mt-rich-text-editor-block\": {\n        default: null,\n        renderHTML: () => null,\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"a[data-mt-rich-text-editor-block]\",\n        getAttrs: (element) => {\n          if (!(element instanceof HTMLElement)) {\n            return false;\n          }\n\n          return {\n            href: element.getAttribute(\"href\"),\n            \"data-mt-rich-text-editor-block\": element.getAttribute(\n              \"data-mt-rich-text-editor-block\"\n            ),\n          };\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { href } = HTMLAttributes;\n    return [\"a\", mergeAttributes(this.options.HTMLAttributes, { href }), 0];\n  },\n\n  addCommands() {\n    return {\n      setBlockLink:\n        (attributes = {}) =>\n        ({ commands }) => {\n          return commands.wrapIn(this.name, attributes);\n        },\n      unsetBlockLink:\n        () =>\n        ({ commands }) => {\n          return commands.lift(this.name);\n        },\n    };\n  },\n});\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4w0s2x0a2z0ure5ba0by2idu3namex4d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dad1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp3ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token = null) {\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly = false) {\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\nconst ASCIINUMERICAL = 'ASCIINUMERICAL'; // contains a-z, 0-9\nconst ALPHANUMERICAL = 'ALPHANUMERICAL'; // contains numbers and letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\nconst FULLWIDTHMIDDLEDOT = 'FULLWIDTHMIDDLEDOT'; // ・\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tASCIINUMERICAL: ASCIINUMERICAL,\n\tALPHANUMERICAL: ALPHANUMERICAL,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tFULLWIDTHMIDDLEDOT: FULLWIDTHMIDDLEDOT,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst CR = '\\r'; // carriage-return character\nconst LF = '\\n'; // line-feed character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\nconst OBJECT_REPLACEMENT = '\\ufffc'; // whitespace placeholder that sometimes appears in rich text editors\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes = []) {\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  tt(Start, '・', FULLWIDTHMIDDLEDOT);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n  const Asciinumeric = tr(Num, ASCII_LETTER, ASCIINUMERICAL, {\n    [asciinumeric]: true\n  });\n  const Alphanumeric = tr(Num, LETTER, ALPHANUMERICAL, {\n    [alphanumeric]: true\n  });\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, DIGIT, Asciinumeric);\n  tr(Word, ASCII_LETTER, Word);\n  tr(Asciinumeric, DIGIT, Asciinumeric);\n  tr(Asciinumeric, ASCII_LETTER, Asciinumeric);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, DIGIT, Alphanumeric);\n  tr(UWord, LETTER, UWord);\n  tr(Alphanumeric, DIGIT, Alphanumeric);\n  tr(Alphanumeric, ASCII_LETTER); // Non-accepting\n  tr(Alphanumeric, LETTER, Alphanumeric); // Non-accepting\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Nl = tt(Start, LF, NL, {\n    [whitespace]: true\n  });\n  const Cr = tt(Start, CR, WS, {\n    [whitespace]: true\n  });\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, OBJECT_REPLACEMENT, Ws);\n  tt(Cr, LF, Nl); // \\r\\n\n  tt(Cr, OBJECT_REPLACEMENT, Ws);\n  tr(Cr, SPACE, Ws);\n  tt(Ws, CR); // non-accepting state to avoid mixing whitespaces\n  tt(Ws, LF); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n  tt(Ws, OBJECT_REPLACEMENT, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tt(Emoji, '#'); // no transition, emoji regex seems to match #\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tt(EmojiJoiner, '#');\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word], [DIGIT, Asciinumeric]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord], [DIGIT, Alphanumeric]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender = null) {\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n   */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol = defaults.defaultProtocol) {\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme = defaults.defaultProtocol) {\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1({\n  groups\n}) {\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [COLON, COMMA, DOT, EXCLAMATION, PERCENT, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  tt(EmailDomainHyphen, HYPHEN, EmailDomainHyphen);\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  tt(DomainHyphen, HYPHEN, DomainHyphen);\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  tt(SchemeColon, QUERY, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n  return INIT;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} scheme\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash = false) {\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n  return INIT;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\ntokenize.scan = run$1; // for testing\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type = null, opts = null) {\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type = null) {\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, multi as text, tokenize };\n","import { combineTransactionSteps, getChangedRanges, findChildrenInRange, getMarksBetween, getAttributes, Mark, mergeAttributes, markPasteRule } from '@tiptap/core';\nimport { tokenize, find, registerCustomProtocol, reset } from 'linkifyjs';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\n\n/**\n * Check if the provided tokens form a valid link structure, which can either be a single link token\n * or a link token surrounded by parentheses or square brackets.\n *\n * This ensures that only complete and valid text is hyperlinked, preventing cases where a valid\n * top-level domain (TLD) is immediately followed by an invalid character, like a number. For\n * example, with the `find` method from Linkify, entering `example.com1` would result in\n * `example.com` being linked and the trailing `1` left as plain text. By using the `tokenize`\n * method, we can perform more comprehensive validation on the input text.\n */\nfunction isValidLinkStructure(tokens) {\n    if (tokens.length === 1) {\n        return tokens[0].isLink;\n    }\n    if (tokens.length === 3 && tokens[1].isLink) {\n        return ['()', '[]'].includes(tokens[0].value + tokens[2].value);\n    }\n    return false;\n}\n/**\n * This plugin allows you to automatically add links to your editor.\n * @param options The plugin options\n * @returns The plugin instance\n */\nfunction autolink(options) {\n    return new Plugin({\n        key: new PluginKey('autolink'),\n        appendTransaction: (transactions, oldState, newState) => {\n            /**\n             * Does the transaction change the document?\n             */\n            const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc);\n            /**\n             * Prevent autolink if the transaction is not a document change or if the transaction has the meta `preventAutolink`.\n             */\n            const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'));\n            /**\n             * Prevent autolink if the transaction is not a document change\n             * or if the transaction has the meta `preventAutolink`.\n             */\n            if (!docChanges || preventAutolink) {\n                return;\n            }\n            const { tr } = newState;\n            const transform = combineTransactionSteps(oldState.doc, [...transactions]);\n            const changes = getChangedRanges(transform);\n            changes.forEach(({ newRange }) => {\n                // Now let’s see if we can add new links.\n                const nodesInChangedRanges = findChildrenInRange(newState.doc, newRange, node => node.isTextblock);\n                let textBlock;\n                let textBeforeWhitespace;\n                if (nodesInChangedRanges.length > 1) {\n                    // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter).\n                    textBlock = nodesInChangedRanges[0];\n                    textBeforeWhitespace = newState.doc.textBetween(textBlock.pos, textBlock.pos + textBlock.node.nodeSize, undefined, ' ');\n                }\n                else if (nodesInChangedRanges.length\n                    // We want to make sure to include the block seperator argument to treat hard breaks like spaces.\n                    && newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ').endsWith(' ')) {\n                    textBlock = nodesInChangedRanges[0];\n                    textBeforeWhitespace = newState.doc.textBetween(textBlock.pos, newRange.to, undefined, ' ');\n                }\n                if (textBlock && textBeforeWhitespace) {\n                    const wordsBeforeWhitespace = textBeforeWhitespace.split(' ').filter(s => s !== '');\n                    if (wordsBeforeWhitespace.length <= 0) {\n                        return false;\n                    }\n                    const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1];\n                    const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace);\n                    if (!lastWordBeforeSpace) {\n                        return false;\n                    }\n                    const linksBeforeSpace = tokenize(lastWordBeforeSpace).map(t => t.toObject(options.defaultProtocol));\n                    if (!isValidLinkStructure(linksBeforeSpace)) {\n                        return false;\n                    }\n                    linksBeforeSpace\n                        .filter(link => link.isLink)\n                        // Calculate link position.\n                        .map(link => ({\n                        ...link,\n                        from: lastWordAndBlockOffset + link.start + 1,\n                        to: lastWordAndBlockOffset + link.end + 1,\n                    }))\n                        // ignore link inside code mark\n                        .filter(link => {\n                        if (!newState.schema.marks.code) {\n                            return true;\n                        }\n                        return !newState.doc.rangeHasMark(link.from, link.to, newState.schema.marks.code);\n                    })\n                        // validate link\n                        .filter(link => options.validate(link.value))\n                        // check whether should autolink\n                        .filter(link => options.shouldAutoLink(link.value))\n                        // Add link mark.\n                        .forEach(link => {\n                        if (getMarksBetween(link.from, link.to, newState.doc).some(item => item.mark.type === options.type)) {\n                            return;\n                        }\n                        tr.addMark(link.from, link.to, options.type.create({\n                            href: link.href,\n                        }));\n                    });\n                }\n            });\n            if (!tr.steps.length) {\n                return;\n            }\n            return tr;\n        },\n    });\n}\n\nfunction clickHandler(options) {\n    return new Plugin({\n        key: new PluginKey('handleClickLink'),\n        props: {\n            handleClick: (view, pos, event) => {\n                var _a, _b;\n                if (event.button !== 0) {\n                    return false;\n                }\n                if (!view.editable) {\n                    return false;\n                }\n                let a = event.target;\n                const els = [];\n                while (a.nodeName !== 'DIV') {\n                    els.push(a);\n                    a = a.parentNode;\n                }\n                if (!els.find(value => value.nodeName === 'A')) {\n                    return false;\n                }\n                const attrs = getAttributes(view.state, options.type.name);\n                const link = event.target;\n                const href = (_a = link === null || link === void 0 ? void 0 : link.href) !== null && _a !== void 0 ? _a : attrs.href;\n                const target = (_b = link === null || link === void 0 ? void 0 : link.target) !== null && _b !== void 0 ? _b : attrs.target;\n                if (link && href) {\n                    window.open(href, target);\n                    return true;\n                }\n                return false;\n            },\n        },\n    });\n}\n\nfunction pasteHandler(options) {\n    return new Plugin({\n        key: new PluginKey('handlePasteLink'),\n        props: {\n            handlePaste: (view, event, slice) => {\n                const { state } = view;\n                const { selection } = state;\n                const { empty } = selection;\n                if (empty) {\n                    return false;\n                }\n                let textContent = '';\n                slice.content.forEach(node => {\n                    textContent += node.textContent;\n                });\n                const link = find(textContent, { defaultProtocol: options.defaultProtocol }).find(item => item.isLink && item.value === textContent);\n                if (!textContent || !link) {\n                    return false;\n                }\n                return options.editor.commands.setMark(options.type, {\n                    href: link.href,\n                });\n            },\n        },\n    });\n}\n\nconst pasteRegex = /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z]{2,}\\b(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)/gi;\n// From DOMPurify\n// https://github.com/cure53/DOMPurify/blob/main/src/regexp.js\n// eslint-disable-next-line no-control-regex\nconst ATTR_WHITESPACE = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g;\nfunction isAllowedUri(uri, protocols) {\n    const allowedProtocols = [\n        'http',\n        'https',\n        'ftp',\n        'ftps',\n        'mailto',\n        'tel',\n        'callto',\n        'sms',\n        'cid',\n        'xmpp',\n    ];\n    if (protocols) {\n        protocols.forEach(protocol => {\n            const nextProtocol = typeof protocol === 'string' ? protocol : protocol.scheme;\n            if (nextProtocol) {\n                allowedProtocols.push(nextProtocol);\n            }\n        });\n    }\n    return (!uri\n        || uri\n            .replace(ATTR_WHITESPACE, '')\n            .match(new RegExp(\n        // eslint-disable-next-line no-useless-escape\n        `^(?:(?:${allowedProtocols.join('|')}):|[^a-z]|[a-z0-9+.\\-]+(?:[^a-z+.\\-:]|$))`, 'i')));\n}\n/**\n * This extension allows you to create links.\n * @see https://www.tiptap.dev/api/marks/link\n */\nconst Link = Mark.create({\n    name: 'link',\n    priority: 1000,\n    keepOnSplit: false,\n    exitable: true,\n    onCreate() {\n        if (this.options.validate && !this.options.shouldAutoLink) {\n            // Copy the validate function to the shouldAutoLink option\n            this.options.shouldAutoLink = this.options.validate;\n            console.warn('The `validate` option is deprecated. Rename to the `shouldAutoLink` option instead.');\n        }\n        this.options.protocols.forEach(protocol => {\n            if (typeof protocol === 'string') {\n                registerCustomProtocol(protocol);\n                return;\n            }\n            registerCustomProtocol(protocol.scheme, protocol.optionalSlashes);\n        });\n    },\n    onDestroy() {\n        reset();\n    },\n    inclusive() {\n        return this.options.autolink;\n    },\n    addOptions() {\n        return {\n            openOnClick: true,\n            linkOnPaste: true,\n            autolink: true,\n            protocols: [],\n            defaultProtocol: 'http',\n            HTMLAttributes: {\n                target: '_blank',\n                rel: 'noopener noreferrer nofollow',\n                class: null,\n            },\n            isAllowedUri: (url, ctx) => !!isAllowedUri(url, ctx.protocols),\n            validate: url => !!url,\n            shouldAutoLink: url => !!url,\n        };\n    },\n    addAttributes() {\n        return {\n            href: {\n                default: null,\n                parseHTML(element) {\n                    return element.getAttribute('href');\n                },\n            },\n            target: {\n                default: this.options.HTMLAttributes.target,\n            },\n            rel: {\n                default: this.options.HTMLAttributes.rel,\n            },\n            class: {\n                default: this.options.HTMLAttributes.class,\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'a[href]',\n                getAttrs: dom => {\n                    const href = dom.getAttribute('href');\n                    // prevent XSS attacks\n                    if (!href\n                        || !this.options.isAllowedUri(href, {\n                            defaultValidate: url => !!isAllowedUri(url, this.options.protocols),\n                            protocols: this.options.protocols,\n                            defaultProtocol: this.options.defaultProtocol,\n                        })) {\n                        return false;\n                    }\n                    return null;\n                },\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        // prevent XSS attacks\n        if (!this.options.isAllowedUri(HTMLAttributes.href, {\n            defaultValidate: href => !!isAllowedUri(href, this.options.protocols),\n            protocols: this.options.protocols,\n            defaultProtocol: this.options.defaultProtocol,\n        })) {\n            // strip out the href\n            return [\n                'a',\n                mergeAttributes(this.options.HTMLAttributes, { ...HTMLAttributes, href: '' }),\n                0,\n            ];\n        }\n        return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setLink: attributes => ({ chain }) => {\n                const { href } = attributes;\n                if (!this.options.isAllowedUri(href, {\n                    defaultValidate: url => !!isAllowedUri(url, this.options.protocols),\n                    protocols: this.options.protocols,\n                    defaultProtocol: this.options.defaultProtocol,\n                })) {\n                    return false;\n                }\n                return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run();\n            },\n            toggleLink: attributes => ({ chain }) => {\n                const { href } = attributes;\n                if (!this.options.isAllowedUri(href, {\n                    defaultValidate: url => !!isAllowedUri(url, this.options.protocols),\n                    protocols: this.options.protocols,\n                    defaultProtocol: this.options.defaultProtocol,\n                })) {\n                    return false;\n                }\n                return chain()\n                    .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\n                    .setMeta('preventAutolink', true)\n                    .run();\n            },\n            unsetLink: () => ({ chain }) => {\n                return chain()\n                    .unsetMark(this.name, { extendEmptyMarkRange: true })\n                    .setMeta('preventAutolink', true)\n                    .run();\n            },\n        };\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: text => {\n                    const foundLinks = [];\n                    if (text) {\n                        const { protocols, defaultProtocol } = this.options;\n                        const links = find(text).filter(item => item.isLink\n                            && this.options.isAllowedUri(item.value, {\n                                defaultValidate: href => !!isAllowedUri(href, protocols),\n                                protocols,\n                                defaultProtocol,\n                            }));\n                        if (links.length) {\n                            links.forEach(link => foundLinks.push({\n                                text: link.value,\n                                data: {\n                                    href: link.href,\n                                },\n                                index: link.start,\n                            }));\n                        }\n                    }\n                    return foundLinks;\n                },\n                type: this.type,\n                getAttributes: match => {\n                    var _a;\n                    return {\n                        href: (_a = match.data) === null || _a === void 0 ? void 0 : _a.href,\n                    };\n                },\n            }),\n        ];\n    },\n    addProseMirrorPlugins() {\n        const plugins = [];\n        const { protocols, defaultProtocol } = this.options;\n        if (this.options.autolink) {\n            plugins.push(autolink({\n                type: this.type,\n                defaultProtocol: this.options.defaultProtocol,\n                validate: url => this.options.isAllowedUri(url, {\n                    defaultValidate: href => !!isAllowedUri(href, protocols),\n                    protocols,\n                    defaultProtocol,\n                }),\n                shouldAutoLink: this.options.shouldAutoLink,\n            }));\n        }\n        if (this.options.openOnClick === true) {\n            plugins.push(clickHandler({\n                type: this.type,\n            }));\n        }\n        if (this.options.linkOnPaste) {\n            plugins.push(pasteHandler({\n                editor: this.editor,\n                defaultProtocol: this.options.defaultProtocol,\n                type: this.type,\n            }));\n        }\n        return plugins;\n    },\n});\n\nexport { Link, Link as default, isAllowedUri, pasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Link } from \"@tiptap/extension-link\";\n\ninterface InlineLinkOptions {\n  shortcutHandler?: () => void;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands {\n    inlineLink: {\n      setInlineLinkShortcutHandler: (handler: () => void) => boolean;\n    };\n  }\n}\n\nexport const InlineLink = Link.extend<InlineLinkOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      shortcutHandler: undefined,\n    };\n  },\n\n  addAttributes() {\n    return {\n      href: {\n        default: null,\n        parseHTML(element) {\n          return element.getAttribute(\"href\");\n        },\n      },\n      target: {\n        default: null,\n      },\n      title: {\n        default: null,\n      },\n      rel: {\n        default: null,\n      },\n      class: {\n        default: null,\n      },\n      \"data-inline\": {\n        default: \"true\",\n        renderHTML: () => null,\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"a:not([data-mt-rich-text-editor-block])\",\n        getAttrs: (element) => {\n          if (!(element instanceof HTMLElement)) {\n            return false;\n          }\n\n          const attrs: Record<string, string> = {};\n          Array.from(element.attributes).forEach((attr) => {\n            attrs[attr.name] = attr.value;\n          });\n\n          return {\n            HTMLAttributes: attrs,\n            \"data-inline\": element.getAttribute(\"data-inline\"),\n          };\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { HTMLAttributes: attrs = {}, ...rest } = HTMLAttributes;\n    return [\"a\", { ...attrs, ...rest, \"data-inline\": undefined }, 0];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-k\": () => {\n        this.options.shortcutHandler?.();\n        return true;\n      },\n    };\n  },\n\n  addCommands() {\n    return {\n      ...this.parent?.(),\n      setInlineLinkShortcutHandler: (handler: () => void) =>\n        (() => {\n          this.options.shortcutHandler = handler;\n          // FIXME: fix type error\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }) as any,\n    };\n  },\n});\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create paragraphs.\n * @see https://www.tiptap.dev/api/nodes/paragraph\n */\nconst Paragraph = Node.create({\n    name: 'paragraph',\n    priority: 1000,\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    group: 'block',\n    content: 'inline*',\n    parseHTML() {\n        return [\n            { tag: 'p' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setParagraph: () => ({ commands }) => {\n                return commands.setNode(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n        };\n    },\n});\n\nexport { Paragraph, Paragraph as default };\n//# sourceMappingURL=index.js.map\n","import { Paragraph as TiptapParagraph } from \"@tiptap/extension-paragraph\";\nimport { mergeAttributes } from \"@tiptap/core\";\n\nexport interface ParagraphOptions {\n  HTMLAttributes: Record<string, unknown>;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    paragraph: {\n      setParagraph: () => ReturnType;\n    };\n  }\n}\n\n// export const Paragraph = TiptapParagraph;\nexport const Paragraph = TiptapParagraph.extend<ParagraphOptions>({\n  name: \"paragraph\",\n  priority: 1000,\n  group: \"block\",\n  content: \"inline*\",\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    };\n  },\n\n  parseHTML() {\n    return [{ tag: \"p\" }];\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { MTRichTextEditorHTMLAttributes, textAlign, ...rest } = node.attrs;\n    return [\"p\", mergeAttributes(this.options.HTMLAttributes, rest, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setParagraph:\n        () =>\n        ({ commands }) => {\n          return commands.setNode(this.name);\n        },\n    };\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport const TextBlock = Node.create({\n  name: \"textBlock\",\n  group: \"block\",\n  content: \"inline*\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"mt-text-block\",\n        getAttrs: (node) => {\n          if (!(node instanceof HTMLElement)) {\n            return false;\n          }\n          return {};\n        },\n      },\n    ];\n  },\n\n  renderHTML() {\n    return [\"mt-text-block\", 0];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: ({ editor }) => {\n        if (!editor.isActive(this.name)) {\n          return false;\n        }\n\n        const { state } = editor;\n        const { selection } = state;\n        const { $from } = selection;\n\n        const parentNode = $from.node(-1);\n        if (!parentNode) return false;\n\n        const pos = $from.after(-1);\n        const currentNodeContent = $from.parent.content.cut($from.parentOffset).toJSON();\n\n        // FIXME: splitListItem('listItem') ?\n        const tr = editor\n          .chain()\n          .insertContentAt(pos, {\n            type: parentNode.type.name,\n            content: [\n              {\n                type: this.name,\n                content: currentNodeContent,\n              },\n            ],\n          })\n          .deleteRange({ from: $from.pos, to: $from.after() });\n\n        const result = tr.run();\n        if (!result) return false;\n\n        const resolvedPos = editor.state.doc.resolve(pos + 1);\n        const textBlockPos = resolvedPos.start();\n\n        editor.chain().setTextSelection(textBlockPos).focus().run();\n\n        return true;\n      },\n    };\n  },\n\n  addStorage() {\n    return {\n      originalText: \"\",\n    };\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport interface PreOptions {\n  HTMLAttributes: Record<string, unknown>;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    pre: {\n      setPre: () => ReturnType;\n      unsetPre: () => ReturnType;\n    };\n  }\n}\n\nexport const Pre = Node.create<PreOptions>({\n  name: \"pre\",\n  priority: 1000,\n  group: \"block\",\n  content: \"inline*|text*\",\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: \"pre\",\n        preserveWhitespace: \"full\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"pre\", HTMLAttributes, 0];\n  },\n\n  addCommands() {\n    return {\n      setPre:\n        () =>\n        ({ commands }) => {\n          return commands.setNode(this.name);\n        },\n      unsetPre:\n        () =>\n        ({ commands }) => {\n          return commands.setNode(\"paragraph\");\n        },\n    };\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport const Code = Node.create({\n  name: \"code\",\n  priority: 1000,\n  group: \"inline\",\n  inline: true,\n  content: \"text*\",\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: \"code\",\n        preserveWhitespace: \"full\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"code\", HTMLAttributes, 0];\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport const DescriptionList = Node.create({\n  name: \"descriptionList\",\n  priority: 1000,\n  group: \"block\",\n  content: \"(descriptionTerm|descriptionDetails)+\",\n  defining: true,\n\n  parseHTML() {\n    return [{ tag: \"dl\" }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"dl\", HTMLAttributes, 0];\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport const DescriptionTerm = Node.create({\n  name: \"descriptionTerm\",\n  priority: 1000,\n  group: \"block\",\n  content: \"(textBlock|paragraph) block*\",\n  defining: true,\n\n  parseHTML() {\n    return [{ tag: \"dt\" }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"dt\", HTMLAttributes, 0];\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport const DescriptionDetails = Node.create({\n  name: \"descriptionDetails\",\n  priority: 1000,\n  group: \"block\",\n  content: \"(textBlock|paragraph) block*\",\n  defining: true,\n\n  parseHTML() {\n    return [{ tag: \"dd\" }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"dd\", HTMLAttributes, 0];\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport const Summary = Node.create({\n  name: \"summary\",\n  priority: 1000,\n  group: \"block\",\n  content: \"inline*\",\n  defining: true,\n\n  parseHTML() {\n    return [{ tag: \"summary\" }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"summary\", HTMLAttributes, 0];\n  },\n});\n","import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create list items.\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nconst ListItem = Node.create({\n    name: 'listItem',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n            bulletListTypeName: 'bulletList',\n            orderedListTypeName: 'orderedList',\n        };\n    },\n    content: 'paragraph block*',\n    defining: true,\n    parseHTML() {\n        return [\n            {\n                tag: 'li',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addKeyboardShortcuts() {\n        return {\n            Enter: () => this.editor.commands.splitListItem(this.name),\n            Tab: () => this.editor.commands.sinkListItem(this.name),\n            'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n        };\n    },\n});\n\nexport { ListItem, ListItem as default };\n//# sourceMappingURL=index.js.map\n","import { ListItem as TiptapListItem } from \"@tiptap/extension-list-item\";\nimport { mergeAttributes } from \"@tiptap/core\";\n\nexport const ListItem = TiptapListItem.extend({\n  name: \"listItem\",\n  priority: 1000,\n  content: \"(textBlock|block)*\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"li\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"li\", mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n});\n","import \"@tiptap/extension-text-style\";\n\nimport { Extension } from \"@tiptap/core\";\n\nexport type BackgroundColorOptions = {\n  /**\n   * The types where the color can be applied\n   * @default ['textStyle']\n   * @example ['heading', 'paragraph']\n   */\n  types: string[];\n};\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    backgroundColor: {\n      /**\n       * Set the text color\n       * @param color The color to set\n       * @example editor.commands.setColor('red')\n       */\n      setBackgroundColor: (color: string) => ReturnType;\n\n      /**\n       * Unset the text color\n       * @example editor.commands.unsetColor()\n       */\n      unsetBackgroundColor: () => ReturnType;\n    };\n  }\n}\n\n/**\n * This extension allows you to color your text.\n * @see https://tiptap.dev/api/extensions/color\n */\nexport const BackgroundColor = Extension.create<BackgroundColorOptions>({\n  name: \"backgroundColor\",\n\n  addOptions() {\n    return {\n      types: [\"textStyle\"],\n    };\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          backgroundColor: {\n            default: null,\n            parseHTML: (element) => element.style.backgroundColor?.replace(/['\"]+/g, \"\"),\n            renderHTML: (attributes) => {\n              if (!attributes.backgroundColor) {\n                return {};\n              }\n\n              return {\n                style: `background-color: ${attributes.backgroundColor}`,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n\n  addCommands() {\n    return {\n      setBackgroundColor:\n        (backgroundColor) =>\n        ({ chain }) => {\n          return chain().setMark(\"textStyle\", { backgroundColor }).run();\n        },\n      unsetBackgroundColor:\n        () =>\n        ({ chain }) => {\n          return chain()\n            .setMark(\"textStyle\", { backgroundColor: null })\n            .removeEmptyTextStyle()\n            .run();\n        },\n    };\n  },\n});\n","import { Node } from \"@tiptap/core\";\n\nexport const Script = Node.create({\n  name: \"script\",\n\n  group: \"inline\",\n  content: \"text*\",\n  inline: true,\n  atom: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: \"mt-rich-text-editor-script\",\n        preserveWhitespace: \"full\",\n      },\n    ];\n  },\n\n  addNodeView() {\n    const allowedOrigins = [\"https://gist.github.com\"];\n\n    // return ({ editor, node, getPos, HTMLAttributes, decorations, extension }) => {\n    return ({ node }) => {\n      const dom = document.createElement(\"div\");\n      dom.classList.add(\"mt-rich-text-editor-script\");\n\n      const attributes = node.attrs.MTRichTextEditorHTMLAttributes || {};\n\n      dom.dataset.mtRichTextEditorScriptTitle =\n        `<script ` +\n        Object.entries(attributes)\n          .map(([key, value]) => `${key}=\"${value}\"`)\n          .join(\" \") +\n        `/>`;\n\n      const src = attributes.src;\n      const srcOrigin =\n        src &&\n        (() => {\n          try {\n            return new URL(src).origin;\n          } catch {\n            return undefined;\n          }\n        })();\n\n      if (srcOrigin && allowedOrigins.some((origin) => srcOrigin === origin)) {\n        dom.classList.add(\"mt-rich-text-editor-script--preview\");\n\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.border = \"none\";\n\n        const html = `\n          <!DOCTYPE html>\n          <html>\n            <head>\n              <style>\n                html, body {\n                  margin: 0;\n                  padding: 0;\n                  overflow: hidden;\n                }\n                ::-webkit-scrollbar {\n                  display: none;\n                }\n              </style>\n              <script>\n                const resizeObserver = new ResizeObserver((entries) => {\n                  const height = document.body.scrollHeight;\n                  window.frameElement.style.height = \\`\\${height}px\\`;\n                });\n\n                window.addEventListener('load', () => {\n                  resizeObserver.observe(document.body);\n                });\n\n                const events = ['mousedown', 'mouseup', 'click', 'dblclick', 'contextmenu', 'mousemove'];\n                events.forEach(eventName => {\n                  document.addEventListener(eventName, (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    window.frameElement.click();\n                  }, true);\n                });\n              </script>\n              <script src=\"${src}\"></script>\n            </head>\n            <body></body>\n          </html>\n        `;\n        iframe.srcdoc = html;\n        dom.appendChild(iframe);\n\n        return {\n          dom,\n        };\n      }\n\n      dom.innerText = node.content.content\n        .map((content) => content.text)\n        .join(\"\")\n        .replace(/^\\n/, \"\")\n        .replace(/\\s+$/, \"\");\n\n      return {\n        dom,\n      };\n    };\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"mt-rich-text-editor-script\", HTMLAttributes, 0];\n  },\n});\n","import { Node, mergeAttributes } from \"@tiptap/core\";\n\ninterface EmbedData {\n  url: string;\n  maxwidth?: number;\n  maxheight?: number;\n}\n\nexport interface EmbedObjectOptions {\n  HTMLAttributes: Record<string, unknown>;\n  resolver: (params: EmbedData) => Promise<{ html: string }>;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands {\n    embedObject: {\n      getEmbedObject: (attributes: EmbedData) => Promise<{ html: string; inline?: string }>;\n      insertEmbedObject: (html: string) => void;\n    };\n  }\n}\n\nexport const EmbedObject = Node.create<EmbedObjectOptions>({\n  name: \"embedObject\",\n  priority: 1000,\n  group: \"block\",\n  content: \"block*\",\n  defining: true,\n\n  addAttributes() {\n    return {\n      \"data-mt-rich-text-editor-block\": {\n        default: null,\n        renderHTML: () => null,\n      },\n      content: {\n        default: null,\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"mt-rich-text-editor-embed-object\",\n        getAttrs: (element) => {\n          if (!(element instanceof HTMLElement)) {\n            return false;\n          }\n\n          return {\n            href: element.getAttribute(\"href\"),\n            \"data-mt-rich-text-editor-block\": element.getAttribute(\n              \"data-mt-rich-text-editor-block\"\n            ),\n            content: element.getAttribute(\"data-mt-rich-text-editor-content\") || element.innerHTML,\n          };\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"mt-rich-text-editor-embed-object\",\n      mergeAttributes(this.options.HTMLAttributes, {\n        \"data-mt-rich-text-editor-content\": HTMLAttributes.content,\n      }),\n      0,\n    ];\n  },\n\n  addNodeView() {\n    return ({ node }) => {\n      const iframe = document.createElement(\"iframe\");\n      iframe.setAttribute(\"frameborder\", \"0\");\n      iframe.setAttribute(\"allowfullscreen\", \"true\");\n      iframe.style.width = \"100%\";\n\n      const html = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <style>\n            html, body {\n              margin: 0;\n              padding: 0;\n              overflow: hidden;\n            }\n            ::-webkit-scrollbar {\n              display: none;\n            }\n          </style>\n          <script>\n            const resizeObserver = new ResizeObserver((entries) => {\n              const height = document.body.scrollHeight;\n              const width = document.body.scrollWidth;\n              window.frameElement.style.height = \\`\\${height}px\\`;\n              window.frameElement.style.width = \\`\\${width}px\\`;\n            });\n            \n            window.addEventListener('load', () => {\n              resizeObserver.observe(document.body);\n            });\n\n            const events = ['mousedown', 'mouseup', 'click', 'dblclick', 'contextmenu', 'mousemove'];\n            events.forEach(eventName => {\n              document.addEventListener(eventName, (e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                window.frameElement.click();\n              }, true);\n            });\n          </script>\n        </head>\n        <body>\n          ${node.attrs.content}\n        </body>\n      </html>\n    `;\n\n      iframe.srcdoc = html;\n\n      return {\n        dom: iframe,\n        update: () => {\n          // // Update iframe content when node changes\n          // const content = node.content.content[0]?.content?.toString() || ''\n\n          // iframe.contentDocument?.open()\n          // iframe.contentDocument?.write(content)\n          // iframe.contentDocument?.close()\n\n          return true;\n        },\n      };\n    };\n  },\n\n  addCommands() {\n    return {\n      getEmbedObject: (embedData: EmbedData) =>\n        (() => {\n          return this.options.resolver(embedData);\n        }) as unknown as Promise<{ html: string; inline?: string }>,\n      insertEmbedObject: (html: string) => {\n        const { state } = this.editor;\n        const pos = state.selection.$anchor.pos;\n\n        // Insert the embed object\n        this.editor.commands.insertContent({\n          type: this.name,\n          attrs: {\n            content: html,\n          },\n        });\n\n        // Move cursor after the inserted node\n        this.editor.commands.setTextSelection(pos + 2);\n\n        return true;\n      },\n    };\n  },\n});\n","import { Extension } from \"@tiptap/core\";\n\ninterface MarkdownData {\n  content: string;\n}\n\nexport interface MarkdownOptions {\n  HTMLAttributes: Record<string, unknown>;\n  toHtml: (data: MarkdownData) => Promise<{ content: string }>;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands {\n    markdown: {\n      isMarkdownConversionAvailable: () => boolean;\n      markdownToHtml: (data: MarkdownData) => Promise<{ content: string }>;\n    };\n  }\n}\n\nexport const Markdown = Extension.create<MarkdownOptions>({\n  name: \"markdown\",\n  addCommands() {\n    return {\n      // FIXME: fix type error\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      isMarkdownConversionAvailable: () => (() => !!this.options.toHtml) as any,\n      // FIXME: fix type error\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      markdownToHtml: (data: MarkdownData) => (() => this.options.toHtml(data)) as any,\n    };\n  },\n});\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(maps) {\n    let result = [];\n    for (let i = maps.length - 1; i >= 0 && result.length == 0; i--)\n        maps[i].forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return null;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    return pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist });\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\nfunction buildCommand(redo, scroll) {\n    return (state, dispatch) => {\n        let hist = historyKey.getState(state);\n        if (!hist || (redo ? hist.undone : hist.done).eventCount == 0)\n            return false;\n        if (dispatch) {\n            let tr = histTransaction(hist, state, redo);\n            if (tr)\n                dispatch(scroll ? tr.scrollIntoView() : tr);\n        }\n        return true;\n    };\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = buildCommand(false, true);\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = buildCommand(true, true);\n/**\nA command function that undoes the last change. Don't scroll the\nselection into view.\n*/\nconst undoNoScroll = buildCommand(false, false);\n/**\nA command function that redoes the last undone change. Don't\nscroll the selection into view.\n*/\nconst redoNoScroll = buildCommand(true, false);\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, redoNoScroll, undo, undoDepth, undoNoScroll };\n","import { Extension } from '@tiptap/core';\nimport { undo, redo, history } from '@tiptap/pm/history';\n\n/**\n * This extension allows you to undo and redo recent changes.\n * @see https://www.tiptap.dev/api/extensions/history\n *\n * **Important**: If the `@tiptap/extension-collaboration` package is used, make sure to remove\n * the `history` extension, as it is not compatible with the `collaboration` extension.\n *\n * `@tiptap/extension-collaboration` uses its own history implementation.\n */\nconst History = Extension.create({\n    name: 'history',\n    addOptions() {\n        return {\n            depth: 100,\n            newGroupDelay: 500,\n        };\n    },\n    addCommands() {\n        return {\n            undo: () => ({ state, dispatch }) => {\n                return undo(state, dispatch);\n            },\n            redo: () => ({ state, dispatch }) => {\n                return redo(state, dispatch);\n            },\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            history(this.options),\n        ];\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-z': () => this.editor.commands.undo(),\n            'Shift-Mod-z': () => this.editor.commands.redo(),\n            'Mod-y': () => this.editor.commands.redo(),\n            // Russian keyboard layouts\n            'Mod-я': () => this.editor.commands.undo(),\n            'Shift-Mod-я': () => this.editor.commands.redo(),\n        };\n    },\n});\n\nexport { History, History as default };\n//# sourceMappingURL=index.js.map\n","import {\n  History as TiptapHistory,\n  HistoryOptions as TiptapHistoryOptions,\n} from \"@tiptap/extension-history\";\n\nexport interface HistoryOptions extends TiptapHistoryOptions {\n  registerShortcuts?: boolean;\n}\n\nexport const History = TiptapHistory.extend<HistoryOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      registerShortcuts: true,\n    };\n  },\n\n  addKeyboardShortcuts() {\n    if (this.options.registerShortcuts) {\n      return this.parent?.() ?? {};\n    } else {\n      return {};\n    }\n  },\n});\n","import { Extension } from \"@tiptap/core\";\n\nconst eventAttrNames = new Set([\n  \"onabortonblur\",\n  \"oncancel\",\n  \"oncanplay\",\n  \"oncanplaythrough\",\n  \"onchange\",\n  \"onclick\",\n  \"onclose\",\n  \"oncontextmenu\",\n  \"oncuechange\",\n  \"ondblclick\",\n  \"ondrag\",\n  \"ondragend\",\n  \"ondragenter\",\n  \"ondragleave\",\n  \"ondragover\",\n  \"ondragstart\",\n  \"ondrop\",\n  \"ondurationchange\",\n  \"onemptied\",\n  \"onended\",\n  \"onerror\",\n  \"onfocus\",\n  \"oninput\",\n  \"oninvalid\",\n  \"onkeydown\",\n  \"onkeypress\",\n  \"onkeyup\",\n  \"onload\",\n  \"onloadeddata\",\n  \"onloadedmetadata\",\n  \"onloadstart\",\n  \"onmousedown\",\n  \"onmousemove\",\n  \"onmouseout\",\n  \"onmouseover\",\n  \"onmouseup\",\n  \"onmousewheel\",\n  \"onpause\",\n  \"onplay\",\n  \"onplaying\",\n  \"onprogress\",\n  \"onratechange\",\n  \"onreset\",\n  \"onscroll\",\n  \"onseeked\",\n  \"onseeking\",\n  \"onseeking\",\n  \"onselect\",\n  \"onshow\",\n  \"onstalled\",\n  \"onsubmit\",\n  \"onsuspend\",\n  \"ontimeupdate\",\n  \"onvolumechange\",\n  \"onwaiting\",\n  \"formaction\",\n  \"action\",\n]);\n\nexport const Global = Extension.create({\n  name: \"mt-rich-text-editor-global\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\n          \"div\",\n          \"pre\",\n          \"code\",\n          \"blockquote\",\n          \"bulletList\",\n          \"document\",\n          \"embedObject\",\n          \"hardBreak\",\n          \"heading\",\n          \"horizontalRule\",\n          \"iframe\",\n          \"image\",\n          \"inlineLink\",\n          \"listItem\",\n          \"orderedList\",\n          \"paragraph\",\n          \"span\",\n          \"textStyle\",\n          \"script\",\n          \"table\",\n          \"tableRow\",\n          \"tableCell\",\n          \"tableHeader\",\n          \"link\",\n          \"blockLink\",\n          \"descriptionList\",\n          \"descriptionTerm\",\n          \"descriptionDetails\",\n        ],\n        attributes: {\n          MTRichTextEditorHTMLAttributes: {\n            default: {},\n            parseHTML: (element: HTMLElement) => {\n              const attrs: Record<string, string> = {};\n              const eventAttrs: Record<string, string> = {};\n              for (const attr of element.attributes) {\n                if (/^data-mt-rich-text-editor-/.test(attr.name)) {\n                  continue;\n                }\n                if (eventAttrNames.has(attr.name.toLowerCase())) {\n                  eventAttrs[attr.name] = attr.value;\n                } else {\n                  attrs[attr.name] = attr.value;\n                }\n              }\n\n              if (Object.keys(eventAttrs).length > 0) {\n                attrs[\"data-mt-rich-text-editor-event-attributes\"] = JSON.stringify(eventAttrs);\n              }\n              return attrs;\n            },\n            renderHTML: (attributes) => attributes.MTRichTextEditorHTMLAttributes,\n          },\n        },\n      },\n    ];\n  },\n});\n","import { Node, mergeAttributes, InputRule } from \"@tiptap/core\";\n\nwindow.customElements.define(\n  \"mt-rich-text-editor-mt-function-tag\",\n  class extends HTMLElement {\n    connectedCallback() {\n      this.style.color = \"#9333ea\";\n      this.style.fontFamily = \"monospace\";\n\n      const ignoreAttributes = [\"data-tag-name\", \"contenteditable\", \"style\", \"class\"];\n\n      const tagName = this.getAttribute(\"data-tag-name\");\n      if (!tagName) {\n        return;\n      }\n\n      let attributesStr = \"\";\n      Array.from(this.attributes)\n        .filter((attr) => !ignoreAttributes.includes(attr.name))\n        .forEach((attr) => {\n          attributesStr += ` ${attr.name}=\"${attr.value}\"`;\n        });\n\n      this.textContent = `<mt:${tagName}${attributesStr}>`;\n    }\n  }\n);\n\nexport const MTTag = Node.create({\n  name: \"mt-rich-text-editor-mt-function-tag\",\n\n  group: \"inline\",\n  inline: true,\n  atom: true,\n\n  addAttributes() {\n    return {\n      \"data-tag-name\": {\n        default: null,\n      },\n      HTMLAttributes: {\n        default: {},\n        parseHTML: (element) => {\n          const attrs: Record<string, string> = {};\n          const ignoreAttributes = [\"data-tag-name\", \"contenteditable\", \"style\", \"class\"];\n\n          Array.from(element.attributes)\n            .filter((attr) => !ignoreAttributes.includes(attr.name))\n            .forEach((attr) => {\n              attrs[attr.name] = attr.value;\n            });\n\n          return attrs;\n        },\n        renderHTML: (attributes) => attributes.HTMLAttributes,\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      new InputRule({\n        find: /<\\$?mt:?(var|include)([^>]*)\\$?>$/i,\n        handler: ({ state, range, match }) => {\n          const parser = new DOMParser();\n          const element = parser.parseFromString(\n            match[0].replace(/^<\\$/, \"<\").replace(/\\$>$/, \">\"),\n            \"text/html\"\n          ).body.firstChild as HTMLElement;\n\n          const attrs: {\n            \"data-tag-name\": string;\n            HTMLAttributes: Record<string, string>;\n          } = {\n            \"data-tag-name\": match[1],\n            HTMLAttributes: {},\n          };\n\n          for (const attr of element.attributes) {\n            if (attr.name !== \"data-tag-name\") {\n              attrs.HTMLAttributes[attr.name] = attr.value;\n            }\n          }\n\n          const node = this.type.create(attrs);\n          state.tr.replaceWith(range.from, range.to, node);\n        },\n      }),\n    ];\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"mt-rich-text-editor-mt-function-tag\",\n        getAttrs: (node: HTMLElement) => {\n          if (!(node instanceof HTMLElement)) {\n            return {};\n          }\n          return {\n            \"data-tag-name\": node.getAttribute(\"data-tag-name\"),\n            ...Object.fromEntries(\n              Array.from(node.attributes)\n                .filter((attr) => attr.name !== \"data-tag-name\")\n                .map((attr) => [attr.name, attr.value])\n            ),\n          };\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"mt-rich-text-editor-mt-function-tag\", mergeAttributes(HTMLAttributes)];\n  },\n});\n","import { Extension } from \"@tiptap/core\";\n\nimport { Global } from \"./movable-type/global\";\nimport { MTTag } from \"./movable-type/mt-tag\";\n\nexport const MovableType = Extension.create({\n  name: \"mt-rich-text-editor-group\",\n\n  addExtensions() {\n    return [Global, MTTag];\n  },\n});\n","import { Extension as TiptapExtension } from \"@tiptap/core\";\n\n// core\nimport { Document } from \"@tiptap/extension-document\";\nimport { Text } from \"@tiptap/extension-text\";\nimport { Subscript } from \"@tiptap/extension-subscript\";\nimport { Superscript } from \"@tiptap/extension-superscript\";\nimport { Image } from \"@tiptap/extension-image\";\nimport { HardBreak } from \"@tiptap/extension-hard-break\";\nimport { Italic } from \"@tiptap/extension-italic\";\nimport { Underline } from \"@tiptap/extension-underline\";\nimport { Blockquote } from \"@tiptap/extension-blockquote\";\nimport { BulletList } from \"@tiptap/extension-bullet-list\";\nimport { Heading } from \"@tiptap/extension-heading\";\nimport { HorizontalRule } from \"@tiptap/extension-horizontal-rule\";\nimport { OrderedList } from \"@tiptap/extension-ordered-list\";\nimport { Strike } from \"@tiptap/extension-strike\";\nimport { Dropcursor } from \"@tiptap/extension-dropcursor\";\nimport { Gapcursor } from \"@tiptap/extension-gapcursor\";\nimport { TextAlign } from \"@tiptap/extension-text-align\";\nimport { Color } from \"@tiptap/extension-color\";\nimport TextStyle from \"@tiptap/extension-text-style\";\n\n// experiments\nimport Iframe from \"./extension/experiments/iframe\";\n\n// table\nimport { Table } from \"./extension/table\";\nimport { TableCell } from \"./extension/table-cell\";\nimport { TableHeader } from \"./extension/table-header\";\nimport { TableRow } from \"@tiptap/extension-table-row\";\n\n// custom\nimport { Indent } from \"./extension/indent\";\nimport { Div } from \"./extension/div\";\nimport { Span } from \"./extension/span\";\nimport { Bold } from \"./extension/bold\";\nimport { BlockLink } from \"./extension/block-link\";\nimport { InlineLink } from \"./extension/inline-link\";\nimport { Paragraph } from \"./extension/paragraph\";\nimport { TextBlock } from \"./extension/text-block\";\nimport { Pre } from \"./extension/pre\";\nimport { Code } from \"./extension/code\";\nimport { DescriptionList } from \"./extension/description-list\";\nimport { DescriptionTerm } from \"./extension/description-term\";\nimport { DescriptionDetails } from \"./extension/description-details\";\nimport { Summary } from \"./extension/summary\";\nimport { ListItem } from \"./extension/list-item\";\nimport { BackgroundColor } from \"./extension/background-color\";\nimport { Script } from \"./extension/script\";\nimport { EmbedObject } from \"./extension/embed-object\";\nimport { Markdown } from \"./extension/markdown\";\nimport { History } from \"./extension/history\";\nimport { MovableType } from \"./extension/movable-type\";\n\nconst defaultLinkOptions = {\n  openOnClick: false,\n};\n\nexport const Extension = TiptapExtension.create({\n  name: \"mt-rich-text-editor\",\n\n  addExtensions() {\n    const extensions = [];\n\n    if (this.options.movableType !== false) {\n      extensions.push(MovableType.configure(this.options?.movableType));\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options?.history));\n    }\n\n    // core\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options?.document));\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options?.text));\n    }\n\n    if (this.options.subscript !== false) {\n      extensions.push(Subscript.configure(this.options?.subscript));\n    }\n\n    if (this.options.superscript !== false) {\n      extensions.push(Superscript.configure(this.options?.superscript));\n    }\n\n    if (this.options.image !== false) {\n      extensions.push(\n        Image.configure(\n          this.options?.image ?? {\n            inline: true,\n            allowBase64: true,\n          }\n        )\n      );\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options?.hardBreak));\n    }\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options?.bold));\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options?.italic));\n    }\n\n    if (this.options.underline !== false) {\n      extensions.push(Underline.configure(this.options?.underline));\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options?.strike));\n    }\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options?.blockquote));\n    }\n\n    if (this.options.table !== false) {\n      extensions.push(\n        Table.configure(\n          this.options?.table ?? {\n            resizable: true,\n          }\n        )\n      );\n    }\n\n    if (this.options.tableRow !== false) {\n      extensions.push(TableRow.configure(this.options?.tableRow));\n    }\n\n    if (this.options.tableHeader !== false) {\n      extensions.push(TableHeader.configure(this.options?.tableHeader));\n    }\n\n    if (this.options.tableCell !== false) {\n      extensions.push(TableCell.configure(this.options?.tableCell));\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options?.bulletList));\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options?.heading));\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options?.horizontalRule));\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options?.orderedList));\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options?.dropcursor));\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options?.gapcursor));\n    }\n\n    if (this.options.textAlign !== false) {\n      extensions.push(\n        TextAlign.configure(\n          this.options?.textAlign ?? {\n            types: [\"heading\", \"paragraph\"],\n            defaultAlignment: \"\",\n          }\n        )\n      );\n    }\n\n    if (this.options.color !== false) {\n      extensions.push(Color.configure(this.options?.color));\n    }\n\n    if (this.options.textStyle !== false) {\n      extensions.push(TextStyle.configure(this.options?.textStyle));\n    }\n\n    // experiments\n    if (this.options.iframe !== false) {\n      extensions.push(Iframe.configure(this.options?.iframe));\n    }\n\n    // custom\n    if (this.options.indent !== false) {\n      extensions.push(Indent.configure(this.options?.indent));\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options?.paragraph));\n    }\n\n    if (this.options.textBlock !== false) {\n      extensions.push(TextBlock.configure(this.options?.textBlock));\n    }\n\n    if (this.options.pre !== false) {\n      extensions.push(Pre.configure(this.options?.pre));\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options?.code));\n    }\n\n    if (this.options.descriptionList !== false) {\n      extensions.push(DescriptionList.configure(this.options?.descriptionList));\n    }\n\n    if (this.options.descriptionTerm !== false) {\n      extensions.push(DescriptionTerm.configure(this.options?.descriptionTerm));\n    }\n\n    if (this.options.descriptionDetails !== false) {\n      extensions.push(DescriptionDetails.configure(this.options?.descriptionDetails));\n    }\n\n    if (this.options.summary !== false) {\n      extensions.push(Summary.configure(this.options?.summary));\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options?.listItem));\n    }\n\n    if (this.options.div !== false) {\n      extensions.push(Div.configure(this.options?.div));\n    }\n\n    if (this.options.span !== false) {\n      extensions.push(Span.configure(this.options?.span));\n    }\n\n    if (this.options.inlineLink !== false) {\n      extensions.push(InlineLink.configure(this.options?.inlineLink ?? defaultLinkOptions));\n    }\n\n    if (this.options.blockLink !== false) {\n      extensions.push(BlockLink.configure(this.options?.blockLink ?? defaultLinkOptions));\n    }\n\n    if (this.options.backgroundColor !== false) {\n      extensions.push(BackgroundColor.configure(this.options?.backgroundColor));\n    }\n\n    if (this.options.script !== false) {\n      extensions.push(Script.configure(this.options?.script));\n    }\n\n    if (this.options.embedObject !== false) {\n      extensions.push(EmbedObject.configure(this.options?.embedObject));\n    }\n\n    if (this.options.markdown !== false) {\n      extensions.push(Markdown.configure(this.options?.markdown));\n    }\n\n    return extensions;\n  },\n});\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node) => void, flag?: boolean) => void) => void} fn\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, fn, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (/** @type {(anchor: Node) => void} */ fn, flag = true) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction } from '../../runtime.js';\nimport { DEV } from 'esm-env';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\tblock(() => {\n\t\tvar collection = get_collection();\n\n\t\tvar array = is_array(collection)\n\t\t\t? collection\n\t\t\t: collection == null\n\t\t\t\t? []\n\t\t\t\t: array_from(collection);\n\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\tvar effect = /** @type {Effect} */ (active_reaction);\n\t\t\treconcile(\n\t\t\t\tarray,\n\t\t\t\tstate,\n\t\t\t\tanchor,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\t(effect.f & INERT) !== 0,\n\t\t\t\tget_key,\n\t\t\t\tget_collection\n\t\t\t);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget_collection();\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>) => void} render_fn\n * @param {number} flags\n * @param {boolean} is_inert\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, is_inert, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, HYDRATION_ERROR } from '../../../../constants.js';\nimport { block, branch, destroy_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport { hash, sanitize_location } from '../../../../utils.js';\nimport { DEV } from 'esm-env';\nimport { dev_current_component_function } from '../../runtime.js';\nimport { get_first_child, get_next_sibling } from '../operations.js';\n\n/**\n * @param {Element} element\n * @param {string | null} server_hash\n * @param {string} value\n */\nfunction check_hash(element, server_hash, value) {\n\tif (!server_hash || server_hash === hash(String(value ?? ''))) return;\n\n\tlet location;\n\n\t// @ts-expect-error\n\tconst loc = element.__svelte_meta?.loc;\n\tif (loc) {\n\t\tlocation = `near ${loc.file}:${loc.line}:${loc.column}`;\n\t} else if (dev_current_component_function?.[FILENAME]) {\n\t\tlocation = `in ${dev_current_component_function[FILENAME]}`;\n\t}\n\n\tw.hydration_html_changed(sanitize_location(location));\n}\n\n/**\n * @param {Element | Text | Comment} node\n * @param {() => string} get_value\n * @param {boolean} svg\n * @param {boolean} mathml\n * @param {boolean} [skip_warning]\n * @returns {void}\n */\nexport function html(node, get_value, svg, mathml, skip_warning) {\n\tvar anchor = node;\n\n\tvar value = '';\n\n\t/** @type {Effect | undefined} */\n\tvar effect;\n\n\tblock(() => {\n\t\tif (value === (value = get_value() ?? '')) {\n\t\t\tif (hydrating) {\n\t\t\t\thydrate_next();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (effect !== undefined) {\n\t\t\tdestroy_effect(effect);\n\t\t\teffect = undefined;\n\t\t}\n\n\t\tif (value === '') return;\n\n\t\teffect = branch(() => {\n\t\t\tif (hydrating) {\n\t\t\t\t// We're deliberately not trying to repair mismatches between server and client,\n\t\t\t\t// as it's costly and error-prone (and it's an edge case to have a mismatch anyway)\n\t\t\t\tvar hash = /** @type {Comment} */ (hydrate_node).data;\n\t\t\t\tvar next = hydrate_next();\n\t\t\t\tvar last = next;\n\n\t\t\t\twhile (\n\t\t\t\t\tnext !== null &&\n\t\t\t\t\t(next.nodeType !== 8 || /** @type {Comment} */ (next).data !== '')\n\t\t\t\t) {\n\t\t\t\t\tlast = next;\n\t\t\t\t\tnext = /** @type {TemplateNode} */ (get_next_sibling(next));\n\t\t\t\t}\n\n\t\t\t\tif (next === null) {\n\t\t\t\t\tw.hydration_mismatch();\n\t\t\t\t\tthrow HYDRATION_ERROR;\n\t\t\t\t}\n\n\t\t\t\tif (DEV && !skip_warning) {\n\t\t\t\t\tcheck_hash(/** @type {Element} */ (next.parentNode), hash, value);\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(hydrate_node, last);\n\t\t\t\tanchor = set_hydrate_node(next);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar html = value + '';\n\t\t\tif (svg) html = `<svg>${html}</svg>`;\n\t\t\telse if (mathml) html = `<math>${html}</math>`;\n\n\t\t\t// Don't use create_fragment_with_script_from_html here because that would mean script tags are executed.\n\t\t\t// @html is basically `.innerHTML = ...` and that doesn't execute scripts either due to security reasons.\n\t\t\t/** @type {DocumentFragment | Element} */\n\t\t\tvar node = create_fragment_from_html(html);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(node));\n\t\t\t}\n\n\t\t\tassign_nodes(\n\t\t\t\t/** @type {TemplateNode} */ (get_first_child(node)),\n\t\t\t\t/** @type {TemplateNode} */ (node.lastChild)\n\t\t\t);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\twhile (get_first_child(node)) {\n\t\t\t\t\tanchor.before(/** @type {Node} */ (get_first_child(node)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanchor.before(node);\n\t\t\t}\n\t\t});\n\t});\n}\n","import { hydrate_next, hydrating } from '../hydration.js';\n\n/**\n * @param {Comment} anchor\n * @param {Record<string, any>} $$props\n * @param {string} name\n * @param {Record<string, unknown>} slot_props\n * @param {null | ((anchor: Comment) => void)} fallback_fn\n */\nexport function slot(anchor, $$props, name, slot_props, fallback_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar slot_fn = $$props.$$slots?.[name];\n\t// Interop: Can use snippets to fill slots\n\tvar is_interop = false;\n\tif (slot_fn === true) {\n\t\tslot_fn = $$props[name === 'default' ? 'children' : name];\n\t\tis_interop = true;\n\t}\n\n\tif (slot_fn === undefined) {\n\t\tif (fallback_fn !== null) {\n\t\t\tfallback_fn(anchor);\n\t\t}\n\t} else {\n\t\tslot_fn(anchor, is_interop ? () => slot_props : slot_props);\n\t}\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, boolean>}\n */\nexport function sanitize_slots(props) {\n\t/** @type {Record<string, boolean>} */\n\tconst sanitized = {};\n\tif (props.children) sanitized.default = true;\n\tfor (const key in props.$$slots) {\n\t\tsanitized[key] = true;\n\t}\n\treturn sanitized;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, NAMESPACE_SVG } from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { create_text, get_first_child } from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { set_should_intro } from '../../render.js';\nimport { current_each_item, set_current_each_item } from './each.js';\nimport { component_context, active_effect } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport { assign_nodes } from '../template.js';\nimport { is_raw_text_element } from '../../../../utils.js';\n\n/**\n * @param {Comment | Element} node\n * @param {() => string} get_tag\n * @param {boolean} is_svg\n * @param {undefined | ((element: Element, anchor: Node | null) => void)} render_fn,\n * @param {undefined | (() => string)} get_namespace\n * @param {undefined | [number, number]} location\n * @returns {void}\n */\nexport function element(node, get_tag, is_svg, render_fn, get_namespace, location) {\n\tlet was_hydrating = hydrating;\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar filename = DEV && location && component_context?.function[FILENAME];\n\n\t/** @type {string | null} */\n\tvar tag;\n\n\t/** @type {string | null} */\n\tvar current_tag;\n\n\t/** @type {null | Element} */\n\tvar element = null;\n\n\tif (hydrating && hydrate_node.nodeType === 1) {\n\t\telement = /** @type {Element} */ (hydrate_node);\n\t\thydrate_next();\n\t}\n\n\tvar anchor = /** @type {TemplateNode} */ (hydrating ? hydrate_node : node);\n\n\t/** @type {Effect | null} */\n\tvar effect;\n\n\t/**\n\t * The keyed `{#each ...}` item block, if any, that this element is inside.\n\t * We track this so we can set it when changing the element, allowing any\n\t * `animate:` directive to bind itself to the correct block\n\t */\n\tvar each_item_block = current_each_item;\n\n\tblock(() => {\n\t\tconst next_tag = get_tag() || null;\n\t\tvar ns = get_namespace ? get_namespace() : is_svg || next_tag === 'svg' ? NAMESPACE_SVG : null;\n\n\t\t// Assumption: Noone changes the namespace but not the tag (what would that even mean?)\n\t\tif (next_tag === tag) return;\n\n\t\t// See explanation of `each_item_block` above\n\t\tvar previous_each_item = current_each_item;\n\t\tset_current_each_item(each_item_block);\n\n\t\tif (effect) {\n\t\t\tif (next_tag === null) {\n\t\t\t\t// start outro\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\teffect = null;\n\t\t\t\t\tcurrent_tag = null;\n\t\t\t\t});\n\t\t\t} else if (next_tag === current_tag) {\n\t\t\t\t// same tag as is currently rendered — abort outro\n\t\t\t\tresume_effect(effect);\n\t\t\t} else {\n\t\t\t\t// tag is changing — destroy immediately, render contents without intro transitions\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tset_should_intro(false);\n\t\t\t}\n\t\t}\n\n\t\tif (next_tag && next_tag !== current_tag) {\n\t\t\teffect = branch(() => {\n\t\t\t\telement = hydrating\n\t\t\t\t\t? /** @type {Element} */ (element)\n\t\t\t\t\t: ns\n\t\t\t\t\t\t? document.createElementNS(ns, next_tag)\n\t\t\t\t\t\t: document.createElement(next_tag);\n\n\t\t\t\tif (DEV && location) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\telement.__svelte_meta = {\n\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\tfile: filename,\n\t\t\t\t\t\t\tline: location[0],\n\t\t\t\t\t\t\tcolumn: location[1]\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(element, element);\n\n\t\t\t\tif (render_fn) {\n\t\t\t\t\tif (hydrating && is_raw_text_element(next_tag)) {\n\t\t\t\t\t\t// prevent hydration glitches\n\t\t\t\t\t\telement.append(document.createComment(''));\n\t\t\t\t\t}\n\n\t\t\t\t\t// If hydrating, use the existing ssr comment as the anchor so that the\n\t\t\t\t\t// inner open and close methods can pick up the existing nodes correctly\n\t\t\t\t\tvar child_anchor = /** @type {TemplateNode} */ (\n\t\t\t\t\t\thydrating ? get_first_child(element) : element.appendChild(create_text())\n\t\t\t\t\t);\n\n\t\t\t\t\tif (hydrating) {\n\t\t\t\t\t\tif (child_anchor === null) {\n\t\t\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tset_hydrate_node(child_anchor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// `child_anchor` is undefined if this is a void element, but we still\n\t\t\t\t\t// need to call `render_fn` in order to run actions etc. If the element\n\t\t\t\t\t// contains children, it's a user error (which is warned on elsewhere)\n\t\t\t\t\t// and the DOM will be silently discarded\n\t\t\t\t\trender_fn(element, child_anchor);\n\t\t\t\t}\n\n\t\t\t\t// we do this after calling `render_fn` so that child effects don't override `nodes.end`\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = element;\n\n\t\t\t\tanchor.before(element);\n\t\t\t});\n\t\t}\n\n\t\ttag = next_tag;\n\t\tif (tag) current_tag = tag;\n\t\tset_should_intro(true);\n\n\t\tset_current_each_item(previous_each_item);\n\t}, EFFECT_TRANSPARENT);\n\n\tif (was_hydrating) {\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(anchor);\n\t}\n}\n","/** @import { ActionPayload } from '#client' */\nimport { effect, render_effect } from '../../reactivity/effects.js';\nimport { safe_not_equal } from '../../reactivity/equality.js';\nimport { deep_read_state, untrack } from '../../runtime.js';\n\n/**\n * @template P\n * @param {Element} dom\n * @param {(dom: Element, value?: P) => ActionPayload<P>} action\n * @param {() => P} [get_value]\n * @returns {void}\n */\nexport function action(dom, action, get_value) {\n\teffect(() => {\n\t\tvar payload = untrack(() => action(dom, get_value?.()) || {});\n\n\t\tif (get_value && payload?.update) {\n\t\t\tvar inited = false;\n\t\t\t/** @type {P} */\n\t\t\tvar prev = /** @type {any} */ ({}); // initialize with something so it's never equal on first run\n\n\t\t\trender_effect(() => {\n\t\t\t\tvar value = get_value();\n\n\t\t\t\t// Action's update method is coarse-grained, i.e. when anything in the passed value changes, update.\n\t\t\t\t// This works in legacy mode because of mutable_source being updated as a whole, but when using $state\n\t\t\t\t// together with actions and mutation, it wouldn't notice the change without a deep read.\n\t\t\t\tdeep_read_state(value);\n\n\t\t\t\tif (inited && safe_not_equal(prev, value)) {\n\t\t\t\t\tprev = value;\n\t\t\t\t\t/** @type {Function} */ (payload.update)(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinited = true;\n\t\t}\n\n\t\tif (payload?.destroy) {\n\t\t\treturn () => /** @type {Function} */ (payload.destroy)();\n\t\t}\n\t});\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when its `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value;\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\tsetters_cache.has(node.nodeName) || customElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object'\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet prev = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = prev;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet prev = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = prev;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\n\t\t\t\t} else {\n\t\t\t\t\tset_attribute(element, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_svg_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_mathml_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @returns {string | V}\n */\nfunction to_class(value) {\n\treturn value == null ? '' : value;\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","/** @import { Raf } from '#client' */\nimport { noop } from '../shared/utils.js';\n\nimport { BROWSER } from 'esm-env';\n\nconst now = BROWSER ? () => performance.now() : () => Date.now();\n\n/** @type {Raf} */\nexport const raf = {\n\t// don't access requestAnimationFrame eagerly outside method\n\t// this allows basic testing of user code without JSDOM\n\t// bunder will eval and remove ternary when the user's app is built\n\ttick: /** @param {any} _ */ (_) => (BROWSER ? requestAnimationFrame : noop)(_),\n\tnow: () => now(),\n\ttasks: new Set()\n};\n","/** @import { TaskCallback, Task, TaskEntry } from '#client' */\nimport { raf } from './timing.js';\n\n// TODO move this into timing.js where it probably belongs\n\n/**\n * @returns {void}\n */\nfunction run_tasks() {\n\t// use `raf.now()` instead of the `requestAnimationFrame` callback argument, because\n\t// otherwise things can get wonky https://github.com/sveltejs/svelte/pull/14541\n\tconst now = raf.now();\n\n\traf.tasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\traf.tasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\n\tif (raf.tasks.size !== 0) {\n\t\traf.tick(run_tasks);\n\t}\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {TaskCallback} callback\n * @returns {Task}\n */\nexport function loop(callback) {\n\t/** @type {TaskEntry} */\n\tlet task;\n\n\tif (raf.tasks.size === 0) {\n\t\traf.tick(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\traf.tasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\traf.tasks.delete(task);\n\t\t}\n\t};\n}\n","/** @import { AnimateFn, Animation, AnimationConfig, EachItem, Effect, TransitionFn, TransitionManager } from '#client' */\nimport { noop, is_function } from '../../../shared/utils.js';\nimport { effect } from '../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from '../../runtime.js';\nimport { loop } from '../../loop.js';\nimport { should_intro } from '../../render.js';\nimport { current_each_item } from '../blocks/each.js';\nimport { TRANSITION_GLOBAL, TRANSITION_IN, TRANSITION_OUT } from '../../../../constants.js';\nimport { BLOCK_EFFECT, EFFECT_RAN, EFFECT_TRANSPARENT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {Element} element\n * @param {'introstart' | 'introend' | 'outrostart' | 'outroend'} type\n * @returns {void}\n */\nfunction dispatch_event(element, type) {\n\telement.dispatchEvent(new CustomEvent(type));\n}\n\n/**\n * Converts a property to the camel-case format expected by Element.animate(), KeyframeEffect(), and KeyframeEffect.setKeyframes().\n * @param {string} style\n * @returns {string}\n */\nfunction css_property_to_camelcase(style) {\n\t// in compliance with spec\n\tif (style === 'float') return 'cssFloat';\n\tif (style === 'offset') return 'cssOffset';\n\n\t// do not rename custom @properties\n\tif (style.startsWith('--')) return style;\n\n\tconst parts = style.split('-');\n\tif (parts.length === 1) return parts[0];\n\treturn (\n\t\tparts[0] +\n\t\tparts\n\t\t\t.slice(1)\n\t\t\t.map(/** @param {any} word */ (word) => word[0].toUpperCase() + word.slice(1))\n\t\t\t.join('')\n\t);\n}\n\n/**\n * @param {string} css\n * @returns {Keyframe}\n */\nfunction css_to_keyframe(css) {\n\t/** @type {Keyframe} */\n\tconst keyframe = {};\n\tconst parts = css.split(';');\n\tfor (const part of parts) {\n\t\tconst [property, value] = part.split(':');\n\t\tif (!property || value === undefined) break;\n\n\t\tconst formatted_property = css_property_to_camelcase(property.trim());\n\t\tkeyframe[formatted_property] = value.trim();\n\t}\n\treturn keyframe;\n}\n\n/** @param {number} t */\nconst linear = (t) => t;\n\n/**\n * Called inside keyed `{#each ...}` blocks (as `$.animation(...)`). This creates an animation manager\n * and attaches it to the block, so that moves can be animated following reconciliation.\n * @template P\n * @param {Element} element\n * @param {() => AnimateFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n */\nexport function animation(element, get_fn, get_params) {\n\tvar item = /** @type {EachItem} */ (current_each_item);\n\n\t/** @type {DOMRect} */\n\tvar from;\n\n\t/** @type {DOMRect} */\n\tvar to;\n\n\t/** @type {Animation | undefined} */\n\tvar animation;\n\n\t/** @type {null | { position: string, width: string, height: string, transform: string }} */\n\tvar original_styles = null;\n\n\titem.a ??= {\n\t\telement,\n\t\tmeasure() {\n\t\t\tfrom = this.element.getBoundingClientRect();\n\t\t},\n\t\tapply() {\n\t\t\tanimation?.abort();\n\n\t\t\tto = this.element.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tfrom.left !== to.left ||\n\t\t\t\tfrom.right !== to.right ||\n\t\t\t\tfrom.top !== to.top ||\n\t\t\t\tfrom.bottom !== to.bottom\n\t\t\t) {\n\t\t\t\tconst options = get_fn()(this.element, { from, to }, get_params?.());\n\n\t\t\t\tanimation = animate(this.element, options, undefined, 1, () => {\n\t\t\t\t\tanimation?.abort();\n\t\t\t\t\tanimation = undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tfix() {\n\t\t\t// If an animation is already running, transforming the element is likely to fail,\n\t\t\t// because the styles applied by the animation take precedence. In the case of crossfade,\n\t\t\t// that means the `translate(...)` of the crossfade transition overrules the `translate(...)`\n\t\t\t// we would apply below, leading to the element jumping somewhere to the top left.\n\t\t\tif (element.getAnimations().length) return;\n\n\t\t\t// It's important to destructure these to get fixed values - the object itself has getters,\n\t\t\t// and changing the style to 'absolute' can for example influence the width.\n\t\t\tvar { position, width, height } = getComputedStyle(element);\n\n\t\t\tif (position !== 'absolute' && position !== 'fixed') {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\toriginal_styles = {\n\t\t\t\t\tposition: style.position,\n\t\t\t\t\twidth: style.width,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\ttransform: style.transform\n\t\t\t\t};\n\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.height = height;\n\t\t\t\tvar to = element.getBoundingClientRect();\n\n\t\t\t\tif (from.left !== to.left || from.top !== to.top) {\n\t\t\t\t\tvar transform = `translate(${from.left - to.left}px, ${from.top - to.top}px)`;\n\t\t\t\t\tstyle.transform = style.transform ? `${style.transform} ${transform}` : transform;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tunfix() {\n\t\t\tif (original_styles) {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\tstyle.position = original_styles.position;\n\t\t\t\tstyle.width = original_styles.width;\n\t\t\t\tstyle.height = original_styles.height;\n\t\t\t\tstyle.transform = original_styles.transform;\n\t\t\t}\n\t\t}\n\t};\n\n\t// in the case of a `<svelte:element>`, it's possible for `$.animation(...)` to be called\n\t// when an animation manager already exists, if the tag changes. in that case, we need to\n\t// swap out the element rather than creating a new manager, in case it happened at the same\n\t// moment as a reconciliation\n\titem.a.element = element;\n}\n\n/**\n * Called inside block effects as `$.transition(...)`. This creates a transition manager and\n * attaches it to the current effect — later, inside `pause_effect` and `resume_effect`, we\n * use this to create `intro` and `outro` transitions.\n * @template P\n * @param {number} flags\n * @param {HTMLElement} element\n * @param {() => TransitionFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n * @returns {void}\n */\nexport function transition(flags, element, get_fn, get_params) {\n\tvar is_intro = (flags & TRANSITION_IN) !== 0;\n\tvar is_outro = (flags & TRANSITION_OUT) !== 0;\n\tvar is_both = is_intro && is_outro;\n\tvar is_global = (flags & TRANSITION_GLOBAL) !== 0;\n\n\t/** @type {'in' | 'out' | 'both'} */\n\tvar direction = is_both ? 'both' : is_intro ? 'in' : 'out';\n\n\t/** @type {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig) | undefined} */\n\tvar current_options;\n\n\tvar inert = element.inert;\n\n\t/** @type {Animation | undefined} */\n\tvar intro;\n\n\t/** @type {Animation | undefined} */\n\tvar outro;\n\n\tfunction get_options() {\n\t\tvar previous_reaction = active_reaction;\n\t\tvar previous_effect = active_effect;\n\t\tset_active_reaction(null);\n\t\tset_active_effect(null);\n\t\ttry {\n\t\t\t// If a transition is still ongoing, we use the existing options rather than generating\n\t\t\t// new ones. This ensures that reversible transitions reverse smoothly, rather than\n\t\t\t// jumping to a new spot because (for example) a different `duration` was used\n\t\t\treturn (current_options ??= get_fn()(element, get_params?.() ?? /** @type {P} */ ({}), {\n\t\t\t\tdirection\n\t\t\t}));\n\t\t} finally {\n\t\t\tset_active_reaction(previous_reaction);\n\t\t\tset_active_effect(previous_effect);\n\t\t}\n\t}\n\n\t/** @type {TransitionManager} */\n\tvar transition = {\n\t\tis_global,\n\t\tin() {\n\t\t\telement.inert = inert;\n\n\t\t\tif (!is_intro) {\n\t\t\t\toutro?.abort();\n\t\t\t\toutro?.reset?.();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!is_outro) {\n\t\t\t\t// if we intro then outro then intro again, we want to abort the first intro,\n\t\t\t\t// if it's not a bidirectional transition\n\t\t\t\tintro?.abort();\n\t\t\t}\n\n\t\t\tdispatch_event(element, 'introstart');\n\n\t\t\tintro = animate(element, get_options(), outro, 1, () => {\n\t\t\t\tdispatch_event(element, 'introend');\n\n\t\t\t\t// Ensure we cancel the animation to prevent leaking\n\t\t\t\tintro?.abort();\n\t\t\t\tintro = current_options = undefined;\n\t\t\t});\n\t\t},\n\t\tout(fn) {\n\t\t\tif (!is_outro) {\n\t\t\t\tfn?.();\n\t\t\t\tcurrent_options = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement.inert = true;\n\n\t\t\tdispatch_event(element, 'outrostart');\n\n\t\t\toutro = animate(element, get_options(), intro, 0, () => {\n\t\t\t\tdispatch_event(element, 'outroend');\n\t\t\t\tfn?.();\n\t\t\t});\n\t\t},\n\t\tstop: () => {\n\t\t\tintro?.abort();\n\t\t\toutro?.abort();\n\t\t}\n\t};\n\n\tvar e = /** @type {Effect} */ (active_effect);\n\n\t(e.transitions ??= []).push(transition);\n\n\t// if this is a local transition, we only want to run it if the parent (branch) effect's\n\t// parent (block) effect is where the state change happened. we can determine that by\n\t// looking at whether the block effect is currently initializing\n\tif (is_intro && should_intro) {\n\t\tvar run = is_global;\n\n\t\tif (!run) {\n\t\t\tvar block = /** @type {Effect | null} */ (e.parent);\n\n\t\t\t// skip over transparent blocks (e.g. snippets, else-if blocks)\n\t\t\twhile (block && (block.f & EFFECT_TRANSPARENT) !== 0) {\n\t\t\t\twhile ((block = block.parent)) {\n\t\t\t\t\tif ((block.f & BLOCK_EFFECT) !== 0) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trun = !block || (block.f & EFFECT_RAN) !== 0;\n\t\t}\n\n\t\tif (run) {\n\t\t\teffect(() => {\n\t\t\t\tuntrack(() => transition.in());\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Animates an element, according to the provided configuration\n * @param {Element} element\n * @param {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig)} options\n * @param {Animation | undefined} counterpart The corresponding intro/outro to this outro/intro\n * @param {number} t2 The target `t` value — `1` for intro, `0` for outro\n * @param {(() => void)} on_finish Called after successfully completing the animation\n * @returns {Animation}\n */\nfunction animate(element, options, counterpart, t2, on_finish) {\n\tvar is_intro = t2 === 1;\n\n\tif (is_function(options)) {\n\t\t// In the case of a deferred transition (such as `crossfade`), `option` will be\n\t\t// a function rather than an `AnimationConfig`. We need to call this function\n\t\t// once the DOM has been updated...\n\t\t/** @type {Animation} */\n\t\tvar a;\n\t\tvar aborted = false;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (aborted) return;\n\t\t\tvar o = options({ direction: is_intro ? 'in' : 'out' });\n\t\t\ta = animate(element, o, counterpart, t2, on_finish);\n\t\t});\n\n\t\t// ...but we want to do so without using `async`/`await` everywhere, so\n\t\t// we return a facade that allows everything to remain synchronous\n\t\treturn {\n\t\t\tabort: () => {\n\t\t\t\taborted = true;\n\t\t\t\ta?.abort();\n\t\t\t},\n\t\t\tdeactivate: () => a.deactivate(),\n\t\t\treset: () => a.reset(),\n\t\t\tt: () => a.t()\n\t\t};\n\t}\n\n\tcounterpart?.deactivate();\n\n\tif (!options?.duration) {\n\t\ton_finish();\n\n\t\treturn {\n\t\t\tabort: noop,\n\t\t\tdeactivate: noop,\n\t\t\treset: noop,\n\t\t\tt: () => t2\n\t\t};\n\t}\n\n\tconst { delay = 0, css, tick, easing = linear } = options;\n\n\tvar keyframes = [];\n\n\tif (is_intro && counterpart === undefined) {\n\t\tif (tick) {\n\t\t\ttick(0, 1); // TODO put in nested effect, to avoid interleaved reads/writes?\n\t\t}\n\n\t\tif (css) {\n\t\t\tvar styles = css_to_keyframe(css(0, 1));\n\t\t\tkeyframes.push(styles, styles);\n\t\t}\n\t}\n\n\tvar get_t = () => 1 - t2;\n\n\t// create a dummy animation that lasts as long as the delay (but with whatever devtools\n\t// multiplier is in effect). in the common case that it is `0`, we keep it anyway so that\n\t// the CSS keyframes aren't created until the DOM is updated\n\tvar animation = element.animate(keyframes, { duration: delay });\n\n\tanimation.onfinish = () => {\n\t\t// for bidirectional transitions, we start from the current position,\n\t\t// rather than doing a full intro/outro\n\t\tvar t1 = counterpart?.t() ?? 1 - t2;\n\t\tcounterpart?.abort();\n\n\t\tvar delta = t2 - t1;\n\t\tvar duration = /** @type {number} */ (options.duration) * Math.abs(delta);\n\t\tvar keyframes = [];\n\n\t\tif (duration > 0) {\n\t\t\tif (css) {\n\t\t\t\tvar n = Math.ceil(duration / (1000 / 60)); // `n` must be an integer, or we risk missing the `t2` value\n\n\t\t\t\tfor (var i = 0; i <= n; i += 1) {\n\t\t\t\t\tvar t = t1 + delta * easing(i / n);\n\t\t\t\t\tvar styles = css(t, 1 - t);\n\t\t\t\t\tkeyframes.push(css_to_keyframe(styles));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tget_t = () => {\n\t\t\t\tvar time = /** @type {number} */ (\n\t\t\t\t\t/** @type {globalThis.Animation} */ (animation).currentTime\n\t\t\t\t);\n\n\t\t\t\treturn t1 + delta * easing(time / duration);\n\t\t\t};\n\n\t\t\tif (tick) {\n\t\t\t\tloop(() => {\n\t\t\t\t\tif (animation.playState !== 'running') return false;\n\n\t\t\t\t\tvar t = get_t();\n\t\t\t\t\ttick(t, 1 - t);\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tanimation = element.animate(keyframes, { duration, fill: 'forwards' });\n\n\t\tanimation.onfinish = () => {\n\t\t\tget_t = () => t2;\n\t\t\ttick?.(t2, 1 - t2);\n\t\t\ton_finish();\n\t\t};\n\t};\n\n\treturn {\n\t\tabort: () => {\n\t\t\tif (animation) {\n\t\t\t\tanimation.cancel();\n\t\t\t\t// This prevents memory leaks in Chromium\n\t\t\t\tanimation.effect = null;\n\t\t\t\t// This prevents onfinish to be launched after cancel(),\n\t\t\t\t// which can happen in some rare cases\n\t\t\t\t// see https://github.com/sveltejs/svelte/issues/13681\n\t\t\t\tanimation.onfinish = noop;\n\t\t\t}\n\t\t},\n\t\tdeactivate: () => {\n\t\t\ton_finish = noop;\n\t\t},\n\t\treset: () => {\n\t\t\tif (t2 === 0) {\n\t\t\t\ttick?.(1, 0);\n\t\t\t}\n\t\t},\n\t\tt: () => get_t()\n\t};\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { is_runes, untrack } from '../../../runtime.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","import { effect } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport { untrack } from '../../../runtime.js';\nimport { is } from '../../../proxy.js';\n\n/**\n * Selects the correct option(s) (depending on whether this is a multiple select)\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n * @param {boolean} [mounting]\n */\nexport function select_option(select, value, mounting) {\n\tif (select.multiple) {\n\t\treturn select_options(select, value);\n\t}\n\n\tfor (var option of select.options) {\n\t\tvar option_value = get_option_value(option);\n\t\tif (is(option_value, value)) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * Selects the correct option(s) if `value` is given,\n * and then sets up a mutation observer to sync the\n * current selection to the dom when it changes. Such\n * changes could for example occur when options are\n * inside an `#each` block.\n * @template V\n * @param {HTMLSelectElement} select\n * @param {() => V} [get_value]\n */\nexport function init_select(select, get_value) {\n\tlet mounting = true;\n\teffect(() => {\n\t\tif (get_value) {\n\t\t\tselect_option(select, untrack(get_value), mounting);\n\t\t}\n\t\tmounting = false;\n\n\t\tvar observer = new MutationObserver(() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = select.__value;\n\t\t\tselect_option(select, value);\n\t\t\t// Deliberately don't update the potential binding value,\n\t\t\t// the model should be preserved unless explicitly changed\n\t\t});\n\n\t\tobserver.observe(select, {\n\t\t\t// Listen to option element changes\n\t\t\tchildList: true,\n\t\t\tsubtree: true, // because of <optgroup>\n\t\t\t// Listen to option element value attribute changes\n\t\t\t// (doesn't get notified of select value changes,\n\t\t\t// because that property is not reflected as an attribute)\n\t\t\tattributes: true,\n\t\t\tattributeFilter: ['value']\n\t\t});\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n}\n\n/**\n * @param {HTMLSelectElement} select\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_select_value(select, get, set = get) {\n\tvar mounting = true;\n\n\tlisten_to_event_and_reset_event(select, 'change', (is_reset) => {\n\t\tvar query = is_reset ? '[selected]' : ':checked';\n\t\t/** @type {unknown} */\n\t\tvar value;\n\n\t\tif (select.multiple) {\n\t\t\tvalue = [].map.call(select.querySelectorAll(query), get_option_value);\n\t\t} else {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option =\n\t\t\t\tselect.querySelector(query) ??\n\t\t\t\t// will fall back to first non-disabled option if no option is selected\n\t\t\t\tselect.querySelector('option:not([disabled])');\n\t\t\tvalue = selected_option && get_option_value(selected_option);\n\t\t}\n\n\t\tset(value);\n\t});\n\n\t// Needs to be an effect, not a render_effect, so that in case of each loops the logic runs after the each block has updated\n\teffect(() => {\n\t\tvar value = get();\n\t\tselect_option(select, value, mounting);\n\n\t\t// Mounting and value undefined -> take selection from dom\n\t\tif (mounting && value === undefined) {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option = select.querySelector(':checked');\n\t\t\tif (selected_option !== null) {\n\t\t\t\tvalue = get_option_value(selected_option);\n\t\t\t\tset(value);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-ignore\n\t\tselect.__value = value;\n\t\tmounting = false;\n\t});\n\n\t// don't pass get_value, we already initialize it in the effect above\n\tinit_select(select);\n}\n\n/**\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n */\nfunction select_options(select, value) {\n\tfor (var option of select.options) {\n\t\t// @ts-ignore\n\t\toption.selected = ~value.indexOf(get_option_value(option));\n\t}\n}\n\n/** @param {HTMLOptionElement} option */\nfunction get_option_value(option) {\n\t// __value only exists if the <option> has a value attribute\n\tif ('__value' in option) {\n\t\treturn option.__value;\n\t} else {\n\t\treturn option.value;\n\t}\n}\n","import { STATE_SYMBOL } from '../../../constants.js';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","/** @import { ActionReturn } from 'svelte/action' */\nimport { noop } from '../../../shared/utils.js';\nimport { user_pre_effect } from '../../reactivity/effects.js';\nimport { on } from '../elements/events.js';\n\n/**\n * Substitute for the `trusted` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function trusted(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tif (event.isTrusted) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `self` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function self(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\t// @ts-ignore\n\t\tif (event.target === this) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `stopPropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopPropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `once` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function once(fn) {\n\tvar ran = false;\n\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `stopImmediatePropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopImmediatePropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `preventDefault` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function preventDefault(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `passive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function passive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: true\n\t\t});\n\t});\n}\n\n/**\n * Substitute for the `nonpassive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function nonpassive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: false\n\t\t});\n\t});\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { component_context, deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","import { set, source } from '../../reactivity/sources.js';\nimport { get } from '../../runtime.js';\nimport { is_array } from '../../../shared/utils.js';\n\n/**\n * Under some circumstances, imports may be reactive in legacy mode. In that case,\n * they should be using `reactive_import` as part of the transformation\n * @param {() => any} fn\n */\nexport function reactive_import(fn) {\n\tvar s = source(0);\n\n\treturn function () {\n\t\tif (arguments.length === 1) {\n\t\t\tset(s, get(s) + 1);\n\t\t\treturn arguments[0];\n\t\t} else {\n\t\t\tget(s);\n\t\t\treturn fn();\n\t\t}\n\t};\n}\n\n/**\n * @this {any}\n * @param {Record<string, unknown>} $$props\n * @param {Event} event\n * @returns {void}\n */\nexport function bubble_event($$props, event) {\n\tvar events = /** @type {Record<string, Function[] | Function>} */ ($$props.$$events)?.[\n\t\tevent.type\n\t];\n\n\tvar callbacks = is_array(events) ? events.slice() : events == null ? [] : [events];\n\n\tfor (var fn of callbacks) {\n\t\t// Preserve \"this\" context\n\t\tfn.call(this, event);\n\t}\n}\n\n/**\n * Used to simulate `$on` on a component instance when `compatibility.componentApi === 4`\n * @param {Record<string, any>} $$props\n * @param {string} event_name\n * @param {Function} event_callback\n */\nexport function add_legacy_event_listener($$props, event_name, event_callback) {\n\t$$props.$$events ||= {};\n\t$$props.$$events[event_name] ||= [];\n\t$$props.$$events[event_name].push(event_callback);\n}\n\n/**\n * Used to simulate `$set` on a component instance when `compatibility.componentApi === 4`.\n * Needs component accessors so that it can call the setter of the prop. Therefore doesn't\n * work for updating props in `$$props` or `$$restProps`.\n * @this {Record<string, any>}\n * @param {Record<string, any>} $$new_props\n */\nexport function update_legacy_props($$new_props) {\n\tfor (var key in $$new_props) {\n\t\tif (key in this) {\n\t\t\tthis[key] = $$new_props[key];\n\t\t}\n\t}\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { component_context, flush_sync, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\n/**\n * Synchronously flushes any pending state changes and those that result from it.\n * @param {() => void} [fn]\n * @returns {void}\n */\nexport function flushSync(fn) {\n\tflush_sync(fn);\n}\n\nexport { hydrate, mount, unmount } from './internal/client/render.js';\n\nexport {\n\tgetContext,\n\tgetAllContexts,\n\thasContext,\n\tsetContext,\n\ttick,\n\tuntrack\n} from './internal/client/runtime.js';\n\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","export const debounce = <T extends (...args: unknown[]) => void>(fn: T, delay: number) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn(...args), delay);\n  };\n};\n","/*!\n * Platform.js v1.3.6\n * Copyright 2014-2020 Benjamin Tan\n * Copyright 2011-2013 John-David Dalton\n * Available under MIT license\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object. */\n  var oldRoot = root;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  /** Regular expression to detect Opera. */\n  var reOpera = /\\bOpera/;\n\n  /** Possible global object. */\n  var thisBinding = this;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check for own properties of an object. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to resolve the internal `[[Class]]` of values. */\n  var toString = objectProto.toString;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4':  '10 Technical Preview',\n      '6.3':  '8.1',\n      '6.2':  '8',\n      '6.1':  'Server 2008 R2 / 7',\n      '6.0':  'Server 2008 / Vista',\n      '5.2':  'Server 2003 / XP 64-bit',\n      '5.1':  'XP',\n      '5.01': '2000 SP1',\n      '5.0':  '2000',\n      '4.0':  'NT',\n      '4.90': 'ME'\n    };\n    // Detect Windows version from platform tokens.\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\n        (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    }\n    // Correct character case and cleanup string.\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(\n      os.replace(/ ce$/i, ' CE')\n        .replace(/\\bhpw/i, 'web')\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\n        .replace(/_PowerPC\\b/i, ' OS')\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\n        .replace(/\\bMac (OS X)\\b/, '$1')\n        .replace(/\\/(\\d)/, ' $1')\n        .replace(/_/g, '.')\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\n        .split(' on ')[0]\n    );\n\n    return os;\n  }\n\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string)\n      ? string\n      : capitalize(string);\n  }\n\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n  function getClassOf(value) {\n    return value == null\n      ? capitalize(value)\n      : toString.call(value).slice(8, -1);\n  }\n\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\n      (type == 'object' ? !!object[property] : true);\n  }\n\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function(value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n  function parse(ua) {\n\n    /** The environment context object. */\n    var context = root;\n\n    /** Used to flag when a custom context is provided. */\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\n    // Juggle arguments.\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n\n    /** Browser navigator object. */\n    var nav = context.navigator || {};\n\n    /** Browser user agent string. */\n    var userAgent = nav.userAgent || '';\n\n    ua || (ua = userAgent);\n\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\n    /** Used to detect if browser is like Chrome. */\n    var likeChrome = isCustomContext\n      ? !!nav.likeChrome\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\n    /** Internal `[[Class]]` value shortcuts. */\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\n    /** Detect Java environments. */\n    var java = /\\bJava/.test(javaClass) && context.java;\n\n    /** Detect Rhino. */\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n\n    /** A character to represent alpha. */\n    var alpha = java ? 'a' : '\\u03b1';\n\n    /** A character to represent beta. */\n    var beta = java ? 'b' : '\\u03b2';\n\n    /** Browser document object. */\n    var doc = context.document || {};\n\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n    var opera = context.operamini || context.opera;\n\n    /** Opera `[[Class]]`. */\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\n      ? operaClass\n      : (opera = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n    var data;\n\n    /** The CPU architecture. */\n    var arch = ua;\n\n    /** Platform description array. */\n    var description = [];\n\n    /** Platform alpha/beta indicator. */\n    var prerelease = null;\n\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n    var useFeatures = ua == userAgent;\n\n    /** The browser/environment version. */\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n    var isSpecialCasedOS;\n\n    /* Detectable layout engines (order is important). */\n    var layout = getLayout([\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\n      'Trident',\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\n      'iCab',\n      'Presto',\n      'NetFront',\n      'Tasman',\n      'KHTML',\n      'Gecko'\n    ]);\n\n    /* Detectable browser names (order is important). */\n    var name = getName([\n      'Adobe AIR',\n      'Arora',\n      'Avant Browser',\n      'Breach',\n      'Camino',\n      'Electron',\n      'Epiphany',\n      'Fennec',\n      'Flock',\n      'Galeon',\n      'GreenBrowser',\n      'iCab',\n      'Iceweasel',\n      'K-Meleon',\n      'Konqueror',\n      'Lunascape',\n      'Maxthon',\n      { 'label': 'Microsoft Edge', 'pattern': '(?:Edge|Edg|EdgA|EdgiOS)' },\n      'Midori',\n      'Nook Browser',\n      'PaleMoon',\n      'PhantomJS',\n      'Raven',\n      'Rekonq',\n      'RockMelt',\n      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },\n      'SeaMonkey',\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Sleipnir',\n      'SlimBrowser',\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\n      'Sunrise',\n      'Swiftfox',\n      'Vivaldi',\n      'Waterfox',\n      'WebPositive',\n      { 'label': 'Yandex Browser', 'pattern': 'YaBrowser' },\n      { 'label': 'UC Browser', 'pattern': 'UCBrowser' },\n      'Opera Mini',\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\n      'Opera',\n      { 'label': 'Opera', 'pattern': 'OPR' },\n      'Chromium',\n      'Chrome',\n      { 'label': 'Chrome', 'pattern': '(?:HeadlessChrome)' },\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\n      { 'label': 'IE', 'pattern': 'IEMobile' },\n      { 'label': 'IE', 'pattern': 'MSIE' },\n      'Safari'\n    ]);\n\n    /* Detectable products (order is important). */\n    var product = getProduct([\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\n      'BlackBerry',\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\n      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },\n      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },\n      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },\n      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },\n      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },\n      'Google TV',\n      'Lumia',\n      'iPad',\n      'iPod',\n      'iPhone',\n      'Kindle',\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Nexus',\n      'Nook',\n      'PlayBook',\n      'PlayStation Vita',\n      'PlayStation',\n      'TouchPad',\n      'Transformer',\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\n      'Wii',\n      'Xbox One',\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\n      'Xoom'\n    ]);\n\n    /* Detectable manufacturers. */\n    var manufacturer = getManufacturer({\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\n      'Alcatel': {},\n      'Archos': {},\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\n      'Asus': { 'Transformer': 1 },\n      'Barnes & Noble': { 'Nook': 1 },\n      'BlackBerry': { 'PlayBook': 1 },\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\n      'HP': { 'TouchPad': 1 },\n      'HTC': {},\n      'Huawei': {},\n      'Lenovo': {},\n      'LG': {},\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\n      'Motorola': { 'Xoom': 1 },\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\n      'Nokia': { 'Lumia': 1 },\n      'Oppo': {},\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\n      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 },\n      'Xiaomi': { 'Mi': 1, 'Redmi': 1 }\n    });\n\n    /* Detectable operating systems (order is important). */\n    var os = getOS([\n      'Windows Phone',\n      'KaiOS',\n      'Android',\n      'CentOS',\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\n      'Debian',\n      { 'label': 'DragonFly BSD', 'pattern': 'DragonFly' },\n      'Fedora',\n      'FreeBSD',\n      'Gentoo',\n      'Haiku',\n      'Kubuntu',\n      'Linux Mint',\n      'OpenBSD',\n      'Red Hat',\n      'SuSE',\n      'Ubuntu',\n      'Xubuntu',\n      'Cygwin',\n      'Symbian OS',\n      'hpwOS',\n      'webOS ',\n      'webOS',\n      'Tablet OS',\n      'Tizen',\n      'Linux',\n      'Mac OS X',\n      'Macintosh',\n      'Mac',\n      'Windows 98;',\n      'Windows '\n    ]);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n    function getLayout(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n    function getManufacturer(guesses) {\n      return reduce(guesses, function(result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (\n          value[product] ||\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\n        ) && key;\n      });\n    }\n\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n    function getName(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n    function getOS(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\n            )) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n    function getProduct(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\n            )) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          }\n          // Correct character case and cleanup string.\n          guess = guess.label || guess;\n          result = format(result[0]\n            .replace(RegExp(pattern, 'i'), guess)\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n    function getVersion(patterns) {\n      return reduce(patterns, function(result, pattern) {\n        return result || (RegExp(pattern +\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n    function toStringPlatform() {\n      return this.description || '';\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Convert layout to an array so we can add extra details.\n    layout && (layout = [layout]);\n\n    // Detect Android products.\n    // Browsers on Android devices typically provide their product IDS after \"Android;\"\n    // up to \"Build\" or \") AppleWebKit\".\n    // Example:\n    // \"Mozilla/5.0 (Linux; Android 8.1.0; Moto G (5) Plus) AppleWebKit/537.36\n    // (KHTML, like Gecko) Chrome/70.0.3538.80 Mobile Safari/537.36\"\n    if (/\\bAndroid\\b/.test(os) && !product &&\n        (data = /\\bAndroid[^;]*;(.*?)(?:Build|\\) AppleWebKit)\\b/i.exec(ua))) {\n      product = trim(data[1])\n        // Replace any language codes (eg. \"en-US\").\n        .replace(/^[a-z]{2}-[a-z]{2};\\s*/i, '')\n        || null;\n    }\n    // Detect product names that contain their manufacturer's name.\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    } else if (manufacturer && product) {\n      product = product\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.\\\\s]', 'i'), manufacturer + ' ')\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.]?(\\\\w)', 'i'), manufacturer + ' $2');\n    }\n    // Clean up Google TV.\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\n      product = data[0];\n    }\n    // Detect simulators.\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    }\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    }\n    // Detect IE Mobile 11.\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    }\n    // Detect iOS.\n    else if (/^iP/.test(product)) {\n      name || (name = 'Safari');\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\n        ? ' ' + data[1].replace(/_/g, '.')\n        : '');\n    }\n    // Detect Kubuntu.\n    else if (name == 'Konqueror' && /^Linux\\b/i.test(os)) {\n      os = 'Kubuntu';\n    }\n    // Detect Android browsers.\n    else if ((manufacturer && manufacturer != 'Google' &&\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\n      name = 'Android Browser';\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n    }\n    // Detect Silk desktop/accelerated modes.\n    else if (name == 'Silk') {\n      if (!/\\bMobi/i.test(ua)) {\n        os = 'Android';\n        description.unshift('desktop mode');\n      }\n      if (/Accelerated *= *true/i.test(ua)) {\n        description.unshift('accelerated');\n      }\n    }\n    // Detect UC Browser speed mode.\n    else if (name == 'UC Browser' && /\\bUCWEB\\b/.test(ua)) {\n      description.push('speed mode');\n    }\n    // Detect PaleMoon identifying as Firefox.\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n      description.push('identifying as Firefox ' + data[1]);\n    }\n    // Detect Firefox OS and products running Firefox.\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n      os || (os = 'Firefox OS');\n      product || (product = data[1]);\n    }\n    // Detect false positives for Firefox/Safari.\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n      // Escape the `/` for Firefox 1.\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n        // Clear name of false positives.\n        name = null;\n      }\n      // Reassign a generic name.\n      if ((data = product || manufacturer || os) &&\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n      }\n    }\n    // Add Chrome version to description for Electron.\n    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n      description.push('Chromium ' + data);\n    }\n    // Detect non-Opera (Presto-based) versions (order is important).\n    if (!version) {\n      version = getVersion([\n        '(?:Cloud9|CriOS|CrMo|Edge|Edg|EdgA|EdgiOS|FxiOS|HeadlessChrome|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$)|UCBrowser|YaBrowser)',\n        'Version',\n        qualify(name),\n        '(?:Firefox|Minefield|NetFront)'\n      ]);\n    }\n    // Detect stubborn layout engines.\n    if ((data =\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\n        )) {\n      layout = [data];\n    }\n    // Detect Windows Phone 7 desktop mode.\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    }\n    // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n      name = 'IE Mobile';\n      os = 'Windows Phone 8.x';\n      description.unshift('desktop mode');\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n    }\n    // Detect IE 11 identifying as other browsers.\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n      if (name) {\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n      }\n      name = 'IE';\n      version = data[1];\n    }\n    // Leverage environment features.\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch(e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n          if (!name) {\n            name = 'Rhino';\n          }\n        }\n        else if (\n          typeof context.process == 'object' && !context.process.browser &&\n          (data = context.process)\n        ) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      }\n      // Detect Adobe AIR.\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\n        name = 'Adobe AIR';\n        os = data.flash.system.Capabilities.os;\n      }\n      // Detect PhantomJS.\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\n        name = 'PhantomJS';\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\n      }\n      // Detect IE compatibility modes.\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n        // We're in compatibility mode when the Trident version + 4 doesn't\n        // equal the document mode.\n        version = [version, doc.documentMode];\n        if ((data = +data[1] + 4) != version[1]) {\n          description.push('IE ' + version[1] + ' mode');\n          layout && (layout[1] = '');\n          version[1] = data;\n        }\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n      }\n      // Detect IE 11 masking as other browsers.\n      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n        description.push('masking as ' + name + ' ' + version);\n        name = 'IE';\n        version = '11.0';\n        layout = ['Trident'];\n        os = 'Windows';\n      }\n      os = os && format(os);\n    }\n    // Detect prerelease phases.\n    if (version && (data =\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\n          /\\bMinefield\\b/i.test(ua) && 'a'\n        )) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    }\n    // Detect Firefox Mobile.\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS|KaiOS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    }\n    // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n      version = version.replace(/\\.[\\d.]+/, '.x');\n    }\n    // Detect Xbox 360 and Xbox One.\n    else if (/\\bXbox\\b/i.test(product)) {\n      if (product == 'Xbox 360') {\n        os = null;\n      }\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n        description.unshift('mobile mode');\n      }\n    }\n    // Add mobile postfix.\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\n      name += ' Mobile';\n    }\n    // Detect IE platform preview.\n    else if (name == 'IE' && useFeatures) {\n      try {\n        if (context.external === null) {\n          description.unshift('platform preview');\n        }\n      } catch(e) {\n        description.unshift('embedded');\n      }\n    }\n    // Detect BlackBerry OS version.\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\n          version\n        )) {\n      data = [data, /BB10/.test(ua)];\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n      version = null;\n    }\n    // Detect Opera identifying/masking itself as another browser.\n    // http://www.opera.com/support/kb/view/843/\n    else if (this != forOwn && product != 'Wii' && (\n          (useFeatures && opera) ||\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\n          (name == 'IE' && (\n            (os && !/^Win/.test(os) && version > 5.5) ||\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\n            version == 8 && !/\\bTrident\\b/.test(ua)\n          ))\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n      if (reOpera.test(name)) {\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n          os = null;\n        }\n        data = 'identify' + data;\n      }\n      // When \"masking\", the UA contains only the other browser's name.\n      else {\n        data = 'mask' + data;\n        if (operaClass) {\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n        } else {\n          name = 'Opera';\n        }\n        if (/\\bIE\\b/.test(data)) {\n          os = null;\n        }\n        if (!useFeatures) {\n          version = null;\n        }\n      }\n      layout = ['Presto'];\n      description.push(data);\n    }\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n      // Nightly builds are postfixed with a \"+\".\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      }\n      // Clear incorrect browser versions.\n      else if (version == data[1] ||\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n        version = null;\n      }\n      // Use the full Chrome version when available.\n      data[1] = (/\\b(?:Headless)?Chrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n      // Detect Blink layout engine.\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      }\n      // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n      if (!useFeatures || (!likeChrome && !data[1])) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : data < 602 ? 9 : data < 604 ? 10 : data < 606 ? 11 : data < 608 ? 12 : '12');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      }\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n      // Obscure version for some Safari 1-2 releases.\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      } else if (name == 'Chrome' && /\\bHeadlessChrome/i.test(ua)) {\n        description.unshift('headless');\n      }\n    }\n    // Detect Opera desktop modes.\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    }\n    // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n      description.unshift('desktop mode');\n      name = 'Chrome Mobile';\n      version = null;\n\n      if (/\\bOS X\\b/.test(os)) {\n        manufacturer = 'Apple';\n        os = 'iOS 4.3+';\n      } else {\n        os = null;\n      }\n    }\n    // Newer versions of SRWare Iron uses the Chrome tag to indicate its version number.\n    else if (/\\bSRWare Iron\\b/.test(name) && !version) {\n      version = getVersion('Chrome');\n    }\n    // Strip incorrect OS versions.\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\n        ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    }\n    // Ensure OS does not include the browser name.\n    if (os && os.indexOf(name) != -1 && !RegExp(name + ' OS').test(os)) {\n      os = os.replace(RegExp(' *' + qualify(name) + ' *'), '');\n    }\n    // Add layout engine.\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\n        /Browser|Lunascape|Maxthon/.test(name) ||\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|SRWare Iron|Vivaldi|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    }\n    // Combine contextual information.\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    }\n    // Append manufacturer to description.\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    }\n    // Append product to description.\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    }\n    // Parse the OS into an object.\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function() {\n          var version = this.version;\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    }\n    // Add browser/OS architecture.\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n      if (\n          name && (/\\bWOW64\\b/i.test(ua) ||\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\n      ) {\n        description.unshift('32-bit');\n      }\n    }\n    // Chrome 39 and above on OS X is always 64-bit.\n    else if (\n        os && /^OS X/.test(os.family) &&\n        name == 'Chrome' && parseFloat(version) >= 39\n    ) {\n      os.architecture = 64;\n    }\n\n    ua || (ua = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n    var platform = {};\n\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.description = ua;\n\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.layout = layout && layout[0];\n\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.manufacturer = manufacturer;\n\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.name = name;\n\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.prerelease = prerelease;\n\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.product = product;\n\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.ua = ua;\n\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.version = name && version;\n\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n    platform.os = os || {\n\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Linux\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\",\n       * \"SuSE\", \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function() { return 'null'; }\n    };\n\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n    if (platform.name) {\n      description.unshift(name);\n    }\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n    return platform;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export platform.\n  var platform = parse();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform;\n\n    // Define as an anonymous module so platform can be aliased through path mapping.\n    define(function() {\n      return platform;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for CommonJS support.\n    forOwn(platform, function(value, key) {\n      freeExports[key] = value;\n    });\n  }\n  else {\n    // Export to the global object.\n    root.platform = platform;\n  }\n}.call(this));\n","import platform from \"platform\";\n\nconst labels = {\n  mac: {\n    cmd: \"⌘\",\n    alt: \"⌥\",\n    ctrl: \"⌃\",\n    shift: \"⇧\",\n  },\n  other: {\n    cmd: \"Ctrl+\",\n    alt: \"Alt+\",\n    ctrl: \"Ctrl+\",\n    shift: \"Shift+\",\n  },\n};\n\nlet isMac = false;\nlet labelMap = labels.other;\n\nconst setPlatform = (_platform: typeof platform): void => {\n  isMac = [\"OS X\", \"iOS\"].includes(_platform.os?.family || \"\");\n  labelMap = isMac ? labels.mac : labels.other;\n};\n\nsetPlatform(platform);\n\nexport const toKeyboardShortcutKey = (ev: KeyboardEvent): string => {\n  return `${ev.ctrlKey && isMac ? \"ctrl+\" : \"\"}${ev.altKey ? \"alt+\" : \"\"}${\n    ev.shiftKey ? \"shift+\" : \"\"\n  }${ev.metaKey || (ev.ctrlKey && !isMac) ? \"cmd+\" : \"\"}${ev.key}`;\n};\n\nexport const toKeyboardShortcutLabel = (key: string): string => {\n  return key.replace(/(ctrl|cmd|alt|shift)\\+/g, (_, key: keyof typeof labelMap) => {\n    return labelMap[key] || key;\n  });\n};\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\">\\n    <path fill-rule=\\\"evenodd\\\" d=\\\"M12.767 13.084l-2.211 2.211 2.233 2.233-.789.789-3-3 3-3 .767.767zm.884 4.538l2.327-2.327-2.305-2.305.673-.673 3 3-3 3-.695-.695zm-5.561-15.622h9.916c1.101 0 1.993.898 1.993 1.991v16.018c0 1.099-.895 1.991-1.994 1.991h-12.012c-1.101 0-1.994-.897-1.994-1.999v-14.044l4.09-3.957zm.599 2l-.1 2.606h-2.59v13.394h12v-16h-9.31z\\\"/>\\n</svg>\\n\"","import { enable_legacy_mode_flag } from './index.js';\n\nenable_legacy_mode_flag();\n","<script lang=\"ts\">\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  export let element;\n  export let event;\n\n  if (typeof element === \"string\") {\n    const constructor = customElements.get(element);\n    if (constructor) {\n      element = new constructor();\n    } else {\n      const html = element;\n      element = document.createElement(\"div\");\n      element.innerHTML = html;\n    }\n  }\n\n  let dispatch = createEventDispatcher();\n\n  let container;\n  onMount(() => {\n    container.appendChild(element);\n    setTimeout(() => {\n      element.dispatchEvent(event);\n      dispatch(\"ready\");\n    }, 0);\n  });\n</script>\n\n<div bind:this={container} on:message />\n","<script lang=\"ts\">\n  import type { UIComponent } from \"@movabletype/app/ui\";\n  import HtmlElement from \"./HtmlElement.svelte\";\n  export let namespace;\n  export let detail;\n  let components: UIComponent[] = [];\n  let readiedCount = 0;\n  const componentsPromise = window.MT.UI.Component.getAll(namespace);\n  componentsPromise.then((_components) => {\n    components = _components;\n  });\n\n  let container: HTMLDivElement;\n  function onReady(): void {\n    if (++readiedCount !== components.length) {\n      return;\n    }\n\n    [...container.childNodes]\n      .filter((e): e is HTMLElement => e instanceof HTMLElement)\n      .forEach((e: HTMLElement, i) => {\n        e.style.order ||= String((i + 1) * 100);\n      });\n  }\n</script>\n\n<div class=\"d-flex flex-column\" bind:this={container}>\n  <slot name=\"prepend\" />\n\n  {#each components as c}\n    <HtmlElement\n      element={c}\n      event={new CustomEvent(\"message\", {\n        detail,\n      })}\n      on:ready={onReady}\n      on:message\n    />\n  {/each}\n\n  <slot name=\"append\" />\n</div>\n","/** @import { BlurParams, CrossfadeParams, DrawParams, FadeParams, FlyParams, ScaleParams, SlideParams, TransitionConfig } from './public' */\n/** @param {number} x */\nconst linear = (x) => x;\n\n/** @param {number} t */\nfunction cubic_out(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nfunction cubic_in_out(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nfunction split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * @param {Element} node\n * @param {BlurParams} [params]\n * @returns {TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_in_out, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * @param {Element} node\n * @param {FadeParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * @param {Element} node\n * @param {FlyParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [x_value, x_unit] = split_css_unit(x);\n\tconst [y_value, y_unit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x_value}${x_unit}, ${(1 - t) * y_value}${y_unit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * @param {Element} node\n * @param {SlideParams} [params]\n * @returns {TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubic_out, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => /** @type {'Left' | 'Right' | 'Top' | 'Bottom'} */ (`${e[0].toUpperCase()}${e.slice(1)}`)\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from the provided values, passed as parameters, to an element's current (default) values. `out` transitions animate from an element's default values to the provided values.\n *\n * @param {Element} node\n * @param {ScaleParams} [params]\n * @returns {TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {DrawParams} [params]\n * @returns {TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubic_in_out } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nfunction assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs/svelte/transition) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * @param {CrossfadeParams & {\n * \tfallback?: (node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig;\n * }} params\n * @returns {[(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig, (node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {CrossfadeParams} params\n\t * @returns {TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = /** @param {number} d */ (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubic_out\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: typeof duration === 'function' ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t   opacity: ${t * opacity};\n\t\t\t   transform-origin: top left;\n\t\t\t   transform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\t\t\tt + (1 - t) * dh\n\t\t\t\t\t});\n\t\t   `\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\t// @ts-expect-error TODO improve typings (are the public types wrong?)\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(/** @type {Element} */ (other_node), node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function linear(t) {\n\treturn t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t\t: t < c\n\t\t\t\t? ca * t2 - cb * t + cc\n\t\t\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { getContext, setContext } from \"svelte\";\nconst modalKey = Symbol();\nexport function setModalContext(ctx) {\n    setContext(modalKey, ctx);\n}\nexport function getModalContext() {\n    return getContext(modalKey);\n}\n","<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\";\n  import { fade, fly } from \"svelte/transition\";\n  import { quintOut } from \"svelte/easing\";\n  import { setModalContext } from \"./context\";\n\n  const dispatch = createEventDispatcher();\n\n  export let open = true;\n  export let size: \"sm\" | \"lg\" | \"xl\" | undefined = undefined;\n  export let describedby = \"\";\n  export let labelledby = \"\";\n\n  function modalOpen(): void {\n    document.body.classList.add(\"modal-open\");\n  }\n  function modalClose(): void {\n    document.body.classList.remove(\"modal-open\");\n  }\n\n  $: {\n    if (open) {\n      modalOpen();\n    } else {\n      modalClose();\n    }\n  }\n\n  setModalContext({\n    closeModal() {\n      open = false;\n    },\n  });\n</script>\n\n{#if open}\n  <div\n    class=\"modal show\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-labelledby={labelledby}\n    aria-describedby={describedby}\n    aria-modal=\"true\"\n    on:introend={() => {\n      dispatch(\"open\");\n    }}\n    on:outroend={() => {\n      setTimeout(() => {\n        dispatch(\"close\");\n      }, 100);\n    }}\n    transition:fade\n  >\n    <div\n      class={`modal-dialog ${size ? `modal-${size}` : \"\"}`}\n      role=\"document\"\n      in:fly={{ y: -50, duration: 300 }}\n      out:fly={{ y: -50, duration: 300, easing: quintOut }}\n    >\n      <div class=\"modal-content\">\n        <slot />\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-backdrop show\" transition:fade={{ duration: 150 }} />\n{/if}\n\n<style>\n  .modal {\n    display: block;\n  }\n</style>\n","<script lang=\"ts\">\n  import { getModalContext } from \"./context\";\n\n  let ctx = getModalContext();\n  export let close = (): void => {\n    ctx.closeModal();\n  };\n</script>\n\n<div>\n  {#if $$slots.title}\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\"><slot name=\"title\" /></h4>\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" on:click={close}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  {/if}\n  <div class=\"modal-body\">\n    <slot name=\"body\" />\n  </div>\n  <div class=\"modal-footer\">\n    <slot name=\"footer\" />\n  </div>\n</div>\n\n<style>\n  .modal-body {\n    max-height: 600px;\n  }\n</style>\n","<script lang=\"ts\" context=\"module\">\n  export interface PagerData {\n    readonly totalPages: number;\n    readonly currentPage: number;\n    readonly setPage: (page: number) => void;\n  }\n</script>\n\n<script lang=\"ts\">\n  export let data: PagerData | undefined;\n\n  let totalPages: number;\n  let currentPage: number;\n  let pages: number[];\n  $: {\n    totalPages = data?.totalPages ?? 0;\n    currentPage = data?.currentPage ?? 0;\n\n    pages = [];\n    let inDots = false;\n    for (let i = 1; i <= totalPages; i++) {\n      if (i < 3 || i > totalPages - 2 || Math.abs(i - currentPage) < 2) {\n        pages.push(i);\n        inDots = false;\n      } else if (!inDots) {\n        pages.push(0);\n        inDots = true;\n      }\n    }\n  }\n</script>\n\n{#if data && totalPages && currentPage}\n  <!-- svelte-ignore a11y_invalid_attribute -->\n  <div class=\"row\">\n    <div class=\"col-auto mx-auto\">\n      <nav aria-label=\"object list\">\n        <ul class=\"pagination d-none d-md-flex\">\n          <li class=\"page-item\">\n            <a\n              href=\"#\"\n              class=\"page-link\"\n              class:disabled={currentPage <= 1}\n              on:click|preventDefault={() => currentPage > 1 && data.setPage(currentPage - 1)}\n            >\n              {window.trans(\"Previous\")}\n            </a>\n          </li>\n          {#each pages as page}\n            {#if page === 0}\n              <li class=\"page-item\" aria-hidden=\"true\">...</li>\n            {:else if page === currentPage}\n              <li class=\"page-item active\">\n                <a href=\"#\" class=\"page-link\" on:click|preventDefault>\n                  {page} <span class=\"visually-hidden\">(current)</span>\n                </a>\n              </li>\n            {:else}\n              <li class=\"page-item\" class:first-last={page === 1 || page === totalPages}>\n                <a href=\"#\" class=\"page-link\" on:click|preventDefault={() => data.setPage(page)}>\n                  {page}\n                </a>\n              </li>\n            {/if}\n          {/each}\n          <li class=\"page-item\">\n            <a\n              href=\"#\"\n              class=\"page-link\"\n              class:disabled={currentPage === totalPages}\n              on:click|preventDefault={() =>\n                currentPage !== totalPages && data.setPage(currentPage + 1)}\n            >\n              {window.trans(\"Next\")}\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    onSubmit,\n    onClose,\n  }: {\n    onSubmit: (text: string) => void;\n    onClose: () => void;\n  } = $props();\n\n  let textarea: HTMLTextAreaElement;\n  $effect(() => {\n    textarea?.focus();\n  });\n\n  let text = $state(\"\");\n\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} size=\"lg\">\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Source Code\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <textarea\n          id=\"source_text\"\n          class=\"form-control\"\n          style=\"height: calc(100vh - 240px)\"\n          aria-label={t(\"Source Code\")}\n          bind:value={text}\n          bind:this={textarea}\n        ></textarea>\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit(text);\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_49)\\\">\\n        <path d=\\\"M47.55 54.84L42.12 49.41L55.53 36L42.12 22.59L47.55 17.16L63.68 33.29C65.18 34.79 65.18 37.22 63.68 38.72L47.55 54.85V54.84Z\\\" fill=\\\"black\\\"/>\\n        <path d=\\\"M24.45 54.84L8.32001 38.71C6.82001 37.21 6.82001 34.78 8.32001 33.28L24.45 17.15L29.88 22.58L16.47 35.99L29.88 49.4L24.45 54.83V54.84Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_49\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","/*jshint node:true */\n/*\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nfunction OutputLine(parent) {\n  this.__parent = parent;\n  this.__character_count = 0;\n  // use indent_count as a marker for this.__lines that have preserved indentation\n  this.__indent_count = -1;\n  this.__alignment_count = 0;\n  this.__wrap_point_index = 0;\n  this.__wrap_point_character_count = 0;\n  this.__wrap_point_indent_count = -1;\n  this.__wrap_point_alignment_count = 0;\n\n  this.__items = [];\n}\n\nOutputLine.prototype.clone_empty = function() {\n  var line = new OutputLine(this.__parent);\n  line.set_indent(this.__indent_count, this.__alignment_count);\n  return line;\n};\n\nOutputLine.prototype.item = function(index) {\n  if (index < 0) {\n    return this.__items[this.__items.length + index];\n  } else {\n    return this.__items[index];\n  }\n};\n\nOutputLine.prototype.has_match = function(pattern) {\n  for (var lastCheckedOutput = this.__items.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n    if (this.__items[lastCheckedOutput].match(pattern)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nOutputLine.prototype.set_indent = function(indent, alignment) {\n  if (this.is_empty()) {\n    this.__indent_count = indent || 0;\n    this.__alignment_count = alignment || 0;\n    this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count);\n  }\n};\n\nOutputLine.prototype._set_wrap_point = function() {\n  if (this.__parent.wrap_line_length) {\n    this.__wrap_point_index = this.__items.length;\n    this.__wrap_point_character_count = this.__character_count;\n    this.__wrap_point_indent_count = this.__parent.next_line.__indent_count;\n    this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count;\n  }\n};\n\nOutputLine.prototype._should_wrap = function() {\n  return this.__wrap_point_index &&\n    this.__character_count > this.__parent.wrap_line_length &&\n    this.__wrap_point_character_count > this.__parent.next_line.__character_count;\n};\n\nOutputLine.prototype._allow_wrap = function() {\n  if (this._should_wrap()) {\n    this.__parent.add_new_line();\n    var next = this.__parent.current_line;\n    next.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count);\n    next.__items = this.__items.slice(this.__wrap_point_index);\n    this.__items = this.__items.slice(0, this.__wrap_point_index);\n\n    next.__character_count += this.__character_count - this.__wrap_point_character_count;\n    this.__character_count = this.__wrap_point_character_count;\n\n    if (next.__items[0] === \" \") {\n      next.__items.splice(0, 1);\n      next.__character_count -= 1;\n    }\n    return true;\n  }\n  return false;\n};\n\nOutputLine.prototype.is_empty = function() {\n  return this.__items.length === 0;\n};\n\nOutputLine.prototype.last = function() {\n  if (!this.is_empty()) {\n    return this.__items[this.__items.length - 1];\n  } else {\n    return null;\n  }\n};\n\nOutputLine.prototype.push = function(item) {\n  this.__items.push(item);\n  var last_newline_index = item.lastIndexOf('\\n');\n  if (last_newline_index !== -1) {\n    this.__character_count = item.length - last_newline_index;\n  } else {\n    this.__character_count += item.length;\n  }\n};\n\nOutputLine.prototype.pop = function() {\n  var item = null;\n  if (!this.is_empty()) {\n    item = this.__items.pop();\n    this.__character_count -= item.length;\n  }\n  return item;\n};\n\n\nOutputLine.prototype._remove_indent = function() {\n  if (this.__indent_count > 0) {\n    this.__indent_count -= 1;\n    this.__character_count -= this.__parent.indent_size;\n  }\n};\n\nOutputLine.prototype._remove_wrap_indent = function() {\n  if (this.__wrap_point_indent_count > 0) {\n    this.__wrap_point_indent_count -= 1;\n  }\n};\nOutputLine.prototype.trim = function() {\n  while (this.last() === ' ') {\n    this.__items.pop();\n    this.__character_count -= 1;\n  }\n};\n\nOutputLine.prototype.toString = function() {\n  var result = '';\n  if (this.is_empty()) {\n    if (this.__parent.indent_empty_lines) {\n      result = this.__parent.get_indent_string(this.__indent_count);\n    }\n  } else {\n    result = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count);\n    result += this.__items.join('');\n  }\n  return result;\n};\n\nfunction IndentStringCache(options, baseIndentString) {\n  this.__cache = [''];\n  this.__indent_size = options.indent_size;\n  this.__indent_string = options.indent_char;\n  if (!options.indent_with_tabs) {\n    this.__indent_string = new Array(options.indent_size + 1).join(options.indent_char);\n  }\n\n  // Set to null to continue support for auto detection of base indent\n  baseIndentString = baseIndentString || '';\n  if (options.indent_level > 0) {\n    baseIndentString = new Array(options.indent_level + 1).join(this.__indent_string);\n  }\n\n  this.__base_string = baseIndentString;\n  this.__base_string_length = baseIndentString.length;\n}\n\nIndentStringCache.prototype.get_indent_size = function(indent, column) {\n  var result = this.__base_string_length;\n  column = column || 0;\n  if (indent < 0) {\n    result = 0;\n  }\n  result += indent * this.__indent_size;\n  result += column;\n  return result;\n};\n\nIndentStringCache.prototype.get_indent_string = function(indent_level, column) {\n  var result = this.__base_string;\n  column = column || 0;\n  if (indent_level < 0) {\n    indent_level = 0;\n    result = '';\n  }\n  column += indent_level * this.__indent_size;\n  this.__ensure_cache(column);\n  result += this.__cache[column];\n  return result;\n};\n\nIndentStringCache.prototype.__ensure_cache = function(column) {\n  while (column >= this.__cache.length) {\n    this.__add_column();\n  }\n};\n\nIndentStringCache.prototype.__add_column = function() {\n  var column = this.__cache.length;\n  var indent = 0;\n  var result = '';\n  if (this.__indent_size && column >= this.__indent_size) {\n    indent = Math.floor(column / this.__indent_size);\n    column -= indent * this.__indent_size;\n    result = new Array(indent + 1).join(this.__indent_string);\n  }\n  if (column) {\n    result += new Array(column + 1).join(' ');\n  }\n\n  this.__cache.push(result);\n};\n\nfunction Output(options, baseIndentString) {\n  this.__indent_cache = new IndentStringCache(options, baseIndentString);\n  this.raw = false;\n  this._end_with_newline = options.end_with_newline;\n  this.indent_size = options.indent_size;\n  this.wrap_line_length = options.wrap_line_length;\n  this.indent_empty_lines = options.indent_empty_lines;\n  this.__lines = [];\n  this.previous_line = null;\n  this.current_line = null;\n  this.next_line = new OutputLine(this);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = false;\n  // initialize\n  this.__add_outputline();\n}\n\nOutput.prototype.__add_outputline = function() {\n  this.previous_line = this.current_line;\n  this.current_line = this.next_line.clone_empty();\n  this.__lines.push(this.current_line);\n};\n\nOutput.prototype.get_line_number = function() {\n  return this.__lines.length;\n};\n\nOutput.prototype.get_indent_string = function(indent, column) {\n  return this.__indent_cache.get_indent_string(indent, column);\n};\n\nOutput.prototype.get_indent_size = function(indent, column) {\n  return this.__indent_cache.get_indent_size(indent, column);\n};\n\nOutput.prototype.is_empty = function() {\n  return !this.previous_line && this.current_line.is_empty();\n};\n\nOutput.prototype.add_new_line = function(force_newline) {\n  // never newline at the start of file\n  // otherwise, newline only if we didn't just add one or we're forced\n  if (this.is_empty() ||\n    (!force_newline && this.just_added_newline())) {\n    return false;\n  }\n\n  // if raw output is enabled, don't print additional newlines,\n  // but still return True as though you had\n  if (!this.raw) {\n    this.__add_outputline();\n  }\n  return true;\n};\n\nOutput.prototype.get_code = function(eol) {\n  this.trim(true);\n\n  // handle some edge cases where the last tokens\n  // has text that ends with newline(s)\n  var last_item = this.current_line.pop();\n  if (last_item) {\n    if (last_item[last_item.length - 1] === '\\n') {\n      last_item = last_item.replace(/\\n+$/g, '');\n    }\n    this.current_line.push(last_item);\n  }\n\n  if (this._end_with_newline) {\n    this.__add_outputline();\n  }\n\n  var sweet_code = this.__lines.join('\\n');\n\n  if (eol !== '\\n') {\n    sweet_code = sweet_code.replace(/[\\n]/g, eol);\n  }\n  return sweet_code;\n};\n\nOutput.prototype.set_wrap_point = function() {\n  this.current_line._set_wrap_point();\n};\n\nOutput.prototype.set_indent = function(indent, alignment) {\n  indent = indent || 0;\n  alignment = alignment || 0;\n\n  // Next line stores alignment values\n  this.next_line.set_indent(indent, alignment);\n\n  // Never indent your first output indent at the start of the file\n  if (this.__lines.length > 1) {\n    this.current_line.set_indent(indent, alignment);\n    return true;\n  }\n\n  this.current_line.set_indent();\n  return false;\n};\n\nOutput.prototype.add_raw_token = function(token) {\n  for (var x = 0; x < token.newlines; x++) {\n    this.__add_outputline();\n  }\n  this.current_line.set_indent(-1);\n  this.current_line.push(token.whitespace_before);\n  this.current_line.push(token.text);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = false;\n};\n\nOutput.prototype.add_token = function(printable_token) {\n  this.__add_space_before_token();\n  this.current_line.push(printable_token);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = this.current_line._allow_wrap();\n};\n\nOutput.prototype.__add_space_before_token = function() {\n  if (this.space_before_token && !this.just_added_newline()) {\n    if (!this.non_breaking_space) {\n      this.set_wrap_point();\n    }\n    this.current_line.push(' ');\n  }\n};\n\nOutput.prototype.remove_indent = function(index) {\n  var output_length = this.__lines.length;\n  while (index < output_length) {\n    this.__lines[index]._remove_indent();\n    index++;\n  }\n  this.current_line._remove_wrap_indent();\n};\n\nOutput.prototype.trim = function(eat_newlines) {\n  eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\n  this.current_line.trim();\n\n  while (eat_newlines && this.__lines.length > 1 &&\n    this.current_line.is_empty()) {\n    this.__lines.pop();\n    this.current_line = this.__lines[this.__lines.length - 1];\n    this.current_line.trim();\n  }\n\n  this.previous_line = this.__lines.length > 1 ?\n    this.__lines[this.__lines.length - 2] : null;\n};\n\nOutput.prototype.just_added_newline = function() {\n  return this.current_line.is_empty();\n};\n\nOutput.prototype.just_added_blankline = function() {\n  return this.is_empty() ||\n    (this.current_line.is_empty() && this.previous_line.is_empty());\n};\n\nOutput.prototype.ensure_empty_line_above = function(starts_with, ends_with) {\n  var index = this.__lines.length - 2;\n  while (index >= 0) {\n    var potentialEmptyLine = this.__lines[index];\n    if (potentialEmptyLine.is_empty()) {\n      break;\n    } else if (potentialEmptyLine.item(0).indexOf(starts_with) !== 0 &&\n      potentialEmptyLine.item(-1) !== ends_with) {\n      this.__lines.splice(index + 1, 0, new OutputLine(this));\n      this.previous_line = this.__lines[this.__lines.length - 2];\n      break;\n    }\n    index--;\n  }\n};\n\nmodule.exports.Output = Output;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nfunction Token(type, text, newlines, whitespace_before) {\n  this.type = type;\n  this.text = text;\n\n  // comments_before are\n  // comments that have a new line before them\n  // and may or may not have a newline after\n  // this is a set of comments before\n  this.comments_before = null; /* inline comment*/\n\n\n  // this.comments_after =  new TokenStream(); // no new line before and newline after\n  this.newlines = newlines || 0;\n  this.whitespace_before = whitespace_before || '';\n  this.parent = null;\n  this.next = null;\n  this.previous = null;\n  this.opened = null;\n  this.closed = null;\n  this.directives = null;\n}\n\n\nmodule.exports.Token = Token;\n","/* jshint node: true, curly: false */\n// Parts of this section of code is taken from acorn.\n//\n// Acorn was written by Marijn Haverbeke and released under an MIT\n// license. The Unicode regexps (for identifiers and whitespace) were\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n\n// ## Character categories\n\n\n'use strict';\n\n// acorn used char codes to squeeze the last bit of performance out\n// Beautifier is okay without that, so we're using regex\n// permit # (23), $ (36), and @ (64). @ is used in ES7 decorators.\n// 65 through 91 are uppercase letters.\n// permit _ (95).\n// 97 through 123 are lowercase letters.\nvar baseASCIIidentifierStartChars = \"\\\\x23\\\\x24\\\\x40\\\\x41-\\\\x5a\\\\x5f\\\\x61-\\\\x7a\";\n\n// inside an identifier @ is not allowed but 0-9 are.\nvar baseASCIIidentifierChars = \"\\\\x24\\\\x30-\\\\x39\\\\x41-\\\\x5a\\\\x5f\\\\x61-\\\\x7a\";\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\nvar nonASCIIidentifierStartChars = \"\\\\xaa\\\\xb5\\\\xba\\\\xc0-\\\\xd6\\\\xd8-\\\\xf6\\\\xf8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u0527\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0977\\\\u0979-\\\\u097f\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c33\\\\u0c35-\\\\u0c39\\\\u0c3d\\\\u0c58\\\\u0c59\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d60\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f4\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f0\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191c\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19c1-\\\\u19c7\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fcc\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua697\\\\ua6a0-\\\\ua6ef\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua78e\\\\ua790-\\\\ua793\\\\ua7a0-\\\\ua7aa\\\\ua7f8-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa80-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uabc0-\\\\uabe2\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc\";\nvar nonASCIIidentifierChars = \"\\\\u0300-\\\\u036f\\\\u0483-\\\\u0487\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u0610-\\\\u061a\\\\u0620-\\\\u0649\\\\u0672-\\\\u06d3\\\\u06e7-\\\\u06e8\\\\u06fb-\\\\u06fc\\\\u0730-\\\\u074a\\\\u0800-\\\\u0814\\\\u081b-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082d\\\\u0840-\\\\u0857\\\\u08e4-\\\\u08fe\\\\u0900-\\\\u0903\\\\u093a-\\\\u093c\\\\u093e-\\\\u094f\\\\u0951-\\\\u0957\\\\u0962-\\\\u0963\\\\u0966-\\\\u096f\\\\u0981-\\\\u0983\\\\u09bc\\\\u09be-\\\\u09c4\\\\u09c7\\\\u09c8\\\\u09d7\\\\u09df-\\\\u09e0\\\\u0a01-\\\\u0a03\\\\u0a3c\\\\u0a3e-\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a51\\\\u0a66-\\\\u0a71\\\\u0a75\\\\u0a81-\\\\u0a83\\\\u0abc\\\\u0abe-\\\\u0ac5\\\\u0ac7-\\\\u0ac9\\\\u0acb-\\\\u0acd\\\\u0ae2-\\\\u0ae3\\\\u0ae6-\\\\u0aef\\\\u0b01-\\\\u0b03\\\\u0b3c\\\\u0b3e-\\\\u0b44\\\\u0b47\\\\u0b48\\\\u0b4b-\\\\u0b4d\\\\u0b56\\\\u0b57\\\\u0b5f-\\\\u0b60\\\\u0b66-\\\\u0b6f\\\\u0b82\\\\u0bbe-\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcd\\\\u0bd7\\\\u0be6-\\\\u0bef\\\\u0c01-\\\\u0c03\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0c62-\\\\u0c63\\\\u0c66-\\\\u0c6f\\\\u0c82\\\\u0c83\\\\u0cbc\\\\u0cbe-\\\\u0cc4\\\\u0cc6-\\\\u0cc8\\\\u0cca-\\\\u0ccd\\\\u0cd5\\\\u0cd6\\\\u0ce2-\\\\u0ce3\\\\u0ce6-\\\\u0cef\\\\u0d02\\\\u0d03\\\\u0d46-\\\\u0d48\\\\u0d57\\\\u0d62-\\\\u0d63\\\\u0d66-\\\\u0d6f\\\\u0d82\\\\u0d83\\\\u0dca\\\\u0dcf-\\\\u0dd4\\\\u0dd6\\\\u0dd8-\\\\u0ddf\\\\u0df2\\\\u0df3\\\\u0e34-\\\\u0e3a\\\\u0e40-\\\\u0e45\\\\u0e50-\\\\u0e59\\\\u0eb4-\\\\u0eb9\\\\u0ec8-\\\\u0ecd\\\\u0ed0-\\\\u0ed9\\\\u0f18\\\\u0f19\\\\u0f20-\\\\u0f29\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f41-\\\\u0f47\\\\u0f71-\\\\u0f84\\\\u0f86-\\\\u0f87\\\\u0f8d-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u1000-\\\\u1029\\\\u1040-\\\\u1049\\\\u1067-\\\\u106d\\\\u1071-\\\\u1074\\\\u1082-\\\\u108d\\\\u108f-\\\\u109d\\\\u135d-\\\\u135f\\\\u170e-\\\\u1710\\\\u1720-\\\\u1730\\\\u1740-\\\\u1750\\\\u1772\\\\u1773\\\\u1780-\\\\u17b2\\\\u17dd\\\\u17e0-\\\\u17e9\\\\u180b-\\\\u180d\\\\u1810-\\\\u1819\\\\u1920-\\\\u192b\\\\u1930-\\\\u193b\\\\u1951-\\\\u196d\\\\u19b0-\\\\u19c0\\\\u19c8-\\\\u19c9\\\\u19d0-\\\\u19d9\\\\u1a00-\\\\u1a15\\\\u1a20-\\\\u1a53\\\\u1a60-\\\\u1a7c\\\\u1a7f-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1b46-\\\\u1b4b\\\\u1b50-\\\\u1b59\\\\u1b6b-\\\\u1b73\\\\u1bb0-\\\\u1bb9\\\\u1be6-\\\\u1bf3\\\\u1c00-\\\\u1c22\\\\u1c40-\\\\u1c49\\\\u1c5b-\\\\u1c7d\\\\u1cd0-\\\\u1cd2\\\\u1d00-\\\\u1dbe\\\\u1e01-\\\\u1f15\\\\u200c\\\\u200d\\\\u203f\\\\u2040\\\\u2054\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20f0\\\\u2d81-\\\\u2d96\\\\u2de0-\\\\u2dff\\\\u3021-\\\\u3028\\\\u3099\\\\u309a\\\\ua640-\\\\ua66d\\\\ua674-\\\\ua67d\\\\ua69f\\\\ua6f0-\\\\ua6f1\\\\ua7f8-\\\\ua800\\\\ua806\\\\ua80b\\\\ua823-\\\\ua827\\\\ua880-\\\\ua881\\\\ua8b4-\\\\ua8c4\\\\ua8d0-\\\\ua8d9\\\\ua8f3-\\\\ua8f7\\\\ua900-\\\\ua909\\\\ua926-\\\\ua92d\\\\ua930-\\\\ua945\\\\ua980-\\\\ua983\\\\ua9b3-\\\\ua9c0\\\\uaa00-\\\\uaa27\\\\uaa40-\\\\uaa41\\\\uaa4c-\\\\uaa4d\\\\uaa50-\\\\uaa59\\\\uaa7b\\\\uaae0-\\\\uaae9\\\\uaaf2-\\\\uaaf3\\\\uabc0-\\\\uabe1\\\\uabec\\\\uabed\\\\uabf0-\\\\uabf9\\\\ufb20-\\\\ufb28\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe26\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\uff10-\\\\uff19\\\\uff3f\";\n//var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n//var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nvar unicodeEscapeOrCodePoint = \"\\\\\\\\u[0-9a-fA-F]{4}|\\\\\\\\u\\\\{[0-9a-fA-F]+\\\\}\";\nvar identifierStart = \"(?:\" + unicodeEscapeOrCodePoint + \"|[\" + baseASCIIidentifierStartChars + nonASCIIidentifierStartChars + \"])\";\nvar identifierChars = \"(?:\" + unicodeEscapeOrCodePoint + \"|[\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"])*\";\n\nexports.identifier = new RegExp(identifierStart + identifierChars, 'g');\nexports.identifierStart = new RegExp(identifierStart);\nexports.identifierMatch = new RegExp(\"(?:\" + unicodeEscapeOrCodePoint + \"|[\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"])+\");\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\n\n// Whether a single character denotes a newline.\n\nexports.newline = /[\\n\\r\\u2028\\u2029]/;\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\n// in javascript, these two differ\n// in python they are the same, different methods are called on them\nexports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\nexports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nfunction Options(options, merge_child_field) {\n  this.raw_options = _mergeOpts(options, merge_child_field);\n\n  // Support passing the source text back with no change\n  this.disabled = this._get_boolean('disabled');\n\n  this.eol = this._get_characters('eol', 'auto');\n  this.end_with_newline = this._get_boolean('end_with_newline');\n  this.indent_size = this._get_number('indent_size', 4);\n  this.indent_char = this._get_characters('indent_char', ' ');\n  this.indent_level = this._get_number('indent_level');\n\n  this.preserve_newlines = this._get_boolean('preserve_newlines', true);\n  this.max_preserve_newlines = this._get_number('max_preserve_newlines', 32786);\n  if (!this.preserve_newlines) {\n    this.max_preserve_newlines = 0;\n  }\n\n  this.indent_with_tabs = this._get_boolean('indent_with_tabs', this.indent_char === '\\t');\n  if (this.indent_with_tabs) {\n    this.indent_char = '\\t';\n\n    // indent_size behavior changed after 1.8.6\n    // It used to be that indent_size would be\n    // set to 1 for indent_with_tabs. That is no longer needed and\n    // actually doesn't make sense - why not use spaces? Further,\n    // that might produce unexpected behavior - tabs being used\n    // for single-column alignment. So, when indent_with_tabs is true\n    // and indent_size is 1, reset indent_size to 4.\n    if (this.indent_size === 1) {\n      this.indent_size = 4;\n    }\n  }\n\n  // Backwards compat with 1.3.x\n  this.wrap_line_length = this._get_number('wrap_line_length', this._get_number('max_char'));\n\n  this.indent_empty_lines = this._get_boolean('indent_empty_lines');\n\n  // valid templating languages ['django', 'erb', 'handlebars', 'php', 'smarty', 'angular']\n  // For now, 'auto' = all off for javascript, all except angular on for html (and inline javascript/css).\n  // other values ignored\n  this.templating = this._get_selection_list('templating', ['auto', 'none', 'angular', 'django', 'erb', 'handlebars', 'php', 'smarty'], ['auto']);\n}\n\nOptions.prototype._get_array = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = default_value || [];\n  if (typeof option_value === 'object') {\n    if (option_value !== null && typeof option_value.concat === 'function') {\n      result = option_value.concat();\n    }\n  } else if (typeof option_value === 'string') {\n    result = option_value.split(/[^a-zA-Z0-9_\\/\\-]+/);\n  }\n  return result;\n};\n\nOptions.prototype._get_boolean = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = option_value === undefined ? !!default_value : !!option_value;\n  return result;\n};\n\nOptions.prototype._get_characters = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = default_value || '';\n  if (typeof option_value === 'string') {\n    result = option_value.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n').replace(/\\\\t/, '\\t');\n  }\n  return result;\n};\n\nOptions.prototype._get_number = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  default_value = parseInt(default_value, 10);\n  if (isNaN(default_value)) {\n    default_value = 0;\n  }\n  var result = parseInt(option_value, 10);\n  if (isNaN(result)) {\n    result = default_value;\n  }\n  return result;\n};\n\nOptions.prototype._get_selection = function(name, selection_list, default_value) {\n  var result = this._get_selection_list(name, selection_list, default_value);\n  if (result.length !== 1) {\n    throw new Error(\n      \"Invalid Option Value: The option '\" + name + \"' can only be one of the following values:\\n\" +\n      selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n  }\n\n  return result[0];\n};\n\n\nOptions.prototype._get_selection_list = function(name, selection_list, default_value) {\n  if (!selection_list || selection_list.length === 0) {\n    throw new Error(\"Selection list cannot be empty.\");\n  }\n\n  default_value = default_value || [selection_list[0]];\n  if (!this._is_valid_selection(default_value, selection_list)) {\n    throw new Error(\"Invalid Default Value!\");\n  }\n\n  var result = this._get_array(name, default_value);\n  if (!this._is_valid_selection(result, selection_list)) {\n    throw new Error(\n      \"Invalid Option Value: The option '\" + name + \"' can contain only the following values:\\n\" +\n      selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n  }\n\n  return result;\n};\n\nOptions.prototype._is_valid_selection = function(result, selection_list) {\n  return result.length && selection_list.length &&\n    !result.some(function(item) { return selection_list.indexOf(item) === -1; });\n};\n\n\n// merges child options up with the parent options object\n// Example: obj = {a: 1, b: {a: 2}}\n//          mergeOpts(obj, 'b')\n//\n//          Returns: {a: 2}\nfunction _mergeOpts(allOptions, childFieldName) {\n  var finalOpts = {};\n  allOptions = _normalizeOpts(allOptions);\n  var name;\n\n  for (name in allOptions) {\n    if (name !== childFieldName) {\n      finalOpts[name] = allOptions[name];\n    }\n  }\n\n  //merge in the per type settings for the childFieldName\n  if (childFieldName && allOptions[childFieldName]) {\n    for (name in allOptions[childFieldName]) {\n      finalOpts[name] = allOptions[childFieldName][name];\n    }\n  }\n  return finalOpts;\n}\n\nfunction _normalizeOpts(options) {\n  var convertedOpts = {};\n  var key;\n\n  for (key in options) {\n    var newKey = key.replace(/-/g, \"_\");\n    convertedOpts[newKey] = options[key];\n  }\n  return convertedOpts;\n}\n\nmodule.exports.Options = Options;\nmodule.exports.normalizeOpts = _normalizeOpts;\nmodule.exports.mergeOpts = _mergeOpts;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar BaseOptions = require('../core/options').Options;\n\nvar validPositionValues = ['before-newline', 'after-newline', 'preserve-newline'];\n\nfunction Options(options) {\n  BaseOptions.call(this, options, 'js');\n\n  // compatibility, re\n  var raw_brace_style = this.raw_options.brace_style || null;\n  if (raw_brace_style === \"expand-strict\") { //graceful handling of deprecated option\n    this.raw_options.brace_style = \"expand\";\n  } else if (raw_brace_style === \"collapse-preserve-inline\") { //graceful handling of deprecated option\n    this.raw_options.brace_style = \"collapse,preserve-inline\";\n  } else if (this.raw_options.braces_on_own_line !== undefined) { //graceful handling of deprecated option\n    this.raw_options.brace_style = this.raw_options.braces_on_own_line ? \"expand\" : \"collapse\";\n    // } else if (!raw_brace_style) { //Nothing exists to set it\n    //   raw_brace_style = \"collapse\";\n  }\n\n  //preserve-inline in delimited string will trigger brace_preserve_inline, everything\n  //else is considered a brace_style and the last one only will have an effect\n\n  var brace_style_split = this._get_selection_list('brace_style', ['collapse', 'expand', 'end-expand', 'none', 'preserve-inline']);\n\n  this.brace_preserve_inline = false; //Defaults in case one or other was not specified in meta-option\n  this.brace_style = \"collapse\";\n\n  for (var bs = 0; bs < brace_style_split.length; bs++) {\n    if (brace_style_split[bs] === \"preserve-inline\") {\n      this.brace_preserve_inline = true;\n    } else {\n      this.brace_style = brace_style_split[bs];\n    }\n  }\n\n  this.unindent_chained_methods = this._get_boolean('unindent_chained_methods');\n  this.break_chained_methods = this._get_boolean('break_chained_methods');\n  this.space_in_paren = this._get_boolean('space_in_paren');\n  this.space_in_empty_paren = this._get_boolean('space_in_empty_paren');\n  this.jslint_happy = this._get_boolean('jslint_happy');\n  this.space_after_anon_function = this._get_boolean('space_after_anon_function');\n  this.space_after_named_function = this._get_boolean('space_after_named_function');\n  this.keep_array_indentation = this._get_boolean('keep_array_indentation');\n  this.space_before_conditional = this._get_boolean('space_before_conditional', true);\n  this.unescape_strings = this._get_boolean('unescape_strings');\n  this.e4x = this._get_boolean('e4x');\n  this.comma_first = this._get_boolean('comma_first');\n  this.operator_position = this._get_selection('operator_position', validPositionValues);\n\n  // For testing of beautify preserve:start directive\n  this.test_output_raw = this._get_boolean('test_output_raw');\n\n  // force this._options.space_after_anon_function to true if this._options.jslint_happy\n  if (this.jslint_happy) {\n    this.space_after_anon_function = true;\n  }\n\n}\nOptions.prototype = new BaseOptions();\n\n\n\nmodule.exports.Options = Options;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar regexp_has_sticky = RegExp.prototype.hasOwnProperty('sticky');\n\nfunction InputScanner(input_string) {\n  this.__input = input_string || '';\n  this.__input_length = this.__input.length;\n  this.__position = 0;\n}\n\nInputScanner.prototype.restart = function() {\n  this.__position = 0;\n};\n\nInputScanner.prototype.back = function() {\n  if (this.__position > 0) {\n    this.__position -= 1;\n  }\n};\n\nInputScanner.prototype.hasNext = function() {\n  return this.__position < this.__input_length;\n};\n\nInputScanner.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__input.charAt(this.__position);\n    this.__position += 1;\n  }\n  return val;\n};\n\nInputScanner.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__input_length) {\n    val = this.__input.charAt(index);\n  }\n  return val;\n};\n\n// This is a JavaScript only helper function (not in python)\n// Javascript doesn't have a match method\n// and not all implementation support \"sticky\" flag.\n// If they do not support sticky then both this.match() and this.test() method\n// must get the match and check the index of the match.\n// If sticky is supported and set, this method will use it.\n// Otherwise it will check that global is set, and fall back to the slower method.\nInputScanner.prototype.__match = function(pattern, index) {\n  pattern.lastIndex = index;\n  var pattern_match = pattern.exec(this.__input);\n\n  if (pattern_match && !(regexp_has_sticky && pattern.sticky)) {\n    if (pattern_match.index !== index) {\n      pattern_match = null;\n    }\n  }\n\n  return pattern_match;\n};\n\nInputScanner.prototype.test = function(pattern, index) {\n  index = index || 0;\n  index += this.__position;\n\n  if (index >= 0 && index < this.__input_length) {\n    return !!this.__match(pattern, index);\n  } else {\n    return false;\n  }\n};\n\nInputScanner.prototype.testChar = function(pattern, index) {\n  // test one character regex match\n  var val = this.peek(index);\n  pattern.lastIndex = 0;\n  return val !== null && pattern.test(val);\n};\n\nInputScanner.prototype.match = function(pattern) {\n  var pattern_match = this.__match(pattern, this.__position);\n  if (pattern_match) {\n    this.__position += pattern_match[0].length;\n  } else {\n    pattern_match = null;\n  }\n  return pattern_match;\n};\n\nInputScanner.prototype.read = function(starting_pattern, until_pattern, until_after) {\n  var val = '';\n  var match;\n  if (starting_pattern) {\n    match = this.match(starting_pattern);\n    if (match) {\n      val += match[0];\n    }\n  }\n  if (until_pattern && (match || !starting_pattern)) {\n    val += this.readUntil(until_pattern, until_after);\n  }\n  return val;\n};\n\nInputScanner.prototype.readUntil = function(pattern, until_after) {\n  var val = '';\n  var match_index = this.__position;\n  pattern.lastIndex = this.__position;\n  var pattern_match = pattern.exec(this.__input);\n  if (pattern_match) {\n    match_index = pattern_match.index;\n    if (until_after) {\n      match_index += pattern_match[0].length;\n    }\n  } else {\n    match_index = this.__input_length;\n  }\n\n  val = this.__input.substring(this.__position, match_index);\n  this.__position = match_index;\n  return val;\n};\n\nInputScanner.prototype.readUntilAfter = function(pattern) {\n  return this.readUntil(pattern, true);\n};\n\nInputScanner.prototype.get_regexp = function(pattern, match_from) {\n  var result = null;\n  var flags = 'g';\n  if (match_from && regexp_has_sticky) {\n    flags = 'y';\n  }\n  // strings are converted to regexp\n  if (typeof pattern === \"string\" && pattern !== '') {\n    // result = new RegExp(pattern.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), flags);\n    result = new RegExp(pattern, flags);\n  } else if (pattern) {\n    result = new RegExp(pattern.source, flags);\n  }\n  return result;\n};\n\nInputScanner.prototype.get_literal_regexp = function(literal_string) {\n  return RegExp(literal_string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n};\n\n/* css beautifier legacy helpers */\nInputScanner.prototype.peekUntilAfter = function(pattern) {\n  var start = this.__position;\n  var val = this.readUntilAfter(pattern);\n  this.__position = start;\n  return val;\n};\n\nInputScanner.prototype.lookBack = function(testVal) {\n  var start = this.__position - 1;\n  return start >= testVal.length && this.__input.substring(start - testVal.length, start)\n    .toLowerCase() === testVal;\n};\n\nmodule.exports.InputScanner = InputScanner;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nfunction TokenStream(parent_token) {\n  // private\n  this.__tokens = [];\n  this.__tokens_length = this.__tokens.length;\n  this.__position = 0;\n  this.__parent_token = parent_token;\n}\n\nTokenStream.prototype.restart = function() {\n  this.__position = 0;\n};\n\nTokenStream.prototype.isEmpty = function() {\n  return this.__tokens_length === 0;\n};\n\nTokenStream.prototype.hasNext = function() {\n  return this.__position < this.__tokens_length;\n};\n\nTokenStream.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__tokens[this.__position];\n    this.__position += 1;\n  }\n  return val;\n};\n\nTokenStream.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__tokens_length) {\n    val = this.__tokens[index];\n  }\n  return val;\n};\n\nTokenStream.prototype.add = function(token) {\n  if (this.__parent_token) {\n    token.parent = this.__parent_token;\n  }\n  this.__tokens.push(token);\n  this.__tokens_length += 1;\n};\n\nmodule.exports.TokenStream = TokenStream;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nfunction Pattern(input_scanner, parent) {\n  this._input = input_scanner;\n  this._starting_pattern = null;\n  this._match_pattern = null;\n  this._until_pattern = null;\n  this._until_after = false;\n\n  if (parent) {\n    this._starting_pattern = this._input.get_regexp(parent._starting_pattern, true);\n    this._match_pattern = this._input.get_regexp(parent._match_pattern, true);\n    this._until_pattern = this._input.get_regexp(parent._until_pattern);\n    this._until_after = parent._until_after;\n  }\n}\n\nPattern.prototype.read = function() {\n  var result = this._input.read(this._starting_pattern);\n  if (!this._starting_pattern || result) {\n    result += this._input.read(this._match_pattern, this._until_pattern, this._until_after);\n  }\n  return result;\n};\n\nPattern.prototype.read_match = function() {\n  return this._input.match(this._match_pattern);\n};\n\nPattern.prototype.until_after = function(pattern) {\n  var result = this._create();\n  result._until_after = true;\n  result._until_pattern = this._input.get_regexp(pattern);\n  result._update();\n  return result;\n};\n\nPattern.prototype.until = function(pattern) {\n  var result = this._create();\n  result._until_after = false;\n  result._until_pattern = this._input.get_regexp(pattern);\n  result._update();\n  return result;\n};\n\nPattern.prototype.starting_with = function(pattern) {\n  var result = this._create();\n  result._starting_pattern = this._input.get_regexp(pattern, true);\n  result._update();\n  return result;\n};\n\nPattern.prototype.matching = function(pattern) {\n  var result = this._create();\n  result._match_pattern = this._input.get_regexp(pattern, true);\n  result._update();\n  return result;\n};\n\nPattern.prototype._create = function() {\n  return new Pattern(this._input, this);\n};\n\nPattern.prototype._update = function() {};\n\nmodule.exports.Pattern = Pattern;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Pattern = require('../core/pattern').Pattern;\n\nfunction WhitespacePattern(input_scanner, parent) {\n  Pattern.call(this, input_scanner, parent);\n  if (parent) {\n    this._line_regexp = this._input.get_regexp(parent._line_regexp);\n  } else {\n    this.__set_whitespace_patterns('', '');\n  }\n\n  this.newline_count = 0;\n  this.whitespace_before_token = '';\n}\nWhitespacePattern.prototype = new Pattern();\n\nWhitespacePattern.prototype.__set_whitespace_patterns = function(whitespace_chars, newline_chars) {\n  whitespace_chars += '\\\\t ';\n  newline_chars += '\\\\n\\\\r';\n\n  this._match_pattern = this._input.get_regexp(\n    '[' + whitespace_chars + newline_chars + ']+', true);\n  this._newline_regexp = this._input.get_regexp(\n    '\\\\r\\\\n|[' + newline_chars + ']');\n};\n\nWhitespacePattern.prototype.read = function() {\n  this.newline_count = 0;\n  this.whitespace_before_token = '';\n\n  var resulting_string = this._input.read(this._match_pattern);\n  if (resulting_string === ' ') {\n    this.whitespace_before_token = ' ';\n  } else if (resulting_string) {\n    var matches = this.__split(this._newline_regexp, resulting_string);\n    this.newline_count = matches.length - 1;\n    this.whitespace_before_token = matches[this.newline_count];\n  }\n\n  return resulting_string;\n};\n\nWhitespacePattern.prototype.matching = function(whitespace_chars, newline_chars) {\n  var result = this._create();\n  result.__set_whitespace_patterns(whitespace_chars, newline_chars);\n  result._update();\n  return result;\n};\n\nWhitespacePattern.prototype._create = function() {\n  return new WhitespacePattern(this._input, this);\n};\n\nWhitespacePattern.prototype.__split = function(regexp, input_string) {\n  regexp.lastIndex = 0;\n  var start_index = 0;\n  var result = [];\n  var next_match = regexp.exec(input_string);\n  while (next_match) {\n    result.push(input_string.substring(start_index, next_match.index));\n    start_index = next_match.index + next_match[0].length;\n    next_match = regexp.exec(input_string);\n  }\n\n  if (start_index < input_string.length) {\n    result.push(input_string.substring(start_index, input_string.length));\n  } else {\n    result.push('');\n  }\n\n  return result;\n};\n\n\n\nmodule.exports.WhitespacePattern = WhitespacePattern;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar InputScanner = require('../core/inputscanner').InputScanner;\nvar Token = require('../core/token').Token;\nvar TokenStream = require('../core/tokenstream').TokenStream;\nvar WhitespacePattern = require('./whitespacepattern').WhitespacePattern;\n\nvar TOKEN = {\n  START: 'TK_START',\n  RAW: 'TK_RAW',\n  EOF: 'TK_EOF'\n};\n\nvar Tokenizer = function(input_string, options) {\n  this._input = new InputScanner(input_string);\n  this._options = options || {};\n  this.__tokens = null;\n\n  this._patterns = {};\n  this._patterns.whitespace = new WhitespacePattern(this._input);\n};\n\nTokenizer.prototype.tokenize = function() {\n  this._input.restart();\n  this.__tokens = new TokenStream();\n\n  this._reset();\n\n  var current;\n  var previous = new Token(TOKEN.START, '');\n  var open_token = null;\n  var open_stack = [];\n  var comments = new TokenStream();\n\n  while (previous.type !== TOKEN.EOF) {\n    current = this._get_next_token(previous, open_token);\n    while (this._is_comment(current)) {\n      comments.add(current);\n      current = this._get_next_token(previous, open_token);\n    }\n\n    if (!comments.isEmpty()) {\n      current.comments_before = comments;\n      comments = new TokenStream();\n    }\n\n    current.parent = open_token;\n\n    if (this._is_opening(current)) {\n      open_stack.push(open_token);\n      open_token = current;\n    } else if (open_token && this._is_closing(current, open_token)) {\n      current.opened = open_token;\n      open_token.closed = current;\n      open_token = open_stack.pop();\n      current.parent = open_token;\n    }\n\n    current.previous = previous;\n    previous.next = current;\n\n    this.__tokens.add(current);\n    previous = current;\n  }\n\n  return this.__tokens;\n};\n\n\nTokenizer.prototype._is_first_token = function() {\n  return this.__tokens.isEmpty();\n};\n\nTokenizer.prototype._reset = function() {};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  this._readWhitespace();\n  var resulting_string = this._input.read(/.+/g);\n  if (resulting_string) {\n    return this._create_token(TOKEN.RAW, resulting_string);\n  } else {\n    return this._create_token(TOKEN.EOF, '');\n  }\n};\n\nTokenizer.prototype._is_comment = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_opening = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._create_token = function(type, text) {\n  var token = new Token(type, text,\n    this._patterns.whitespace.newline_count,\n    this._patterns.whitespace.whitespace_before_token);\n  return token;\n};\n\nTokenizer.prototype._readWhitespace = function() {\n  return this._patterns.whitespace.read();\n};\n\n\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nfunction Directives(start_block_pattern, end_block_pattern) {\n  start_block_pattern = typeof start_block_pattern === 'string' ? start_block_pattern : start_block_pattern.source;\n  end_block_pattern = typeof end_block_pattern === 'string' ? end_block_pattern : end_block_pattern.source;\n  this.__directives_block_pattern = new RegExp(start_block_pattern + / beautify( \\w+[:]\\w+)+ /.source + end_block_pattern, 'g');\n  this.__directive_pattern = / (\\w+)[:](\\w+)/g;\n\n  this.__directives_end_ignore_pattern = new RegExp(start_block_pattern + /\\sbeautify\\signore:end\\s/.source + end_block_pattern, 'g');\n}\n\nDirectives.prototype.get_directives = function(text) {\n  if (!text.match(this.__directives_block_pattern)) {\n    return null;\n  }\n\n  var directives = {};\n  this.__directive_pattern.lastIndex = 0;\n  var directive_match = this.__directive_pattern.exec(text);\n\n  while (directive_match) {\n    directives[directive_match[1]] = directive_match[2];\n    directive_match = this.__directive_pattern.exec(text);\n  }\n\n  return directives;\n};\n\nDirectives.prototype.readIgnored = function(input) {\n  return input.readUntilAfter(this.__directives_end_ignore_pattern);\n};\n\n\nmodule.exports.Directives = Directives;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Pattern = require('./pattern').Pattern;\n\n\nvar template_names = {\n  django: false,\n  erb: false,\n  handlebars: false,\n  php: false,\n  smarty: false,\n  angular: false\n};\n\n// This lets templates appear anywhere we would do a readUntil\n// The cost is higher but it is pay to play.\nfunction TemplatablePattern(input_scanner, parent) {\n  Pattern.call(this, input_scanner, parent);\n  this.__template_pattern = null;\n  this._disabled = Object.assign({}, template_names);\n  this._excluded = Object.assign({}, template_names);\n\n  if (parent) {\n    this.__template_pattern = this._input.get_regexp(parent.__template_pattern);\n    this._excluded = Object.assign(this._excluded, parent._excluded);\n    this._disabled = Object.assign(this._disabled, parent._disabled);\n  }\n  var pattern = new Pattern(input_scanner);\n  this.__patterns = {\n    handlebars_comment: pattern.starting_with(/{{!--/).until_after(/--}}/),\n    handlebars_unescaped: pattern.starting_with(/{{{/).until_after(/}}}/),\n    handlebars: pattern.starting_with(/{{/).until_after(/}}/),\n    php: pattern.starting_with(/<\\?(?:[= ]|php)/).until_after(/\\?>/),\n    erb: pattern.starting_with(/<%[^%]/).until_after(/[^%]%>/),\n    // django coflicts with handlebars a bit.\n    django: pattern.starting_with(/{%/).until_after(/%}/),\n    django_value: pattern.starting_with(/{{/).until_after(/}}/),\n    django_comment: pattern.starting_with(/{#/).until_after(/#}/),\n    smarty: pattern.starting_with(/{(?=[^}{\\s\\n])/).until_after(/[^\\s\\n]}/),\n    smarty_comment: pattern.starting_with(/{\\*/).until_after(/\\*}/),\n    smarty_literal: pattern.starting_with(/{literal}/).until_after(/{\\/literal}/)\n  };\n}\nTemplatablePattern.prototype = new Pattern();\n\nTemplatablePattern.prototype._create = function() {\n  return new TemplatablePattern(this._input, this);\n};\n\nTemplatablePattern.prototype._update = function() {\n  this.__set_templated_pattern();\n};\n\nTemplatablePattern.prototype.disable = function(language) {\n  var result = this._create();\n  result._disabled[language] = true;\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.read_options = function(options) {\n  var result = this._create();\n  for (var language in template_names) {\n    result._disabled[language] = options.templating.indexOf(language) === -1;\n  }\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.exclude = function(language) {\n  var result = this._create();\n  result._excluded[language] = true;\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.read = function() {\n  var result = '';\n  if (this._match_pattern) {\n    result = this._input.read(this._starting_pattern);\n  } else {\n    result = this._input.read(this._starting_pattern, this.__template_pattern);\n  }\n  var next = this._read_template();\n  while (next) {\n    if (this._match_pattern) {\n      next += this._input.read(this._match_pattern);\n    } else {\n      next += this._input.readUntil(this.__template_pattern);\n    }\n    result += next;\n    next = this._read_template();\n  }\n\n  if (this._until_after) {\n    result += this._input.readUntilAfter(this._until_pattern);\n  }\n  return result;\n};\n\nTemplatablePattern.prototype.__set_templated_pattern = function() {\n  var items = [];\n\n  if (!this._disabled.php) {\n    items.push(this.__patterns.php._starting_pattern.source);\n  }\n  if (!this._disabled.handlebars) {\n    items.push(this.__patterns.handlebars._starting_pattern.source);\n  }\n  if (!this._disabled.erb) {\n    items.push(this.__patterns.erb._starting_pattern.source);\n  }\n  if (!this._disabled.django) {\n    items.push(this.__patterns.django._starting_pattern.source);\n    // The starting pattern for django is more complex because it has different\n    // patterns for value, comment, and other sections\n    items.push(this.__patterns.django_value._starting_pattern.source);\n    items.push(this.__patterns.django_comment._starting_pattern.source);\n  }\n  if (!this._disabled.smarty) {\n    items.push(this.__patterns.smarty._starting_pattern.source);\n  }\n\n  if (this._until_pattern) {\n    items.push(this._until_pattern.source);\n  }\n  this.__template_pattern = this._input.get_regexp('(?:' + items.join('|') + ')');\n};\n\nTemplatablePattern.prototype._read_template = function() {\n  var resulting_string = '';\n  var c = this._input.peek();\n  if (c === '<') {\n    var peek1 = this._input.peek(1);\n    //if we're in a comment, do something special\n    // We treat all comments as literals, even more than preformatted tags\n    // we just look for the appropriate close tag\n    if (!this._disabled.php && !this._excluded.php && peek1 === '?') {\n      resulting_string = resulting_string ||\n        this.__patterns.php.read();\n    }\n    if (!this._disabled.erb && !this._excluded.erb && peek1 === '%') {\n      resulting_string = resulting_string ||\n        this.__patterns.erb.read();\n    }\n  } else if (c === '{') {\n    if (!this._disabled.handlebars && !this._excluded.handlebars) {\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars_comment.read();\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars_unescaped.read();\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars.read();\n    }\n    if (!this._disabled.django) {\n      // django coflicts with handlebars a bit.\n      if (!this._excluded.django && !this._excluded.handlebars) {\n        resulting_string = resulting_string ||\n          this.__patterns.django_value.read();\n      }\n      if (!this._excluded.django) {\n        resulting_string = resulting_string ||\n          this.__patterns.django_comment.read();\n        resulting_string = resulting_string ||\n          this.__patterns.django.read();\n      }\n    }\n    if (!this._disabled.smarty) {\n      // smarty cannot be enabled with django or handlebars enabled\n      if (this._disabled.django && this._disabled.handlebars) {\n        resulting_string = resulting_string ||\n          this.__patterns.smarty_comment.read();\n        resulting_string = resulting_string ||\n          this.__patterns.smarty_literal.read();\n        resulting_string = resulting_string ||\n          this.__patterns.smarty.read();\n      }\n    }\n  }\n  return resulting_string;\n};\n\n\nmodule.exports.TemplatablePattern = TemplatablePattern;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar InputScanner = require('../core/inputscanner').InputScanner;\nvar BaseTokenizer = require('../core/tokenizer').Tokenizer;\nvar BASETOKEN = require('../core/tokenizer').TOKEN;\nvar Directives = require('../core/directives').Directives;\nvar acorn = require('./acorn');\nvar Pattern = require('../core/pattern').Pattern;\nvar TemplatablePattern = require('../core/templatablepattern').TemplatablePattern;\n\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\n\nvar TOKEN = {\n  START_EXPR: 'TK_START_EXPR',\n  END_EXPR: 'TK_END_EXPR',\n  START_BLOCK: 'TK_START_BLOCK',\n  END_BLOCK: 'TK_END_BLOCK',\n  WORD: 'TK_WORD',\n  RESERVED: 'TK_RESERVED',\n  SEMICOLON: 'TK_SEMICOLON',\n  STRING: 'TK_STRING',\n  EQUALS: 'TK_EQUALS',\n  OPERATOR: 'TK_OPERATOR',\n  COMMA: 'TK_COMMA',\n  BLOCK_COMMENT: 'TK_BLOCK_COMMENT',\n  COMMENT: 'TK_COMMENT',\n  DOT: 'TK_DOT',\n  UNKNOWN: 'TK_UNKNOWN',\n  START: BASETOKEN.START,\n  RAW: BASETOKEN.RAW,\n  EOF: BASETOKEN.EOF\n};\n\n\nvar directives_core = new Directives(/\\/\\*/, /\\*\\//);\n\nvar number_pattern = /0[xX][0123456789abcdefABCDEF_]*n?|0[oO][01234567_]*n?|0[bB][01_]*n?|\\d[\\d_]*n|(?:\\.\\d[\\d_]*|\\d[\\d_]*\\.?[\\d_]*)(?:[eE][+-]?[\\d_]+)?/;\n\nvar digit = /[0-9]/;\n\n// Dot \".\" must be distinguished from \"...\" and decimal\nvar dot_pattern = /[^\\d\\.]/;\n\nvar positionable_operators = (\n  \">>> === !== &&= ??= ||= \" +\n  \"<< && >= ** != == <= >> || ?? |> \" +\n  \"< / - + > : & % ? ^ | *\").split(' ');\n\n// IMPORTANT: this must be sorted longest to shortest or tokenizing many not work.\n// Also, you must update possitionable operators separately from punct\nvar punct =\n  \">>>= \" +\n  \"... >>= <<= === >>> !== **= &&= ??= ||= \" +\n  \"=> ^= :: /= << <= == && -= >= >> != -- += ** || ?? ++ %= &= *= |= |> \" +\n  \"= ! ? > < : / ^ - + * & % ~ |\";\n\npunct = punct.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n// ?. but not if followed by a number \npunct = '\\\\?\\\\.(?!\\\\d) ' + punct;\npunct = punct.replace(/ /g, '|');\n\nvar punct_pattern = new RegExp(punct);\n\n// words which should always start on new line.\nvar line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\nvar reserved_words = line_starters.concat(['do', 'in', 'of', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as', 'class', 'extends']);\nvar reserved_word_pattern = new RegExp('^(?:' + reserved_words.join('|') + ')$');\n\n// var template_pattern = /(?:(?:<\\?php|<\\?=)[\\s\\S]*?\\?>)|(?:<%[\\s\\S]*?%>)/g;\n\nvar in_html_comment;\n\nvar Tokenizer = function(input_string, options) {\n  BaseTokenizer.call(this, input_string, options);\n\n  this._patterns.whitespace = this._patterns.whitespace.matching(\n    /\\u00A0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff/.source,\n    /\\u2028\\u2029/.source);\n\n  var pattern_reader = new Pattern(this._input);\n  var templatable = new TemplatablePattern(this._input)\n    .read_options(this._options);\n\n  this.__patterns = {\n    template: templatable,\n    identifier: templatable.starting_with(acorn.identifier).matching(acorn.identifierMatch),\n    number: pattern_reader.matching(number_pattern),\n    punct: pattern_reader.matching(punct_pattern),\n    // comment ends just before nearest linefeed or end of file\n    comment: pattern_reader.starting_with(/\\/\\//).until(/[\\n\\r\\u2028\\u2029]/),\n    //  /* ... */ comment ends with nearest */ or end of file\n    block_comment: pattern_reader.starting_with(/\\/\\*/).until_after(/\\*\\//),\n    html_comment_start: pattern_reader.matching(/<!--/),\n    html_comment_end: pattern_reader.matching(/-->/),\n    include: pattern_reader.starting_with(/#include/).until_after(acorn.lineBreak),\n    shebang: pattern_reader.starting_with(/#!/).until_after(acorn.lineBreak),\n    xml: pattern_reader.matching(/[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[^}]+?}|!\\[CDATA\\[[^\\]]*?\\]\\]|)(\\s*{[^}]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{([^{}]|{[^}]+?})+?}))*\\s*(\\/?)\\s*>/),\n    single_quote: templatable.until(/['\\\\\\n\\r\\u2028\\u2029]/),\n    double_quote: templatable.until(/[\"\\\\\\n\\r\\u2028\\u2029]/),\n    template_text: templatable.until(/[`\\\\$]/),\n    template_expression: templatable.until(/[`}\\\\]/)\n  };\n\n};\nTokenizer.prototype = new BaseTokenizer();\n\nTokenizer.prototype._is_comment = function(current_token) {\n  return current_token.type === TOKEN.COMMENT || current_token.type === TOKEN.BLOCK_COMMENT || current_token.type === TOKEN.UNKNOWN;\n};\n\nTokenizer.prototype._is_opening = function(current_token) {\n  return current_token.type === TOKEN.START_BLOCK || current_token.type === TOKEN.START_EXPR;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) {\n  return (current_token.type === TOKEN.END_BLOCK || current_token.type === TOKEN.END_EXPR) &&\n    (open_token && (\n      (current_token.text === ']' && open_token.text === '[') ||\n      (current_token.text === ')' && open_token.text === '(') ||\n      (current_token.text === '}' && open_token.text === '{')));\n};\n\nTokenizer.prototype._reset = function() {\n  in_html_comment = false;\n};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  var token = null;\n  this._readWhitespace();\n  var c = this._input.peek();\n\n  if (c === null) {\n    return this._create_token(TOKEN.EOF, '');\n  }\n\n  token = token || this._read_non_javascript(c);\n  token = token || this._read_string(c);\n  token = token || this._read_pair(c, this._input.peek(1)); // Issue #2062 hack for record type '#{'\n  token = token || this._read_word(previous_token);\n  token = token || this._read_singles(c);\n  token = token || this._read_comment(c);\n  token = token || this._read_regexp(c, previous_token);\n  token = token || this._read_xml(c, previous_token);\n  token = token || this._read_punctuation();\n  token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());\n\n  return token;\n};\n\nTokenizer.prototype._read_word = function(previous_token) {\n  var resulting_string;\n  resulting_string = this.__patterns.identifier.read();\n  if (resulting_string !== '') {\n    resulting_string = resulting_string.replace(acorn.allLineBreaks, '\\n');\n    if (!(previous_token.type === TOKEN.DOT ||\n        (previous_token.type === TOKEN.RESERVED && (previous_token.text === 'set' || previous_token.text === 'get'))) &&\n      reserved_word_pattern.test(resulting_string)) {\n      if ((resulting_string === 'in' || resulting_string === 'of') &&\n        (previous_token.type === TOKEN.WORD || previous_token.type === TOKEN.STRING)) { // hack for 'in' and 'of' operators\n        return this._create_token(TOKEN.OPERATOR, resulting_string);\n      }\n      return this._create_token(TOKEN.RESERVED, resulting_string);\n    }\n    return this._create_token(TOKEN.WORD, resulting_string);\n  }\n\n  resulting_string = this.__patterns.number.read();\n  if (resulting_string !== '') {\n    return this._create_token(TOKEN.WORD, resulting_string);\n  }\n};\n\nTokenizer.prototype._read_singles = function(c) {\n  var token = null;\n  if (c === '(' || c === '[') {\n    token = this._create_token(TOKEN.START_EXPR, c);\n  } else if (c === ')' || c === ']') {\n    token = this._create_token(TOKEN.END_EXPR, c);\n  } else if (c === '{') {\n    token = this._create_token(TOKEN.START_BLOCK, c);\n  } else if (c === '}') {\n    token = this._create_token(TOKEN.END_BLOCK, c);\n  } else if (c === ';') {\n    token = this._create_token(TOKEN.SEMICOLON, c);\n  } else if (c === '.' && dot_pattern.test(this._input.peek(1))) {\n    token = this._create_token(TOKEN.DOT, c);\n  } else if (c === ',') {\n    token = this._create_token(TOKEN.COMMA, c);\n  }\n\n  if (token) {\n    this._input.next();\n  }\n  return token;\n};\n\nTokenizer.prototype._read_pair = function(c, d) {\n  var token = null;\n  if (c === '#' && d === '{') {\n    token = this._create_token(TOKEN.START_BLOCK, c + d);\n  }\n\n  if (token) {\n    this._input.next();\n    this._input.next();\n  }\n  return token;\n};\n\nTokenizer.prototype._read_punctuation = function() {\n  var resulting_string = this.__patterns.punct.read();\n\n  if (resulting_string !== '') {\n    if (resulting_string === '=') {\n      return this._create_token(TOKEN.EQUALS, resulting_string);\n    } else if (resulting_string === '?.') {\n      return this._create_token(TOKEN.DOT, resulting_string);\n    } else {\n      return this._create_token(TOKEN.OPERATOR, resulting_string);\n    }\n  }\n};\n\nTokenizer.prototype._read_non_javascript = function(c) {\n  var resulting_string = '';\n\n  if (c === '#') {\n    if (this._is_first_token()) {\n      resulting_string = this.__patterns.shebang.read();\n\n      if (resulting_string) {\n        return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + '\\n');\n      }\n    }\n\n    // handles extendscript #includes\n    resulting_string = this.__patterns.include.read();\n\n    if (resulting_string) {\n      return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + '\\n');\n    }\n\n    c = this._input.next();\n\n    // Spidermonkey-specific sharp variables for circular references. Considered obsolete.\n    var sharp = '#';\n    if (this._input.hasNext() && this._input.testChar(digit)) {\n      do {\n        c = this._input.next();\n        sharp += c;\n      } while (this._input.hasNext() && c !== '#' && c !== '=');\n      if (c === '#') {\n        //\n      } else if (this._input.peek() === '[' && this._input.peek(1) === ']') {\n        sharp += '[]';\n        this._input.next();\n        this._input.next();\n      } else if (this._input.peek() === '{' && this._input.peek(1) === '}') {\n        sharp += '{}';\n        this._input.next();\n        this._input.next();\n      }\n      return this._create_token(TOKEN.WORD, sharp);\n    }\n\n    this._input.back();\n\n  } else if (c === '<' && this._is_first_token()) {\n    resulting_string = this.__patterns.html_comment_start.read();\n    if (resulting_string) {\n      while (this._input.hasNext() && !this._input.testChar(acorn.newline)) {\n        resulting_string += this._input.next();\n      }\n      in_html_comment = true;\n      return this._create_token(TOKEN.COMMENT, resulting_string);\n    }\n  } else if (in_html_comment && c === '-') {\n    resulting_string = this.__patterns.html_comment_end.read();\n    if (resulting_string) {\n      in_html_comment = false;\n      return this._create_token(TOKEN.COMMENT, resulting_string);\n    }\n  }\n\n  return null;\n};\n\nTokenizer.prototype._read_comment = function(c) {\n  var token = null;\n  if (c === '/') {\n    var comment = '';\n    if (this._input.peek(1) === '*') {\n      // peek for comment /* ... */\n      comment = this.__patterns.block_comment.read();\n      var directives = directives_core.get_directives(comment);\n      if (directives && directives.ignore === 'start') {\n        comment += directives_core.readIgnored(this._input);\n      }\n      comment = comment.replace(acorn.allLineBreaks, '\\n');\n      token = this._create_token(TOKEN.BLOCK_COMMENT, comment);\n      token.directives = directives;\n    } else if (this._input.peek(1) === '/') {\n      // peek for comment // ...\n      comment = this.__patterns.comment.read();\n      token = this._create_token(TOKEN.COMMENT, comment);\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._read_string = function(c) {\n  if (c === '`' || c === \"'\" || c === '\"') {\n    var resulting_string = this._input.next();\n    this.has_char_escapes = false;\n\n    if (c === '`') {\n      resulting_string += this._read_string_recursive('`', true, '${');\n    } else {\n      resulting_string += this._read_string_recursive(c);\n    }\n\n    if (this.has_char_escapes && this._options.unescape_strings) {\n      resulting_string = unescape_string(resulting_string);\n    }\n\n    if (this._input.peek() === c) {\n      resulting_string += this._input.next();\n    }\n\n    resulting_string = resulting_string.replace(acorn.allLineBreaks, '\\n');\n\n    return this._create_token(TOKEN.STRING, resulting_string);\n  }\n\n  return null;\n};\n\nTokenizer.prototype._allow_regexp_or_xml = function(previous_token) {\n  // regex and xml can only appear in specific locations during parsing\n  return (previous_token.type === TOKEN.RESERVED && in_array(previous_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||\n    (previous_token.type === TOKEN.END_EXPR && previous_token.text === ')' &&\n      previous_token.opened.previous.type === TOKEN.RESERVED && in_array(previous_token.opened.previous.text, ['if', 'while', 'for'])) ||\n    (in_array(previous_token.type, [TOKEN.COMMENT, TOKEN.START_EXPR, TOKEN.START_BLOCK, TOKEN.START,\n      TOKEN.END_BLOCK, TOKEN.OPERATOR, TOKEN.EQUALS, TOKEN.EOF, TOKEN.SEMICOLON, TOKEN.COMMA\n    ]));\n};\n\nTokenizer.prototype._read_regexp = function(c, previous_token) {\n\n  if (c === '/' && this._allow_regexp_or_xml(previous_token)) {\n    // handle regexp\n    //\n    var resulting_string = this._input.next();\n    var esc = false;\n\n    var in_char_class = false;\n    while (this._input.hasNext() &&\n      ((esc || in_char_class || this._input.peek() !== c) &&\n        !this._input.testChar(acorn.newline))) {\n      resulting_string += this._input.peek();\n      if (!esc) {\n        esc = this._input.peek() === '\\\\';\n        if (this._input.peek() === '[') {\n          in_char_class = true;\n        } else if (this._input.peek() === ']') {\n          in_char_class = false;\n        }\n      } else {\n        esc = false;\n      }\n      this._input.next();\n    }\n\n    if (this._input.peek() === c) {\n      resulting_string += this._input.next();\n\n      // regexps may have modifiers /regexp/MOD , so fetch those, too\n      // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n      resulting_string += this._input.read(acorn.identifier);\n    }\n    return this._create_token(TOKEN.STRING, resulting_string);\n  }\n  return null;\n};\n\nTokenizer.prototype._read_xml = function(c, previous_token) {\n\n  if (this._options.e4x && c === \"<\" && this._allow_regexp_or_xml(previous_token)) {\n    var xmlStr = '';\n    var match = this.__patterns.xml.read_match();\n    // handle e4x xml literals\n    //\n    if (match) {\n      // Trim root tag to attempt to\n      var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n      var isCurlyRoot = rootTag.indexOf('{') === 0;\n      var depth = 0;\n      while (match) {\n        var isEndTag = !!match[1];\n        var tagName = match[2];\n        var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === \"![CDATA[\");\n        if (!isSingletonTag &&\n          (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}')))) {\n          if (isEndTag) {\n            --depth;\n          } else {\n            ++depth;\n          }\n        }\n        xmlStr += match[0];\n        if (depth <= 0) {\n          break;\n        }\n        match = this.__patterns.xml.read_match();\n      }\n      // if we didn't close correctly, keep unformatted.\n      if (!match) {\n        xmlStr += this._input.match(/[\\s\\S]*/g)[0];\n      }\n      xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n      return this._create_token(TOKEN.STRING, xmlStr);\n    }\n  }\n\n  return null;\n};\n\nfunction unescape_string(s) {\n  // You think that a regex would work for this\n  // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n  //         return String.fromCharCode(parseInt(val, 16));\n  //     })\n  // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n  var out = '',\n    escaped = 0;\n\n  var input_scan = new InputScanner(s);\n  var matched = null;\n\n  while (input_scan.hasNext()) {\n    // Keep any whitespace, non-slash characters\n    // also keep slash pairs.\n    matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\n    if (matched) {\n      out += matched[0];\n    }\n\n    if (input_scan.peek() === '\\\\') {\n      input_scan.next();\n      if (input_scan.peek() === 'x') {\n        matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n      } else if (input_scan.peek() === 'u') {\n        matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n        if (!matched) {\n          matched = input_scan.match(/u\\{([0-9A-Fa-f]+)\\}/g);\n        }\n      } else {\n        out += '\\\\';\n        if (input_scan.hasNext()) {\n          out += input_scan.next();\n        }\n        continue;\n      }\n\n      // If there's some error decoding, return the original string\n      if (!matched) {\n        return s;\n      }\n\n      escaped = parseInt(matched[1], 16);\n\n      if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n        // we bail out on \\x7f..\\xff,\n        // leaving whole string escaped,\n        // as it's probably completely binary\n        return s;\n      } else if (escaped >= 0x00 && escaped < 0x20) {\n        // leave 0x00...0x1f escaped\n        out += '\\\\' + matched[0];\n      } else if (escaped > 0x10FFFF) {\n        // If the escape sequence is out of bounds, keep the original sequence and continue conversion\n        out += '\\\\' + matched[0];\n      } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n        // single-quote, apostrophe, backslash - escape these\n        out += '\\\\' + String.fromCharCode(escaped);\n      } else {\n        out += String.fromCharCode(escaped);\n      }\n    }\n  }\n\n  return out;\n}\n\n// handle string\n//\nTokenizer.prototype._read_string_recursive = function(delimiter, allow_unescaped_newlines, start_sub) {\n  var current_char;\n  var pattern;\n  if (delimiter === '\\'') {\n    pattern = this.__patterns.single_quote;\n  } else if (delimiter === '\"') {\n    pattern = this.__patterns.double_quote;\n  } else if (delimiter === '`') {\n    pattern = this.__patterns.template_text;\n  } else if (delimiter === '}') {\n    pattern = this.__patterns.template_expression;\n  }\n\n  var resulting_string = pattern.read();\n  var next = '';\n  while (this._input.hasNext()) {\n    next = this._input.next();\n    if (next === delimiter ||\n      (!allow_unescaped_newlines && acorn.newline.test(next))) {\n      this._input.back();\n      break;\n    } else if (next === '\\\\' && this._input.hasNext()) {\n      current_char = this._input.peek();\n\n      if (current_char === 'x' || current_char === 'u') {\n        this.has_char_escapes = true;\n      } else if (current_char === '\\r' && this._input.peek(1) === '\\n') {\n        this._input.next();\n      }\n      next += this._input.next();\n    } else if (start_sub) {\n      if (start_sub === '${' && next === '$' && this._input.peek() === '{') {\n        next += this._input.next();\n      }\n\n      if (start_sub === next) {\n        if (delimiter === '`') {\n          next += this._read_string_recursive('}', allow_unescaped_newlines, '`');\n        } else {\n          next += this._read_string_recursive('`', allow_unescaped_newlines, '${');\n        }\n        if (this._input.hasNext()) {\n          next += this._input.next();\n        }\n      }\n    }\n    next += pattern.read();\n    resulting_string += next;\n  }\n\n  return resulting_string;\n};\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\nmodule.exports.positionable_operators = positionable_operators.slice();\nmodule.exports.line_starters = line_starters.slice();\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Output = require('../core/output').Output;\nvar Token = require('../core/token').Token;\nvar acorn = require('./acorn');\nvar Options = require('./options').Options;\nvar Tokenizer = require('./tokenizer').Tokenizer;\nvar line_starters = require('./tokenizer').line_starters;\nvar positionable_operators = require('./tokenizer').positionable_operators;\nvar TOKEN = require('./tokenizer').TOKEN;\n\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\nfunction ltrim(s) {\n  return s.replace(/^\\s+/g, '');\n}\n\nfunction generateMapFromStrings(list) {\n  var result = {};\n  for (var x = 0; x < list.length; x++) {\n    // make the mapped names underscored instead of dash\n    result[list[x].replace(/-/g, '_')] = list[x];\n  }\n  return result;\n}\n\nfunction reserved_word(token, word) {\n  return token && token.type === TOKEN.RESERVED && token.text === word;\n}\n\nfunction reserved_array(token, words) {\n  return token && token.type === TOKEN.RESERVED && in_array(token.text, words);\n}\n// Unsure of what they mean, but they work. Worth cleaning up in future.\nvar special_words = ['case', 'return', 'do', 'if', 'throw', 'else', 'await', 'break', 'continue', 'async'];\n\nvar validPositionValues = ['before-newline', 'after-newline', 'preserve-newline'];\n\n// Generate map from array\nvar OPERATOR_POSITION = generateMapFromStrings(validPositionValues);\n\nvar OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n\nvar MODE = {\n  BlockStatement: 'BlockStatement', // 'BLOCK'\n  Statement: 'Statement', // 'STATEMENT'\n  ObjectLiteral: 'ObjectLiteral', // 'OBJECT',\n  ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',\n  ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',\n  Conditional: 'Conditional', //'(COND-EXPRESSION)',\n  Expression: 'Expression' //'(EXPRESSION)'\n};\n\nfunction remove_redundant_indentation(output, frame) {\n  // This implementation is effective but has some issues:\n  //     - can cause line wrap to happen too soon due to indent removal\n  //           after wrap points are calculated\n  // These issues are minor compared to ugly indentation.\n\n  if (frame.multiline_frame ||\n    frame.mode === MODE.ForInitializer ||\n    frame.mode === MODE.Conditional) {\n    return;\n  }\n\n  // remove one indent from each line inside this section\n  output.remove_indent(frame.start_line_index);\n}\n\n// we could use just string.split, but\n// IE doesn't like returning empty strings\nfunction split_linebreaks(s) {\n  //return s.split(/\\x0d\\x0a|\\x0a/);\n\n  s = s.replace(acorn.allLineBreaks, '\\n');\n  var out = [],\n    idx = s.indexOf(\"\\n\");\n  while (idx !== -1) {\n    out.push(s.substring(0, idx));\n    s = s.substring(idx + 1);\n    idx = s.indexOf(\"\\n\");\n  }\n  if (s.length) {\n    out.push(s);\n  }\n  return out;\n}\n\nfunction is_array(mode) {\n  return mode === MODE.ArrayLiteral;\n}\n\nfunction is_expression(mode) {\n  return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n}\n\nfunction all_lines_start_with(lines, c) {\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i].trim();\n    if (line.charAt(0) !== c) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction each_line_matches_indent(lines, indent) {\n  var i = 0,\n    len = lines.length,\n    line;\n  for (; i < len; i++) {\n    line = lines[i];\n    // allow empty lines to pass through\n    if (line && line.indexOf(indent) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\nfunction Beautifier(source_text, options) {\n  options = options || {};\n  this._source_text = source_text || '';\n\n  this._output = null;\n  this._tokens = null;\n  this._last_last_text = null;\n  this._flags = null;\n  this._previous_flags = null;\n\n  this._flag_store = null;\n  this._options = new Options(options);\n}\n\nBeautifier.prototype.create_flags = function(flags_base, mode) {\n  var next_indent_level = 0;\n  if (flags_base) {\n    next_indent_level = flags_base.indentation_level;\n    if (!this._output.just_added_newline() &&\n      flags_base.line_indent_level > next_indent_level) {\n      next_indent_level = flags_base.line_indent_level;\n    }\n  }\n\n  var next_flags = {\n    mode: mode,\n    parent: flags_base,\n    last_token: flags_base ? flags_base.last_token : new Token(TOKEN.START_BLOCK, ''), // last token text\n    last_word: flags_base ? flags_base.last_word : '', // last TOKEN.WORD passed\n    declaration_statement: false,\n    declaration_assignment: false,\n    multiline_frame: false,\n    inline_frame: false,\n    if_block: false,\n    else_block: false,\n    class_start_block: false, // class A { INSIDE HERE } or class B extends C { INSIDE HERE }\n    do_block: false,\n    do_while: false,\n    import_block: false,\n    in_case_statement: false, // switch(..){ INSIDE HERE }\n    in_case: false, // we're on the exact line with \"case 0:\"\n    case_body: false, // the indented case-action block\n    case_block: false, // the indented case-action block is wrapped with {}\n    indentation_level: next_indent_level,\n    alignment: 0,\n    line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n    start_line_index: this._output.get_line_number(),\n    ternary_depth: 0\n  };\n  return next_flags;\n};\n\nBeautifier.prototype._reset = function(source_text) {\n  var baseIndentString = source_text.match(/^[\\t ]*/)[0];\n\n  this._last_last_text = ''; // pre-last token text\n  this._output = new Output(this._options, baseIndentString);\n\n  // If testing the ignore directive, start with output disable set to true\n  this._output.raw = this._options.test_output_raw;\n\n\n  // Stack of parsing/formatting states, including MODE.\n  // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n  // and formatted output.  This makes the beautifier less accurate than full parsers\n  // but also far more tolerant of syntax errors.\n  //\n  // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n  // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n  // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n  // most full parsers would die, but the beautifier gracefully falls back to\n  // MODE.BlockStatement and continues on.\n  this._flag_store = [];\n  this.set_mode(MODE.BlockStatement);\n  var tokenizer = new Tokenizer(source_text, this._options);\n  this._tokens = tokenizer.tokenize();\n  return source_text;\n};\n\nBeautifier.prototype.beautify = function() {\n  // if disabled, return the input unchanged.\n  if (this._options.disabled) {\n    return this._source_text;\n  }\n\n  var sweet_code;\n  var source_text = this._reset(this._source_text);\n\n  var eol = this._options.eol;\n  if (this._options.eol === 'auto') {\n    eol = '\\n';\n    if (source_text && acorn.lineBreak.test(source_text || '')) {\n      eol = source_text.match(acorn.lineBreak)[0];\n    }\n  }\n\n  var current_token = this._tokens.next();\n  while (current_token) {\n    this.handle_token(current_token);\n\n    this._last_last_text = this._flags.last_token.text;\n    this._flags.last_token = current_token;\n\n    current_token = this._tokens.next();\n  }\n\n  sweet_code = this._output.get_code(eol);\n\n  return sweet_code;\n};\n\nBeautifier.prototype.handle_token = function(current_token, preserve_statement_flags) {\n  if (current_token.type === TOKEN.START_EXPR) {\n    this.handle_start_expr(current_token);\n  } else if (current_token.type === TOKEN.END_EXPR) {\n    this.handle_end_expr(current_token);\n  } else if (current_token.type === TOKEN.START_BLOCK) {\n    this.handle_start_block(current_token);\n  } else if (current_token.type === TOKEN.END_BLOCK) {\n    this.handle_end_block(current_token);\n  } else if (current_token.type === TOKEN.WORD) {\n    this.handle_word(current_token);\n  } else if (current_token.type === TOKEN.RESERVED) {\n    this.handle_word(current_token);\n  } else if (current_token.type === TOKEN.SEMICOLON) {\n    this.handle_semicolon(current_token);\n  } else if (current_token.type === TOKEN.STRING) {\n    this.handle_string(current_token);\n  } else if (current_token.type === TOKEN.EQUALS) {\n    this.handle_equals(current_token);\n  } else if (current_token.type === TOKEN.OPERATOR) {\n    this.handle_operator(current_token);\n  } else if (current_token.type === TOKEN.COMMA) {\n    this.handle_comma(current_token);\n  } else if (current_token.type === TOKEN.BLOCK_COMMENT) {\n    this.handle_block_comment(current_token, preserve_statement_flags);\n  } else if (current_token.type === TOKEN.COMMENT) {\n    this.handle_comment(current_token, preserve_statement_flags);\n  } else if (current_token.type === TOKEN.DOT) {\n    this.handle_dot(current_token);\n  } else if (current_token.type === TOKEN.EOF) {\n    this.handle_eof(current_token);\n  } else if (current_token.type === TOKEN.UNKNOWN) {\n    this.handle_unknown(current_token, preserve_statement_flags);\n  } else {\n    this.handle_unknown(current_token, preserve_statement_flags);\n  }\n};\n\nBeautifier.prototype.handle_whitespace_and_comments = function(current_token, preserve_statement_flags) {\n  var newlines = current_token.newlines;\n  var keep_whitespace = this._options.keep_array_indentation && is_array(this._flags.mode);\n\n  if (current_token.comments_before) {\n    var comment_token = current_token.comments_before.next();\n    while (comment_token) {\n      // The cleanest handling of inline comments is to treat them as though they aren't there.\n      // Just continue formatting and the behavior should be logical.\n      // Also ignore unknown tokens.  Again, this should result in better behavior.\n      this.handle_whitespace_and_comments(comment_token, preserve_statement_flags);\n      this.handle_token(comment_token, preserve_statement_flags);\n      comment_token = current_token.comments_before.next();\n    }\n  }\n\n  if (keep_whitespace) {\n    for (var i = 0; i < newlines; i += 1) {\n      this.print_newline(i > 0, preserve_statement_flags);\n    }\n  } else {\n    if (this._options.max_preserve_newlines && newlines > this._options.max_preserve_newlines) {\n      newlines = this._options.max_preserve_newlines;\n    }\n\n    if (this._options.preserve_newlines) {\n      if (newlines > 1) {\n        this.print_newline(false, preserve_statement_flags);\n        for (var j = 1; j < newlines; j += 1) {\n          this.print_newline(true, preserve_statement_flags);\n        }\n      }\n    }\n  }\n\n};\n\nvar newline_restricted_tokens = ['async', 'break', 'continue', 'return', 'throw', 'yield'];\n\nBeautifier.prototype.allow_wrap_or_preserved_newline = function(current_token, force_linewrap) {\n  force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;\n\n  // Never wrap the first token on a line\n  if (this._output.just_added_newline()) {\n    return;\n  }\n\n  var shouldPreserveOrForce = (this._options.preserve_newlines && current_token.newlines) || force_linewrap;\n  var operatorLogicApplies = in_array(this._flags.last_token.text, positionable_operators) ||\n    in_array(current_token.text, positionable_operators);\n\n  if (operatorLogicApplies) {\n    var shouldPrintOperatorNewline = (\n        in_array(this._flags.last_token.text, positionable_operators) &&\n        in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)\n      ) ||\n      in_array(current_token.text, positionable_operators);\n    shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n  }\n\n  if (shouldPreserveOrForce) {\n    this.print_newline(false, true);\n  } else if (this._options.wrap_line_length) {\n    if (reserved_array(this._flags.last_token, newline_restricted_tokens)) {\n      // These tokens should never have a newline inserted\n      // between them and the following expression.\n      return;\n    }\n    this._output.set_wrap_point();\n  }\n};\n\nBeautifier.prototype.print_newline = function(force_newline, preserve_statement_flags) {\n  if (!preserve_statement_flags) {\n    if (this._flags.last_token.text !== ';' && this._flags.last_token.text !== ',' && this._flags.last_token.text !== '=' && (this._flags.last_token.type !== TOKEN.OPERATOR || this._flags.last_token.text === '--' || this._flags.last_token.text === '++')) {\n      var next_token = this._tokens.peek();\n      while (this._flags.mode === MODE.Statement &&\n        !(this._flags.if_block && reserved_word(next_token, 'else')) &&\n        !this._flags.do_block) {\n        this.restore_mode();\n      }\n    }\n  }\n\n  if (this._output.add_new_line(force_newline)) {\n    this._flags.multiline_frame = true;\n  }\n};\n\nBeautifier.prototype.print_token_line_indentation = function(current_token) {\n  if (this._output.just_added_newline()) {\n    if (this._options.keep_array_indentation &&\n      current_token.newlines &&\n      (current_token.text === '[' || is_array(this._flags.mode))) {\n      this._output.current_line.set_indent(-1);\n      this._output.current_line.push(current_token.whitespace_before);\n      this._output.space_before_token = false;\n    } else if (this._output.set_indent(this._flags.indentation_level, this._flags.alignment)) {\n      this._flags.line_indent_level = this._flags.indentation_level;\n    }\n  }\n};\n\nBeautifier.prototype.print_token = function(current_token) {\n  if (this._output.raw) {\n    this._output.add_raw_token(current_token);\n    return;\n  }\n\n  if (this._options.comma_first && current_token.previous && current_token.previous.type === TOKEN.COMMA &&\n    this._output.just_added_newline()) {\n    if (this._output.previous_line.last() === ',') {\n      var popped = this._output.previous_line.pop();\n      // if the comma was already at the start of the line,\n      // pull back onto that line and reprint the indentation\n      if (this._output.previous_line.is_empty()) {\n        this._output.previous_line.push(popped);\n        this._output.trim(true);\n        this._output.current_line.pop();\n        this._output.trim();\n      }\n\n      // add the comma in front of the next token\n      this.print_token_line_indentation(current_token);\n      this._output.add_token(',');\n      this._output.space_before_token = true;\n    }\n  }\n\n  this.print_token_line_indentation(current_token);\n  this._output.non_breaking_space = true;\n  this._output.add_token(current_token.text);\n  if (this._output.previous_token_wrapped) {\n    this._flags.multiline_frame = true;\n  }\n};\n\nBeautifier.prototype.indent = function() {\n  this._flags.indentation_level += 1;\n  this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n};\n\nBeautifier.prototype.deindent = function() {\n  if (this._flags.indentation_level > 0 &&\n    ((!this._flags.parent) || this._flags.indentation_level > this._flags.parent.indentation_level)) {\n    this._flags.indentation_level -= 1;\n    this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n  }\n};\n\nBeautifier.prototype.set_mode = function(mode) {\n  if (this._flags) {\n    this._flag_store.push(this._flags);\n    this._previous_flags = this._flags;\n  } else {\n    this._previous_flags = this.create_flags(null, mode);\n  }\n\n  this._flags = this.create_flags(this._previous_flags, mode);\n  this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n};\n\n\nBeautifier.prototype.restore_mode = function() {\n  if (this._flag_store.length > 0) {\n    this._previous_flags = this._flags;\n    this._flags = this._flag_store.pop();\n    if (this._previous_flags.mode === MODE.Statement) {\n      remove_redundant_indentation(this._output, this._previous_flags);\n    }\n    this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n  }\n};\n\nBeautifier.prototype.start_of_object_property = function() {\n  return this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement && (\n    (this._flags.last_token.text === ':' && this._flags.ternary_depth === 0) || (reserved_array(this._flags.last_token, ['get', 'set'])));\n};\n\nBeautifier.prototype.start_of_statement = function(current_token) {\n  var start = false;\n  start = start || reserved_array(this._flags.last_token, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD;\n  start = start || reserved_word(this._flags.last_token, 'do');\n  start = start || (!(this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement)) && reserved_array(this._flags.last_token, newline_restricted_tokens) && !current_token.newlines;\n  start = start || reserved_word(this._flags.last_token, 'else') &&\n    !(reserved_word(current_token, 'if') && !current_token.comments_before);\n  start = start || (this._flags.last_token.type === TOKEN.END_EXPR && (this._previous_flags.mode === MODE.ForInitializer || this._previous_flags.mode === MODE.Conditional));\n  start = start || (this._flags.last_token.type === TOKEN.WORD && this._flags.mode === MODE.BlockStatement &&\n    !this._flags.in_case &&\n    !(current_token.text === '--' || current_token.text === '++') &&\n    this._last_last_text !== 'function' &&\n    current_token.type !== TOKEN.WORD && current_token.type !== TOKEN.RESERVED);\n  start = start || (this._flags.mode === MODE.ObjectLiteral && (\n    (this._flags.last_token.text === ':' && this._flags.ternary_depth === 0) || reserved_array(this._flags.last_token, ['get', 'set'])));\n\n  if (start) {\n    this.set_mode(MODE.Statement);\n    this.indent();\n\n    this.handle_whitespace_and_comments(current_token, true);\n\n    // Issue #276:\n    // If starting a new statement with [if, for, while, do], push to a new line.\n    // if (a) if (b) if(c) d(); else e(); else f();\n    if (!this.start_of_object_property()) {\n      this.allow_wrap_or_preserved_newline(current_token,\n        reserved_array(current_token, ['do', 'for', 'if', 'while']));\n    }\n    return true;\n  }\n  return false;\n};\n\nBeautifier.prototype.handle_start_expr = function(current_token) {\n  // The conditional starts the statement if appropriate.\n  if (!this.start_of_statement(current_token)) {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  var next_mode = MODE.Expression;\n  if (current_token.text === '[') {\n\n    if (this._flags.last_token.type === TOKEN.WORD || this._flags.last_token.text === ')') {\n      // this is array index specifier, break immediately\n      // a[x], fn()[x]\n      if (reserved_array(this._flags.last_token, line_starters)) {\n        this._output.space_before_token = true;\n      }\n      this.print_token(current_token);\n      this.set_mode(next_mode);\n      this.indent();\n      if (this._options.space_in_paren) {\n        this._output.space_before_token = true;\n      }\n      return;\n    }\n\n    next_mode = MODE.ArrayLiteral;\n    if (is_array(this._flags.mode)) {\n      if (this._flags.last_token.text === '[' ||\n        (this._flags.last_token.text === ',' && (this._last_last_text === ']' || this._last_last_text === '}'))) {\n        // ], [ goes to new line\n        // }, [ goes to new line\n        if (!this._options.keep_array_indentation) {\n          this.print_newline();\n        }\n      }\n    }\n\n    if (!in_array(this._flags.last_token.type, [TOKEN.START_EXPR, TOKEN.END_EXPR, TOKEN.WORD, TOKEN.OPERATOR, TOKEN.DOT])) {\n      this._output.space_before_token = true;\n    }\n  } else {\n    if (this._flags.last_token.type === TOKEN.RESERVED) {\n      if (this._flags.last_token.text === 'for') {\n        this._output.space_before_token = this._options.space_before_conditional;\n        next_mode = MODE.ForInitializer;\n      } else if (in_array(this._flags.last_token.text, ['if', 'while', 'switch'])) {\n        this._output.space_before_token = this._options.space_before_conditional;\n        next_mode = MODE.Conditional;\n      } else if (in_array(this._flags.last_word, ['await', 'async'])) {\n        // Should be a space between await and an IIFE, or async and an arrow function\n        this._output.space_before_token = true;\n      } else if (this._flags.last_token.text === 'import' && current_token.whitespace_before === '') {\n        this._output.space_before_token = false;\n      } else if (in_array(this._flags.last_token.text, line_starters) || this._flags.last_token.text === 'catch') {\n        this._output.space_before_token = true;\n      }\n    } else if (this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n      // Support of this kind of newline preservation.\n      // a = (b &&\n      //     (c || d));\n      if (!this.start_of_object_property()) {\n        this.allow_wrap_or_preserved_newline(current_token);\n      }\n    } else if (this._flags.last_token.type === TOKEN.WORD) {\n      this._output.space_before_token = false;\n\n      // function name() vs function name ()\n      // function* name() vs function* name ()\n      // async name() vs async name ()\n      // In ES6, you can also define the method properties of an object\n      // var obj = {a: function() {}}\n      // It can be abbreviated\n      // var obj = {a() {}}\n      // var obj = { a() {}} vs var obj = { a () {}}\n      // var obj = { * a() {}} vs var obj = { * a () {}}\n      var peek_back_two = this._tokens.peek(-3);\n      if (this._options.space_after_named_function && peek_back_two) {\n        // peek starts at next character so -1 is current token\n        var peek_back_three = this._tokens.peek(-4);\n        if (reserved_array(peek_back_two, ['async', 'function']) ||\n          (peek_back_two.text === '*' && reserved_array(peek_back_three, ['async', 'function']))) {\n          this._output.space_before_token = true;\n        } else if (this._flags.mode === MODE.ObjectLiteral) {\n          if ((peek_back_two.text === '{' || peek_back_two.text === ',') ||\n            (peek_back_two.text === '*' && (peek_back_three.text === '{' || peek_back_three.text === ','))) {\n            this._output.space_before_token = true;\n          }\n        } else if (this._flags.parent && this._flags.parent.class_start_block) {\n          this._output.space_before_token = true;\n        }\n      }\n    } else {\n      // Support preserving wrapped arrow function expressions\n      // a.b('c',\n      //     () => d.e\n      // )\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n\n    // function() vs function ()\n    // yield*() vs yield* ()\n    // function*() vs function* ()\n    if ((this._flags.last_token.type === TOKEN.RESERVED && (this._flags.last_word === 'function' || this._flags.last_word === 'typeof')) ||\n      (this._flags.last_token.text === '*' &&\n        (in_array(this._last_last_text, ['function', 'yield']) ||\n          (this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ['{', ',']))))) {\n      this._output.space_before_token = this._options.space_after_anon_function;\n    }\n  }\n\n  if (this._flags.last_token.text === ';' || this._flags.last_token.type === TOKEN.START_BLOCK) {\n    this.print_newline();\n  } else if (this._flags.last_token.type === TOKEN.END_EXPR || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.END_BLOCK || this._flags.last_token.text === '.' || this._flags.last_token.type === TOKEN.COMMA) {\n    // do nothing on (( and )( and ][ and ]( and .(\n    // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n    this.allow_wrap_or_preserved_newline(current_token, current_token.newlines);\n  }\n\n  this.print_token(current_token);\n  this.set_mode(next_mode);\n  if (this._options.space_in_paren) {\n    this._output.space_before_token = true;\n  }\n\n  // In all cases, if we newline while inside an expression it should be indented.\n  this.indent();\n};\n\nBeautifier.prototype.handle_end_expr = function(current_token) {\n  // statements inside expressions are not valid syntax, but...\n  // statements must all be closed when their container closes\n  while (this._flags.mode === MODE.Statement) {\n    this.restore_mode();\n  }\n\n  this.handle_whitespace_and_comments(current_token);\n\n  if (this._flags.multiline_frame) {\n    this.allow_wrap_or_preserved_newline(current_token,\n      current_token.text === ']' && is_array(this._flags.mode) && !this._options.keep_array_indentation);\n  }\n\n  if (this._options.space_in_paren) {\n    if (this._flags.last_token.type === TOKEN.START_EXPR && !this._options.space_in_empty_paren) {\n      // () [] no inner space in empty parens like these, ever, ref #320\n      this._output.trim();\n      this._output.space_before_token = false;\n    } else {\n      this._output.space_before_token = true;\n    }\n  }\n  this.deindent();\n  this.print_token(current_token);\n  this.restore_mode();\n\n  remove_redundant_indentation(this._output, this._previous_flags);\n\n  // do {} while () // no statement required after\n  if (this._flags.do_while && this._previous_flags.mode === MODE.Conditional) {\n    this._previous_flags.mode = MODE.Expression;\n    this._flags.do_block = false;\n    this._flags.do_while = false;\n\n  }\n};\n\nBeautifier.prototype.handle_start_block = function(current_token) {\n  this.handle_whitespace_and_comments(current_token);\n\n  // Check if this is should be treated as a ObjectLiteral\n  var next_token = this._tokens.peek();\n  var second_token = this._tokens.peek(1);\n  if (this._flags.last_word === 'switch' && this._flags.last_token.type === TOKEN.END_EXPR) {\n    this.set_mode(MODE.BlockStatement);\n    this._flags.in_case_statement = true;\n  } else if (this._flags.case_body) {\n    this.set_mode(MODE.BlockStatement);\n  } else if (second_token && (\n      (in_array(second_token.text, [':', ',']) && in_array(next_token.type, [TOKEN.STRING, TOKEN.WORD, TOKEN.RESERVED])) ||\n      (in_array(next_token.text, ['get', 'set', '...']) && in_array(second_token.type, [TOKEN.WORD, TOKEN.RESERVED]))\n    )) {\n    // We don't support TypeScript,but we didn't break it for a very long time.\n    // We'll try to keep not breaking it.\n    if (in_array(this._last_last_text, ['class', 'interface']) && !in_array(second_token.text, [':', ','])) {\n      this.set_mode(MODE.BlockStatement);\n    } else {\n      this.set_mode(MODE.ObjectLiteral);\n    }\n  } else if (this._flags.last_token.type === TOKEN.OPERATOR && this._flags.last_token.text === '=>') {\n    // arrow function: (param1, paramN) => { statements }\n    this.set_mode(MODE.BlockStatement);\n  } else if (in_array(this._flags.last_token.type, [TOKEN.EQUALS, TOKEN.START_EXPR, TOKEN.COMMA, TOKEN.OPERATOR]) ||\n    reserved_array(this._flags.last_token, ['return', 'throw', 'import', 'default'])\n  ) {\n    // Detecting shorthand function syntax is difficult by scanning forward,\n    //     so check the surrounding context.\n    // If the block is being returned, imported, export default, passed as arg,\n    //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n    this.set_mode(MODE.ObjectLiteral);\n  } else {\n    this.set_mode(MODE.BlockStatement);\n  }\n\n  if (this._flags.last_token) {\n    if (reserved_array(this._flags.last_token.previous, ['class', 'extends'])) {\n      this._flags.class_start_block = true;\n    }\n  }\n\n  var empty_braces = !next_token.comments_before && next_token.text === '}';\n  var empty_anonymous_function = empty_braces && this._flags.last_word === 'function' &&\n    this._flags.last_token.type === TOKEN.END_EXPR;\n\n  if (this._options.brace_preserve_inline) // check for inline, set inline_frame if so\n  {\n    // search forward for a newline wanted inside this block\n    var index = 0;\n    var check_token = null;\n    this._flags.inline_frame = true;\n    do {\n      index += 1;\n      check_token = this._tokens.peek(index - 1);\n      if (check_token.newlines) {\n        this._flags.inline_frame = false;\n        break;\n      }\n    } while (check_token.type !== TOKEN.EOF &&\n      !(check_token.type === TOKEN.END_BLOCK && check_token.opened === current_token));\n  }\n\n  if ((this._options.brace_style === \"expand\" ||\n      (this._options.brace_style === \"none\" && current_token.newlines)) &&\n    !this._flags.inline_frame) {\n    if (this._flags.last_token.type !== TOKEN.OPERATOR &&\n      (empty_anonymous_function ||\n        this._flags.last_token.type === TOKEN.EQUALS ||\n        (reserved_array(this._flags.last_token, special_words) && this._flags.last_token.text !== 'else'))) {\n      this._output.space_before_token = true;\n    } else {\n      this.print_newline(false, true);\n    }\n  } else { // collapse || inline_frame\n    if (is_array(this._previous_flags.mode) && (this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.COMMA)) {\n      if (this._flags.last_token.type === TOKEN.COMMA || this._options.space_in_paren) {\n        this._output.space_before_token = true;\n      }\n\n      if (this._flags.last_token.type === TOKEN.COMMA || (this._flags.last_token.type === TOKEN.START_EXPR && this._flags.inline_frame)) {\n        this.allow_wrap_or_preserved_newline(current_token);\n        this._previous_flags.multiline_frame = this._previous_flags.multiline_frame || this._flags.multiline_frame;\n        this._flags.multiline_frame = false;\n      }\n    }\n    if (this._flags.last_token.type !== TOKEN.OPERATOR && this._flags.last_token.type !== TOKEN.START_EXPR) {\n      if (in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.SEMICOLON]) && !this._flags.inline_frame) {\n        this.print_newline();\n      } else {\n        this._output.space_before_token = true;\n      }\n    }\n  }\n  this.print_token(current_token);\n  this.indent();\n\n  // Except for specific cases, open braces are followed by a new line.\n  if (!empty_braces && !(this._options.brace_preserve_inline && this._flags.inline_frame)) {\n    this.print_newline();\n  }\n};\n\nBeautifier.prototype.handle_end_block = function(current_token) {\n  // statements must all be closed when their container closes\n  this.handle_whitespace_and_comments(current_token);\n\n  while (this._flags.mode === MODE.Statement) {\n    this.restore_mode();\n  }\n\n  var empty_braces = this._flags.last_token.type === TOKEN.START_BLOCK;\n\n  if (this._flags.inline_frame && !empty_braces) { // try inline_frame (only set if this._options.braces-preserve-inline) first\n    this._output.space_before_token = true;\n  } else if (this._options.brace_style === \"expand\") {\n    if (!empty_braces) {\n      this.print_newline();\n    }\n  } else {\n    // skip {}\n    if (!empty_braces) {\n      if (is_array(this._flags.mode) && this._options.keep_array_indentation) {\n        // we REALLY need a newline here, but newliner would skip that\n        this._options.keep_array_indentation = false;\n        this.print_newline();\n        this._options.keep_array_indentation = true;\n\n      } else {\n        this.print_newline();\n      }\n    }\n  }\n  this.restore_mode();\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_word = function(current_token) {\n  if (current_token.type === TOKEN.RESERVED) {\n    if (in_array(current_token.text, ['set', 'get']) && this._flags.mode !== MODE.ObjectLiteral) {\n      current_token.type = TOKEN.WORD;\n    } else if (current_token.text === 'import' && in_array(this._tokens.peek().text, ['(', '.'])) {\n      current_token.type = TOKEN.WORD;\n    } else if (in_array(current_token.text, ['as', 'from']) && !this._flags.import_block) {\n      current_token.type = TOKEN.WORD;\n    } else if (this._flags.mode === MODE.ObjectLiteral) {\n      var next_token = this._tokens.peek();\n      if (next_token.text === ':') {\n        current_token.type = TOKEN.WORD;\n      }\n    }\n  }\n\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n    if (reserved_array(this._flags.last_token, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD) {\n      this._flags.declaration_statement = true;\n    }\n  } else if (current_token.newlines && !is_expression(this._flags.mode) &&\n    (this._flags.last_token.type !== TOKEN.OPERATOR || (this._flags.last_token.text === '--' || this._flags.last_token.text === '++')) &&\n    this._flags.last_token.type !== TOKEN.EQUALS &&\n    (this._options.preserve_newlines || !reserved_array(this._flags.last_token, ['var', 'let', 'const', 'set', 'get']))) {\n    this.handle_whitespace_and_comments(current_token);\n    this.print_newline();\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  if (this._flags.do_block && !this._flags.do_while) {\n    if (reserved_word(current_token, 'while')) {\n      // do {} ## while ()\n      this._output.space_before_token = true;\n      this.print_token(current_token);\n      this._output.space_before_token = true;\n      this._flags.do_while = true;\n      return;\n    } else {\n      // do {} should always have while as the next word.\n      // if we don't see the expected while, recover\n      this.print_newline();\n      this._flags.do_block = false;\n    }\n  }\n\n  // if may be followed by else, or not\n  // Bare/inline ifs are tricky\n  // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n  if (this._flags.if_block) {\n    if (!this._flags.else_block && reserved_word(current_token, 'else')) {\n      this._flags.else_block = true;\n    } else {\n      while (this._flags.mode === MODE.Statement) {\n        this.restore_mode();\n      }\n      this._flags.if_block = false;\n      this._flags.else_block = false;\n    }\n  }\n\n  if (this._flags.in_case_statement && reserved_array(current_token, ['case', 'default'])) {\n    this.print_newline();\n    if (!this._flags.case_block && (this._flags.case_body || this._options.jslint_happy)) {\n      // switch cases following one another\n      this.deindent();\n    }\n    this._flags.case_body = false;\n\n    this.print_token(current_token);\n    this._flags.in_case = true;\n    return;\n  }\n\n  if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n    if (!this.start_of_object_property() && !(\n        // start of object property is different for numeric values with +/- prefix operators\n        in_array(this._flags.last_token.text, ['+', '-']) && this._last_last_text === ':' && this._flags.parent.mode === MODE.ObjectLiteral)) {\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n  }\n\n  if (reserved_word(current_token, 'function')) {\n    if (in_array(this._flags.last_token.text, ['}', ';']) ||\n      (this._output.just_added_newline() && !(in_array(this._flags.last_token.text, ['(', '[', '{', ':', '=', ',']) || this._flags.last_token.type === TOKEN.OPERATOR))) {\n      // make sure there is a nice clean space of at least one blank line\n      // before a new function definition\n      if (!this._output.just_added_blankline() && !current_token.comments_before) {\n        this.print_newline();\n        this.print_newline(true);\n      }\n    }\n    if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD) {\n      if (reserved_array(this._flags.last_token, ['get', 'set', 'new', 'export']) ||\n        reserved_array(this._flags.last_token, newline_restricted_tokens)) {\n        this._output.space_before_token = true;\n      } else if (reserved_word(this._flags.last_token, 'default') && this._last_last_text === 'export') {\n        this._output.space_before_token = true;\n      } else if (this._flags.last_token.text === 'declare') {\n        // accomodates Typescript declare function formatting\n        this._output.space_before_token = true;\n      } else {\n        this.print_newline();\n      }\n    } else if (this._flags.last_token.type === TOKEN.OPERATOR || this._flags.last_token.text === '=') {\n      // foo = function\n      this._output.space_before_token = true;\n    } else if (!this._flags.multiline_frame && (is_expression(this._flags.mode) || is_array(this._flags.mode))) {\n      // (function\n    } else {\n      this.print_newline();\n    }\n\n    this.print_token(current_token);\n    this._flags.last_word = current_token.text;\n    return;\n  }\n\n  var prefix = 'NONE';\n\n  if (this._flags.last_token.type === TOKEN.END_BLOCK) {\n\n    if (this._previous_flags.inline_frame) {\n      prefix = 'SPACE';\n    } else if (!reserved_array(current_token, ['else', 'catch', 'finally', 'from'])) {\n      prefix = 'NEWLINE';\n    } else {\n      if (this._options.brace_style === \"expand\" ||\n        this._options.brace_style === \"end-expand\" ||\n        (this._options.brace_style === \"none\" && current_token.newlines)) {\n        prefix = 'NEWLINE';\n      } else {\n        prefix = 'SPACE';\n        this._output.space_before_token = true;\n      }\n    }\n  } else if (this._flags.last_token.type === TOKEN.SEMICOLON && this._flags.mode === MODE.BlockStatement) {\n    // TODO: Should this be for STATEMENT as well?\n    prefix = 'NEWLINE';\n  } else if (this._flags.last_token.type === TOKEN.SEMICOLON && is_expression(this._flags.mode)) {\n    prefix = 'SPACE';\n  } else if (this._flags.last_token.type === TOKEN.STRING) {\n    prefix = 'NEWLINE';\n  } else if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD ||\n    (this._flags.last_token.text === '*' &&\n      (in_array(this._last_last_text, ['function', 'yield']) ||\n        (this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ['{', ',']))))) {\n    prefix = 'SPACE';\n  } else if (this._flags.last_token.type === TOKEN.START_BLOCK) {\n    if (this._flags.inline_frame) {\n      prefix = 'SPACE';\n    } else {\n      prefix = 'NEWLINE';\n    }\n  } else if (this._flags.last_token.type === TOKEN.END_EXPR) {\n    this._output.space_before_token = true;\n    prefix = 'NEWLINE';\n  }\n\n  if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ')') {\n    if (this._flags.inline_frame || this._flags.last_token.text === 'else' || this._flags.last_token.text === 'export') {\n      prefix = 'SPACE';\n    } else {\n      prefix = 'NEWLINE';\n    }\n\n  }\n\n  if (reserved_array(current_token, ['else', 'catch', 'finally'])) {\n    if ((!(this._flags.last_token.type === TOKEN.END_BLOCK && this._previous_flags.mode === MODE.BlockStatement) ||\n        this._options.brace_style === \"expand\" ||\n        this._options.brace_style === \"end-expand\" ||\n        (this._options.brace_style === \"none\" && current_token.newlines)) &&\n      !this._flags.inline_frame) {\n      this.print_newline();\n    } else {\n      this._output.trim(true);\n      var line = this._output.current_line;\n      // If we trimmed and there's something other than a close block before us\n      // put a newline back in.  Handles '} // comment' scenario.\n      if (line.last() !== '}') {\n        this.print_newline();\n      }\n      this._output.space_before_token = true;\n    }\n  } else if (prefix === 'NEWLINE') {\n    if (reserved_array(this._flags.last_token, special_words)) {\n      // no newline between 'return nnn'\n      this._output.space_before_token = true;\n    } else if (this._flags.last_token.text === 'declare' && reserved_array(current_token, ['var', 'let', 'const'])) {\n      // accomodates Typescript declare formatting\n      this._output.space_before_token = true;\n    } else if (this._flags.last_token.type !== TOKEN.END_EXPR) {\n      if ((this._flags.last_token.type !== TOKEN.START_EXPR || !reserved_array(current_token, ['var', 'let', 'const'])) && this._flags.last_token.text !== ':') {\n        // no need to force newline on 'var': for (var x = 0...)\n        if (reserved_word(current_token, 'if') && reserved_word(current_token.previous, 'else')) {\n          // no newline for } else if {\n          this._output.space_before_token = true;\n        } else {\n          this.print_newline();\n        }\n      }\n    } else if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ')') {\n      this.print_newline();\n    }\n  } else if (this._flags.multiline_frame && is_array(this._flags.mode) && this._flags.last_token.text === ',' && this._last_last_text === '}') {\n    this.print_newline(); // }, in lists get a newline treatment\n  } else if (prefix === 'SPACE') {\n    this._output.space_before_token = true;\n  }\n  if (current_token.previous && (current_token.previous.type === TOKEN.WORD || current_token.previous.type === TOKEN.RESERVED)) {\n    this._output.space_before_token = true;\n  }\n  this.print_token(current_token);\n  this._flags.last_word = current_token.text;\n\n  if (current_token.type === TOKEN.RESERVED) {\n    if (current_token.text === 'do') {\n      this._flags.do_block = true;\n    } else if (current_token.text === 'if') {\n      this._flags.if_block = true;\n    } else if (current_token.text === 'import') {\n      this._flags.import_block = true;\n    } else if (this._flags.import_block && reserved_word(current_token, 'from')) {\n      this._flags.import_block = false;\n    }\n  }\n};\n\nBeautifier.prototype.handle_semicolon = function(current_token) {\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n    // Semicolon can be the start (and end) of a statement\n    this._output.space_before_token = false;\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  var next_token = this._tokens.peek();\n  while (this._flags.mode === MODE.Statement &&\n    !(this._flags.if_block && reserved_word(next_token, 'else')) &&\n    !this._flags.do_block) {\n    this.restore_mode();\n  }\n\n  // hacky but effective for the moment\n  if (this._flags.import_block) {\n    this._flags.import_block = false;\n  }\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_string = function(current_token) {\n  if (current_token.text.startsWith(\"`\") && current_token.newlines === 0 && current_token.whitespace_before === '' && (current_token.previous.text === ')' || this._flags.last_token.type === TOKEN.WORD)) {\n    //Conditional for detectign backtick strings\n  } else if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n    // One difference - strings want at least a space before\n    this._output.space_before_token = true;\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n    if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD || this._flags.inline_frame) {\n      this._output.space_before_token = true;\n    } else if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n      if (!this.start_of_object_property()) {\n        this.allow_wrap_or_preserved_newline(current_token);\n      }\n    } else if ((current_token.text.startsWith(\"`\") && this._flags.last_token.type === TOKEN.END_EXPR && (current_token.previous.text === ']' || current_token.previous.text === ')') && current_token.newlines === 0)) {\n      this._output.space_before_token = true;\n    } else {\n      this.print_newline();\n    }\n  }\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_equals = function(current_token) {\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  if (this._flags.declaration_statement) {\n    // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n    this._flags.declaration_assignment = true;\n  }\n  this._output.space_before_token = true;\n  this.print_token(current_token);\n  this._output.space_before_token = true;\n};\n\nBeautifier.prototype.handle_comma = function(current_token) {\n  this.handle_whitespace_and_comments(current_token, true);\n\n  this.print_token(current_token);\n  this._output.space_before_token = true;\n  if (this._flags.declaration_statement) {\n    if (is_expression(this._flags.parent.mode)) {\n      // do not break on comma, for(var a = 1, b = 2)\n      this._flags.declaration_assignment = false;\n    }\n\n    if (this._flags.declaration_assignment) {\n      this._flags.declaration_assignment = false;\n      this.print_newline(false, true);\n    } else if (this._options.comma_first) {\n      // for comma-first, we want to allow a newline before the comma\n      // to turn into a newline after the comma, which we will fixup later\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n  } else if (this._flags.mode === MODE.ObjectLiteral ||\n    (this._flags.mode === MODE.Statement && this._flags.parent.mode === MODE.ObjectLiteral)) {\n    if (this._flags.mode === MODE.Statement) {\n      this.restore_mode();\n    }\n\n    if (!this._flags.inline_frame) {\n      this.print_newline();\n    }\n  } else if (this._options.comma_first) {\n    // EXPR or DO_BLOCK\n    // for comma-first, we want to allow a newline before the comma\n    // to turn into a newline after the comma, which we will fixup later\n    this.allow_wrap_or_preserved_newline(current_token);\n  }\n};\n\nBeautifier.prototype.handle_operator = function(current_token) {\n  var isGeneratorAsterisk = current_token.text === '*' &&\n    (reserved_array(this._flags.last_token, ['function', 'yield']) ||\n      (in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.COMMA, TOKEN.END_BLOCK, TOKEN.SEMICOLON]))\n    );\n  var isUnary = in_array(current_token.text, ['-', '+']) && (\n    in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.START_EXPR, TOKEN.EQUALS, TOKEN.OPERATOR]) ||\n    in_array(this._flags.last_token.text, line_starters) ||\n    this._flags.last_token.text === ','\n  );\n\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n  } else {\n    var preserve_statement_flags = !isGeneratorAsterisk;\n    this.handle_whitespace_and_comments(current_token, preserve_statement_flags);\n  }\n\n  // hack for actionscript's import .*;\n  if (current_token.text === '*' && this._flags.last_token.type === TOKEN.DOT) {\n    this.print_token(current_token);\n    return;\n  }\n\n  if (current_token.text === '::') {\n    // no spaces around exotic namespacing syntax operator\n    this.print_token(current_token);\n    return;\n  }\n\n  if (in_array(current_token.text, ['-', '+']) && this.start_of_object_property()) {\n    // numeric value with +/- symbol in front as a property\n    this.print_token(current_token);\n    return;\n  }\n\n  // Allow line wrapping between operators when operator_position is\n  //   set to before or preserve\n  if (this._flags.last_token.type === TOKEN.OPERATOR && in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n    this.allow_wrap_or_preserved_newline(current_token);\n  }\n\n  if (current_token.text === ':' && this._flags.in_case) {\n    this.print_token(current_token);\n\n    this._flags.in_case = false;\n    this._flags.case_body = true;\n    if (this._tokens.peek().type !== TOKEN.START_BLOCK) {\n      this.indent();\n      this.print_newline();\n      this._flags.case_block = false;\n    } else {\n      this._flags.case_block = true;\n      this._output.space_before_token = true;\n    }\n    return;\n  }\n\n  var space_before = true;\n  var space_after = true;\n  var in_ternary = false;\n  if (current_token.text === ':') {\n    if (this._flags.ternary_depth === 0) {\n      // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n      space_before = false;\n    } else {\n      this._flags.ternary_depth -= 1;\n      in_ternary = true;\n    }\n  } else if (current_token.text === '?') {\n    this._flags.ternary_depth += 1;\n  }\n\n  // let's handle the operator_position option prior to any conflicting logic\n  if (!isUnary && !isGeneratorAsterisk && this._options.preserve_newlines && in_array(current_token.text, positionable_operators)) {\n    var isColon = current_token.text === ':';\n    var isTernaryColon = (isColon && in_ternary);\n    var isOtherColon = (isColon && !in_ternary);\n\n    switch (this._options.operator_position) {\n      case OPERATOR_POSITION.before_newline:\n        // if the current token is : and it's not a ternary statement then we set space_before to false\n        this._output.space_before_token = !isOtherColon;\n\n        this.print_token(current_token);\n\n        if (!isColon || isTernaryColon) {\n          this.allow_wrap_or_preserved_newline(current_token);\n        }\n\n        this._output.space_before_token = true;\n        return;\n\n      case OPERATOR_POSITION.after_newline:\n        // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n        //   then print a newline.\n\n        this._output.space_before_token = true;\n\n        if (!isColon || isTernaryColon) {\n          if (this._tokens.peek().newlines) {\n            this.print_newline(false, true);\n          } else {\n            this.allow_wrap_or_preserved_newline(current_token);\n          }\n        } else {\n          this._output.space_before_token = false;\n        }\n\n        this.print_token(current_token);\n\n        this._output.space_before_token = true;\n        return;\n\n      case OPERATOR_POSITION.preserve_newline:\n        if (!isOtherColon) {\n          this.allow_wrap_or_preserved_newline(current_token);\n        }\n\n        // if we just added a newline, or the current token is : and it's not a ternary statement,\n        //   then we set space_before to false\n        space_before = !(this._output.just_added_newline() || isOtherColon);\n\n        this._output.space_before_token = space_before;\n        this.print_token(current_token);\n        this._output.space_before_token = true;\n        return;\n    }\n  }\n\n  if (isGeneratorAsterisk) {\n    this.allow_wrap_or_preserved_newline(current_token);\n    space_before = false;\n    var next_token = this._tokens.peek();\n    space_after = next_token && in_array(next_token.type, [TOKEN.WORD, TOKEN.RESERVED]);\n  } else if (current_token.text === '...') {\n    this.allow_wrap_or_preserved_newline(current_token);\n    space_before = this._flags.last_token.type === TOKEN.START_BLOCK;\n    space_after = false;\n  } else if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n    // unary operators (and binary +/- pretending to be unary) special cases\n    if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR) {\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n\n    space_before = false;\n    space_after = false;\n\n    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n    // if there is a newline between -- or ++ and anything else we should preserve it.\n    if (current_token.newlines && (current_token.text === '--' || current_token.text === '++' || current_token.text === '~')) {\n      var new_line_needed = reserved_array(this._flags.last_token, special_words) && current_token.newlines;\n      if (new_line_needed && (this._previous_flags.if_block || this._previous_flags.else_block)) {\n        this.restore_mode();\n      }\n      this.print_newline(new_line_needed, true);\n    }\n\n    if (this._flags.last_token.text === ';' && is_expression(this._flags.mode)) {\n      // for (;; ++i)\n      //        ^^^\n      space_before = true;\n    }\n\n    if (this._flags.last_token.type === TOKEN.RESERVED) {\n      space_before = true;\n    } else if (this._flags.last_token.type === TOKEN.END_EXPR) {\n      space_before = !(this._flags.last_token.text === ']' && (current_token.text === '--' || current_token.text === '++'));\n    } else if (this._flags.last_token.type === TOKEN.OPERATOR) {\n      // a++ + ++b;\n      // a - -b\n      space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(this._flags.last_token.text, ['--', '-', '++', '+']);\n      // + and - are not unary when preceeded by -- or ++ operator\n      // a-- + b\n      // a * +b\n      // a - -b\n      if (in_array(current_token.text, ['+', '-']) && in_array(this._flags.last_token.text, ['--', '++'])) {\n        space_after = true;\n      }\n    }\n\n\n    if (((this._flags.mode === MODE.BlockStatement && !this._flags.inline_frame) || this._flags.mode === MODE.Statement) &&\n      (this._flags.last_token.text === '{' || this._flags.last_token.text === ';')) {\n      // { foo; --i }\n      // foo(); --bar;\n      this.print_newline();\n    }\n  }\n\n  this._output.space_before_token = this._output.space_before_token || space_before;\n  this.print_token(current_token);\n  this._output.space_before_token = space_after;\n};\n\nBeautifier.prototype.handle_block_comment = function(current_token, preserve_statement_flags) {\n  if (this._output.raw) {\n    this._output.add_raw_token(current_token);\n    if (current_token.directives && current_token.directives.preserve === 'end') {\n      // If we're testing the raw output behavior, do not allow a directive to turn it off.\n      this._output.raw = this._options.test_output_raw;\n    }\n    return;\n  }\n\n  if (current_token.directives) {\n    this.print_newline(false, preserve_statement_flags);\n    this.print_token(current_token);\n    if (current_token.directives.preserve === 'start') {\n      this._output.raw = true;\n    }\n    this.print_newline(false, true);\n    return;\n  }\n\n  // inline block\n  if (!acorn.newline.test(current_token.text) && !current_token.newlines) {\n    this._output.space_before_token = true;\n    this.print_token(current_token);\n    this._output.space_before_token = true;\n    return;\n  } else {\n    this.print_block_commment(current_token, preserve_statement_flags);\n  }\n};\n\nBeautifier.prototype.print_block_commment = function(current_token, preserve_statement_flags) {\n  var lines = split_linebreaks(current_token.text);\n  var j; // iterator for this case\n  var javadoc = false;\n  var starless = false;\n  var lastIndent = current_token.whitespace_before;\n  var lastIndentLength = lastIndent.length;\n\n  // block comment starts with a new line\n  this.print_newline(false, preserve_statement_flags);\n\n  // first line always indented\n  this.print_token_line_indentation(current_token);\n  this._output.add_token(lines[0]);\n  this.print_newline(false, preserve_statement_flags);\n\n\n  if (lines.length > 1) {\n    lines = lines.slice(1);\n    javadoc = all_lines_start_with(lines, '*');\n    starless = each_line_matches_indent(lines, lastIndent);\n\n    if (javadoc) {\n      this._flags.alignment = 1;\n    }\n\n    for (j = 0; j < lines.length; j++) {\n      if (javadoc) {\n        // javadoc: reformat and re-indent\n        this.print_token_line_indentation(current_token);\n        this._output.add_token(ltrim(lines[j]));\n      } else if (starless && lines[j]) {\n        // starless: re-indent non-empty content, avoiding trim\n        this.print_token_line_indentation(current_token);\n        this._output.add_token(lines[j].substring(lastIndentLength));\n      } else {\n        // normal comments output raw\n        this._output.current_line.set_indent(-1);\n        this._output.add_token(lines[j]);\n      }\n\n      // for comments on their own line or  more than one line, make sure there's a new line after\n      this.print_newline(false, preserve_statement_flags);\n    }\n\n    this._flags.alignment = 0;\n  }\n};\n\n\nBeautifier.prototype.handle_comment = function(current_token, preserve_statement_flags) {\n  if (current_token.newlines) {\n    this.print_newline(false, preserve_statement_flags);\n  } else {\n    this._output.trim(true);\n  }\n\n  this._output.space_before_token = true;\n  this.print_token(current_token);\n  this.print_newline(false, preserve_statement_flags);\n};\n\nBeautifier.prototype.handle_dot = function(current_token) {\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n  } else {\n    this.handle_whitespace_and_comments(current_token, true);\n  }\n\n  if (this._flags.last_token.text.match('^[0-9]+$')) {\n    this._output.space_before_token = true;\n  }\n\n  if (reserved_array(this._flags.last_token, special_words)) {\n    this._output.space_before_token = false;\n  } else {\n    // allow preserved newlines before dots in general\n    // force newlines on dots after close paren when break_chained - for bar().baz()\n    this.allow_wrap_or_preserved_newline(current_token,\n      this._flags.last_token.text === ')' && this._options.break_chained_methods);\n  }\n\n  // Only unindent chained method dot if this dot starts a new line.\n  // Otherwise the automatic extra indentation removal will handle the over indent\n  if (this._options.unindent_chained_methods && this._output.just_added_newline()) {\n    this.deindent();\n  }\n\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_unknown = function(current_token, preserve_statement_flags) {\n  this.print_token(current_token);\n\n  if (current_token.text[current_token.text.length - 1] === '\\n') {\n    this.print_newline(false, preserve_statement_flags);\n  }\n};\n\nBeautifier.prototype.handle_eof = function(current_token) {\n  // Unwind any open statements\n  while (this._flags.mode === MODE.Statement) {\n    this.restore_mode();\n  }\n  this.handle_whitespace_and_comments(current_token);\n};\n\nmodule.exports.Beautifier = Beautifier;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Beautifier = require('./beautifier').Beautifier,\n  Options = require('./options').Options;\n\nfunction js_beautify(js_source_text, options) {\n  var beautifier = new Beautifier(js_source_text, options);\n  return beautifier.beautify();\n}\n\nmodule.exports = js_beautify;\nmodule.exports.defaultOptions = function() {\n  return new Options();\n};\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar BaseOptions = require('../core/options').Options;\n\nfunction Options(options) {\n  BaseOptions.call(this, options, 'css');\n\n  this.selector_separator_newline = this._get_boolean('selector_separator_newline', true);\n  this.newline_between_rules = this._get_boolean('newline_between_rules', true);\n  var space_around_selector_separator = this._get_boolean('space_around_selector_separator');\n  this.space_around_combinator = this._get_boolean('space_around_combinator') || space_around_selector_separator;\n\n  var brace_style_split = this._get_selection_list('brace_style', ['collapse', 'expand', 'end-expand', 'none', 'preserve-inline']);\n  this.brace_style = 'collapse';\n  for (var bs = 0; bs < brace_style_split.length; bs++) {\n    if (brace_style_split[bs] !== 'expand') {\n      // default to collapse, as only collapse|expand is implemented for now\n      this.brace_style = 'collapse';\n    } else {\n      this.brace_style = brace_style_split[bs];\n    }\n  }\n}\nOptions.prototype = new BaseOptions();\n\n\n\nmodule.exports.Options = Options;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Options = require('./options').Options;\nvar Output = require('../core/output').Output;\nvar InputScanner = require('../core/inputscanner').InputScanner;\nvar Directives = require('../core/directives').Directives;\n\nvar directives_core = new Directives(/\\/\\*/, /\\*\\//);\n\nvar lineBreak = /\\r\\n|[\\r\\n]/;\nvar allLineBreaks = /\\r\\n|[\\r\\n]/g;\n\n// tokenizer\nvar whitespaceChar = /\\s/;\nvar whitespacePattern = /(?:\\s|\\n)+/g;\nvar block_comment_pattern = /\\/\\*(?:[\\s\\S]*?)((?:\\*\\/)|$)/g;\nvar comment_pattern = /\\/\\/(?:[^\\n\\r\\u2028\\u2029]*)/g;\n\nfunction Beautifier(source_text, options) {\n  this._source_text = source_text || '';\n  // Allow the setting of language/file-type specific options\n  // with inheritance of overall settings\n  this._options = new Options(options);\n  this._ch = null;\n  this._input = null;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n  this.NESTED_AT_RULE = {\n    \"page\": true,\n    \"font-face\": true,\n    \"keyframes\": true,\n    // also in CONDITIONAL_GROUP_RULE below\n    \"media\": true,\n    \"supports\": true,\n    \"document\": true\n  };\n  this.CONDITIONAL_GROUP_RULE = {\n    \"media\": true,\n    \"supports\": true,\n    \"document\": true\n  };\n  this.NON_SEMICOLON_NEWLINE_PROPERTY = [\n    \"grid-template-areas\",\n    \"grid-template\"\n  ];\n\n}\n\nBeautifier.prototype.eatString = function(endChars) {\n  var result = '';\n  this._ch = this._input.next();\n  while (this._ch) {\n    result += this._ch;\n    if (this._ch === \"\\\\\") {\n      result += this._input.next();\n    } else if (endChars.indexOf(this._ch) !== -1 || this._ch === \"\\n\") {\n      break;\n    }\n    this._ch = this._input.next();\n  }\n  return result;\n};\n\n// Skips any white space in the source text from the current position.\n// When allowAtLeastOneNewLine is true, will output new lines for each\n// newline character found; if the user has preserve_newlines off, only\n// the first newline will be output\nBeautifier.prototype.eatWhitespace = function(allowAtLeastOneNewLine) {\n  var result = whitespaceChar.test(this._input.peek());\n  var newline_count = 0;\n  while (whitespaceChar.test(this._input.peek())) {\n    this._ch = this._input.next();\n    if (allowAtLeastOneNewLine && this._ch === '\\n') {\n      if (newline_count === 0 || newline_count < this._options.max_preserve_newlines) {\n        newline_count++;\n        this._output.add_new_line(true);\n      }\n    }\n  }\n  return result;\n};\n\n// Nested pseudo-class if we are insideRule\n// and the next special character found opens\n// a new block\nBeautifier.prototype.foundNestedPseudoClass = function() {\n  var openParen = 0;\n  var i = 1;\n  var ch = this._input.peek(i);\n  while (ch) {\n    if (ch === \"{\") {\n      return true;\n    } else if (ch === '(') {\n      // pseudoclasses can contain ()\n      openParen += 1;\n    } else if (ch === ')') {\n      if (openParen === 0) {\n        return false;\n      }\n      openParen -= 1;\n    } else if (ch === \";\" || ch === \"}\") {\n      return false;\n    }\n    i++;\n    ch = this._input.peek(i);\n  }\n  return false;\n};\n\nBeautifier.prototype.print_string = function(output_string) {\n  this._output.set_indent(this._indentLevel);\n  this._output.non_breaking_space = true;\n  this._output.add_token(output_string);\n};\n\nBeautifier.prototype.preserveSingleSpace = function(isAfterSpace) {\n  if (isAfterSpace) {\n    this._output.space_before_token = true;\n  }\n};\n\nBeautifier.prototype.indent = function() {\n  this._indentLevel++;\n};\n\nBeautifier.prototype.outdent = function() {\n  if (this._indentLevel > 0) {\n    this._indentLevel--;\n  }\n};\n\n/*_____________________--------------------_____________________*/\n\nBeautifier.prototype.beautify = function() {\n  if (this._options.disabled) {\n    return this._source_text;\n  }\n\n  var source_text = this._source_text;\n  var eol = this._options.eol;\n  if (eol === 'auto') {\n    eol = '\\n';\n    if (source_text && lineBreak.test(source_text || '')) {\n      eol = source_text.match(lineBreak)[0];\n    }\n  }\n\n\n  // HACK: newline parsing inconsistent. This brute force normalizes the this._input.\n  source_text = source_text.replace(allLineBreaks, '\\n');\n\n  // reset\n  var baseIndentString = source_text.match(/^[\\t ]*/)[0];\n\n  this._output = new Output(this._options, baseIndentString);\n  this._input = new InputScanner(source_text);\n  this._indentLevel = 0;\n  this._nestedLevel = 0;\n\n  this._ch = null;\n  var parenLevel = 0;\n\n  var insideRule = false;\n  // This is the value side of a property value pair (blue in the following ex)\n  // label { content: blue }\n  var insidePropertyValue = false;\n  var enteringConditionalGroup = false;\n  var insideNonNestedAtRule = false;\n  var insideScssMap = false;\n  var topCharacter = this._ch;\n  var insideNonSemiColonValues = false;\n  var whitespace;\n  var isAfterSpace;\n  var previous_ch;\n\n  while (true) {\n    whitespace = this._input.read(whitespacePattern);\n    isAfterSpace = whitespace !== '';\n    previous_ch = topCharacter;\n    this._ch = this._input.next();\n    if (this._ch === '\\\\' && this._input.hasNext()) {\n      this._ch += this._input.next();\n    }\n    topCharacter = this._ch;\n\n    if (!this._ch) {\n      break;\n    } else if (this._ch === '/' && this._input.peek() === '*') {\n      // /* css comment */\n      // Always start block comments on a new line.\n      // This handles scenarios where a block comment immediately\n      // follows a property definition on the same line or where\n      // minified code is being beautified.\n      this._output.add_new_line();\n      this._input.back();\n\n      var comment = this._input.read(block_comment_pattern);\n\n      // Handle ignore directive\n      var directives = directives_core.get_directives(comment);\n      if (directives && directives.ignore === 'start') {\n        comment += directives_core.readIgnored(this._input);\n      }\n\n      this.print_string(comment);\n\n      // Ensures any new lines following the comment are preserved\n      this.eatWhitespace(true);\n\n      // Block comments are followed by a new line so they don't\n      // share a line with other properties\n      this._output.add_new_line();\n    } else if (this._ch === '/' && this._input.peek() === '/') {\n      // // single line comment\n      // Preserves the space before a comment\n      // on the same line as a rule\n      this._output.space_before_token = true;\n      this._input.back();\n      this.print_string(this._input.read(comment_pattern));\n\n      // Ensures any new lines following the comment are preserved\n      this.eatWhitespace(true);\n    } else if (this._ch === '$') {\n      this.preserveSingleSpace(isAfterSpace);\n\n      this.print_string(this._ch);\n\n      // strip trailing space, if present, for hash property checks\n      var variable = this._input.peekUntilAfter(/[: ,;{}()[\\]\\/='\"]/g);\n\n      if (variable.match(/[ :]$/)) {\n        // we have a variable or pseudo-class, add it and insert one space before continuing\n        variable = this.eatString(\": \").replace(/\\s+$/, '');\n        this.print_string(variable);\n        this._output.space_before_token = true;\n      }\n\n      // might be sass variable\n      if (parenLevel === 0 && variable.indexOf(':') !== -1) {\n        insidePropertyValue = true;\n        this.indent();\n      }\n    } else if (this._ch === '@') {\n      this.preserveSingleSpace(isAfterSpace);\n\n      // deal with less property mixins @{...}\n      if (this._input.peek() === '{') {\n        this.print_string(this._ch + this.eatString('}'));\n      } else {\n        this.print_string(this._ch);\n\n        // strip trailing space, if present, for hash property checks\n        var variableOrRule = this._input.peekUntilAfter(/[: ,;{}()[\\]\\/='\"]/g);\n\n        if (variableOrRule.match(/[ :]$/)) {\n          // we have a variable or pseudo-class, add it and insert one space before continuing\n          variableOrRule = this.eatString(\": \").replace(/\\s+$/, '');\n          this.print_string(variableOrRule);\n          this._output.space_before_token = true;\n        }\n\n        // might be less variable\n        if (parenLevel === 0 && variableOrRule.indexOf(':') !== -1) {\n          insidePropertyValue = true;\n          this.indent();\n\n          // might be a nesting at-rule\n        } else if (variableOrRule in this.NESTED_AT_RULE) {\n          this._nestedLevel += 1;\n          if (variableOrRule in this.CONDITIONAL_GROUP_RULE) {\n            enteringConditionalGroup = true;\n          }\n\n          // might be a non-nested at-rule\n        } else if (parenLevel === 0 && !insidePropertyValue) {\n          insideNonNestedAtRule = true;\n        }\n      }\n    } else if (this._ch === '#' && this._input.peek() === '{') {\n      this.preserveSingleSpace(isAfterSpace);\n      this.print_string(this._ch + this.eatString('}'));\n    } else if (this._ch === '{') {\n      if (insidePropertyValue) {\n        insidePropertyValue = false;\n        this.outdent();\n      }\n\n      // non nested at rule becomes nested\n      insideNonNestedAtRule = false;\n\n      // when entering conditional groups, only rulesets are allowed\n      if (enteringConditionalGroup) {\n        enteringConditionalGroup = false;\n        insideRule = (this._indentLevel >= this._nestedLevel);\n      } else {\n        // otherwise, declarations are also allowed\n        insideRule = (this._indentLevel >= this._nestedLevel - 1);\n      }\n      if (this._options.newline_between_rules && insideRule) {\n        if (this._output.previous_line && this._output.previous_line.item(-1) !== '{') {\n          this._output.ensure_empty_line_above('/', ',');\n        }\n      }\n\n      this._output.space_before_token = true;\n\n      // The difference in print_string and indent order is necessary to indent the '{' correctly\n      if (this._options.brace_style === 'expand') {\n        this._output.add_new_line();\n        this.print_string(this._ch);\n        this.indent();\n        this._output.set_indent(this._indentLevel);\n      } else {\n        // inside mixin and first param is object\n        if (previous_ch === '(') {\n          this._output.space_before_token = false;\n        } else if (previous_ch !== ',') {\n          this.indent();\n        }\n        this.print_string(this._ch);\n      }\n\n      this.eatWhitespace(true);\n      this._output.add_new_line();\n    } else if (this._ch === '}') {\n      this.outdent();\n      this._output.add_new_line();\n      if (previous_ch === '{') {\n        this._output.trim(true);\n      }\n\n      if (insidePropertyValue) {\n        this.outdent();\n        insidePropertyValue = false;\n      }\n      this.print_string(this._ch);\n      insideRule = false;\n      if (this._nestedLevel) {\n        this._nestedLevel--;\n      }\n\n      this.eatWhitespace(true);\n      this._output.add_new_line();\n\n      if (this._options.newline_between_rules && !this._output.just_added_blankline()) {\n        if (this._input.peek() !== '}') {\n          this._output.add_new_line(true);\n        }\n      }\n      if (this._input.peek() === ')') {\n        this._output.trim(true);\n        if (this._options.brace_style === \"expand\") {\n          this._output.add_new_line(true);\n        }\n      }\n    } else if (this._ch === \":\") {\n\n      for (var i = 0; i < this.NON_SEMICOLON_NEWLINE_PROPERTY.length; i++) {\n        if (this._input.lookBack(this.NON_SEMICOLON_NEWLINE_PROPERTY[i])) {\n          insideNonSemiColonValues = true;\n          break;\n        }\n      }\n\n      if ((insideRule || enteringConditionalGroup) && !(this._input.lookBack(\"&\") || this.foundNestedPseudoClass()) && !this._input.lookBack(\"(\") && !insideNonNestedAtRule && parenLevel === 0) {\n        // 'property: value' delimiter\n        // which could be in a conditional group query\n\n        this.print_string(':');\n        if (!insidePropertyValue) {\n          insidePropertyValue = true;\n          this._output.space_before_token = true;\n          this.eatWhitespace(true);\n          this.indent();\n        }\n      } else {\n        // sass/less parent reference don't use a space\n        // sass nested pseudo-class don't use a space\n\n        // preserve space before pseudoclasses/pseudoelements, as it means \"in any child\"\n        if (this._input.lookBack(\" \")) {\n          this._output.space_before_token = true;\n        }\n        if (this._input.peek() === \":\") {\n          // pseudo-element\n          this._ch = this._input.next();\n          this.print_string(\"::\");\n        } else {\n          // pseudo-class\n          this.print_string(':');\n        }\n      }\n    } else if (this._ch === '\"' || this._ch === '\\'') {\n      var preserveQuoteSpace = previous_ch === '\"' || previous_ch === '\\'';\n      this.preserveSingleSpace(preserveQuoteSpace || isAfterSpace);\n      this.print_string(this._ch + this.eatString(this._ch));\n      this.eatWhitespace(true);\n    } else if (this._ch === ';') {\n      insideNonSemiColonValues = false;\n      if (parenLevel === 0) {\n        if (insidePropertyValue) {\n          this.outdent();\n          insidePropertyValue = false;\n        }\n        insideNonNestedAtRule = false;\n        this.print_string(this._ch);\n        this.eatWhitespace(true);\n\n        // This maintains single line comments on the same\n        // line. Block comments are also affected, but\n        // a new line is always output before one inside\n        // that section\n        if (this._input.peek() !== '/') {\n          this._output.add_new_line();\n        }\n      } else {\n        this.print_string(this._ch);\n        this.eatWhitespace(true);\n        this._output.space_before_token = true;\n      }\n    } else if (this._ch === '(') { // may be a url\n      if (this._input.lookBack(\"url\")) {\n        this.print_string(this._ch);\n        this.eatWhitespace();\n        parenLevel++;\n        this.indent();\n        this._ch = this._input.next();\n        if (this._ch === ')' || this._ch === '\"' || this._ch === '\\'') {\n          this._input.back();\n        } else if (this._ch) {\n          this.print_string(this._ch + this.eatString(')'));\n          if (parenLevel) {\n            parenLevel--;\n            this.outdent();\n          }\n        }\n      } else {\n        var space_needed = false;\n        if (this._input.lookBack(\"with\")) {\n          // look back is not an accurate solution, we need tokens to confirm without whitespaces\n          space_needed = true;\n        }\n        this.preserveSingleSpace(isAfterSpace || space_needed);\n        this.print_string(this._ch);\n\n        // handle scss/sass map\n        if (insidePropertyValue && previous_ch === \"$\" && this._options.selector_separator_newline) {\n          this._output.add_new_line();\n          insideScssMap = true;\n        } else {\n          this.eatWhitespace();\n          parenLevel++;\n          this.indent();\n        }\n      }\n    } else if (this._ch === ')') {\n      if (parenLevel) {\n        parenLevel--;\n        this.outdent();\n      }\n      if (insideScssMap && this._input.peek() === \";\" && this._options.selector_separator_newline) {\n        insideScssMap = false;\n        this.outdent();\n        this._output.add_new_line();\n      }\n      this.print_string(this._ch);\n    } else if (this._ch === ',') {\n      this.print_string(this._ch);\n      this.eatWhitespace(true);\n      if (this._options.selector_separator_newline && (!insidePropertyValue || insideScssMap) && parenLevel === 0 && !insideNonNestedAtRule) {\n        this._output.add_new_line();\n      } else {\n        this._output.space_before_token = true;\n      }\n    } else if ((this._ch === '>' || this._ch === '+' || this._ch === '~') && !insidePropertyValue && parenLevel === 0) {\n      //handle combinator spacing\n      if (this._options.space_around_combinator) {\n        this._output.space_before_token = true;\n        this.print_string(this._ch);\n        this._output.space_before_token = true;\n      } else {\n        this.print_string(this._ch);\n        this.eatWhitespace();\n        // squash extra whitespace\n        if (this._ch && whitespaceChar.test(this._ch)) {\n          this._ch = '';\n        }\n      }\n    } else if (this._ch === ']') {\n      this.print_string(this._ch);\n    } else if (this._ch === '[') {\n      this.preserveSingleSpace(isAfterSpace);\n      this.print_string(this._ch);\n    } else if (this._ch === '=') { // no whitespace before or after\n      this.eatWhitespace();\n      this.print_string('=');\n      if (whitespaceChar.test(this._ch)) {\n        this._ch = '';\n      }\n    } else if (this._ch === '!' && !this._input.lookBack(\"\\\\\")) { // !important\n      this._output.space_before_token = true;\n      this.print_string(this._ch);\n    } else {\n      var preserveAfterSpace = previous_ch === '\"' || previous_ch === '\\'';\n      this.preserveSingleSpace(preserveAfterSpace || isAfterSpace);\n      this.print_string(this._ch);\n\n      if (!this._output.just_added_newline() && this._input.peek() === '\\n' && insideNonSemiColonValues) {\n        this._output.add_new_line();\n      }\n    }\n  }\n\n  var sweetCode = this._output.get_code(eol);\n\n  return sweetCode;\n};\n\nmodule.exports.Beautifier = Beautifier;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Beautifier = require('./beautifier').Beautifier,\n  Options = require('./options').Options;\n\nfunction css_beautify(source_text, options) {\n  var beautifier = new Beautifier(source_text, options);\n  return beautifier.beautify();\n}\n\nmodule.exports = css_beautify;\nmodule.exports.defaultOptions = function() {\n  return new Options();\n};\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar BaseOptions = require('../core/options').Options;\n\nfunction Options(options) {\n  BaseOptions.call(this, options, 'html');\n  if (this.templating.length === 1 && this.templating[0] === 'auto') {\n    this.templating = ['django', 'erb', 'handlebars', 'php'];\n  }\n\n  this.indent_inner_html = this._get_boolean('indent_inner_html');\n  this.indent_body_inner_html = this._get_boolean('indent_body_inner_html', true);\n  this.indent_head_inner_html = this._get_boolean('indent_head_inner_html', true);\n\n  this.indent_handlebars = this._get_boolean('indent_handlebars', true);\n  this.wrap_attributes = this._get_selection('wrap_attributes',\n    ['auto', 'force', 'force-aligned', 'force-expand-multiline', 'aligned-multiple', 'preserve', 'preserve-aligned']);\n  this.wrap_attributes_min_attrs = this._get_number('wrap_attributes_min_attrs', 2);\n  this.wrap_attributes_indent_size = this._get_number('wrap_attributes_indent_size', this.indent_size);\n  this.extra_liners = this._get_array('extra_liners', ['head', 'body', '/html']);\n\n  // Block vs inline elements\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\n  // https://www.w3.org/TR/html5/dom.html#phrasing-content\n  this.inline = this._get_array('inline', [\n    'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',\n    'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',\n    'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',\n    'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',\n    'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',\n    'video', 'wbr', 'text',\n    // obsolete inline tags\n    'acronym', 'big', 'strike', 'tt'\n  ]);\n  this.inline_custom_elements = this._get_boolean('inline_custom_elements', true);\n  this.void_elements = this._get_array('void_elements', [\n    // HTLM void elements - aka self-closing tags - aka singletons\n    // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n    'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n    'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n    // NOTE: Optional tags are too complex for a simple list\n    // they are hard coded in _do_optional_end_element\n\n    // Doctype and xml elements\n    '!doctype', '?xml',\n\n    // obsolete tags\n    // basefont: https://www.computerhope.com/jargon/h/html-basefont-tag.htm\n    // isndex: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/isindex\n    'basefont', 'isindex'\n  ]);\n  this.unformatted = this._get_array('unformatted', []);\n  this.content_unformatted = this._get_array('content_unformatted', [\n    'pre', 'textarea'\n  ]);\n  this.unformatted_content_delimiter = this._get_characters('unformatted_content_delimiter');\n  this.indent_scripts = this._get_selection('indent_scripts', ['normal', 'keep', 'separate']);\n\n}\nOptions.prototype = new BaseOptions();\n\n\n\nmodule.exports.Options = Options;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar BaseTokenizer = require('../core/tokenizer').Tokenizer;\nvar BASETOKEN = require('../core/tokenizer').TOKEN;\nvar Directives = require('../core/directives').Directives;\nvar TemplatablePattern = require('../core/templatablepattern').TemplatablePattern;\nvar Pattern = require('../core/pattern').Pattern;\n\nvar TOKEN = {\n  TAG_OPEN: 'TK_TAG_OPEN',\n  TAG_CLOSE: 'TK_TAG_CLOSE',\n  CONTROL_FLOW_OPEN: 'TK_CONTROL_FLOW_OPEN',\n  CONTROL_FLOW_CLOSE: 'TK_CONTROL_FLOW_CLOSE',\n  ATTRIBUTE: 'TK_ATTRIBUTE',\n  EQUALS: 'TK_EQUALS',\n  VALUE: 'TK_VALUE',\n  COMMENT: 'TK_COMMENT',\n  TEXT: 'TK_TEXT',\n  UNKNOWN: 'TK_UNKNOWN',\n  START: BASETOKEN.START,\n  RAW: BASETOKEN.RAW,\n  EOF: BASETOKEN.EOF\n};\n\nvar directives_core = new Directives(/<\\!--/, /-->/);\n\nvar Tokenizer = function(input_string, options) {\n  BaseTokenizer.call(this, input_string, options);\n  this._current_tag_name = '';\n\n  // Words end at whitespace or when a tag starts\n  // if we are indenting handlebars, they are considered tags\n  var templatable_reader = new TemplatablePattern(this._input).read_options(this._options);\n  var pattern_reader = new Pattern(this._input);\n\n  this.__patterns = {\n    word: templatable_reader.until(/[\\n\\r\\t <]/),\n    word_control_flow_close_excluded: templatable_reader.until(/[\\n\\r\\t <}]/),\n    single_quote: templatable_reader.until_after(/'/),\n    double_quote: templatable_reader.until_after(/\"/),\n    attribute: templatable_reader.until(/[\\n\\r\\t =>]|\\/>/),\n    element_name: templatable_reader.until(/[\\n\\r\\t >\\/]/),\n\n    angular_control_flow_start: pattern_reader.matching(/\\@[a-zA-Z]+[^({]*[({]/),\n    handlebars_comment: pattern_reader.starting_with(/{{!--/).until_after(/--}}/),\n    handlebars: pattern_reader.starting_with(/{{/).until_after(/}}/),\n    handlebars_open: pattern_reader.until(/[\\n\\r\\t }]/),\n    handlebars_raw_close: pattern_reader.until(/}}/),\n    comment: pattern_reader.starting_with(/<!--/).until_after(/-->/),\n    cdata: pattern_reader.starting_with(/<!\\[CDATA\\[/).until_after(/]]>/),\n    // https://en.wikipedia.org/wiki/Conditional_comment\n    conditional_comment: pattern_reader.starting_with(/<!\\[/).until_after(/]>/),\n    processing: pattern_reader.starting_with(/<\\?/).until_after(/\\?>/)\n  };\n\n  if (this._options.indent_handlebars) {\n    this.__patterns.word = this.__patterns.word.exclude('handlebars');\n    this.__patterns.word_control_flow_close_excluded = this.__patterns.word_control_flow_close_excluded.exclude('handlebars');\n  }\n\n  this._unformatted_content_delimiter = null;\n\n  if (this._options.unformatted_content_delimiter) {\n    var literal_regexp = this._input.get_literal_regexp(this._options.unformatted_content_delimiter);\n    this.__patterns.unformatted_content_delimiter =\n      pattern_reader.matching(literal_regexp)\n      .until_after(literal_regexp);\n  }\n};\nTokenizer.prototype = new BaseTokenizer();\n\nTokenizer.prototype._is_comment = function(current_token) { // jshint unused:false\n  return false; //current_token.type === TOKEN.COMMENT || current_token.type === TOKEN.UNKNOWN;\n};\n\nTokenizer.prototype._is_opening = function(current_token) {\n  return current_token.type === TOKEN.TAG_OPEN || current_token.type === TOKEN.CONTROL_FLOW_OPEN;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) {\n  return (current_token.type === TOKEN.TAG_CLOSE &&\n    (open_token && (\n      ((current_token.text === '>' || current_token.text === '/>') && open_token.text[0] === '<') ||\n      (current_token.text === '}}' && open_token.text[0] === '{' && open_token.text[1] === '{')))\n  ) || (current_token.type === TOKEN.CONTROL_FLOW_CLOSE &&\n    (current_token.text === '}' && open_token.text.endsWith('{')));\n};\n\nTokenizer.prototype._reset = function() {\n  this._current_tag_name = '';\n};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  var token = null;\n  this._readWhitespace();\n  var c = this._input.peek();\n\n  if (c === null) {\n    return this._create_token(TOKEN.EOF, '');\n  }\n\n  token = token || this._read_open_handlebars(c, open_token);\n  token = token || this._read_attribute(c, previous_token, open_token);\n  token = token || this._read_close(c, open_token);\n  token = token || this._read_control_flows(c, open_token);\n  token = token || this._read_raw_content(c, previous_token, open_token);\n  token = token || this._read_content_word(c, open_token);\n  token = token || this._read_comment_or_cdata(c);\n  token = token || this._read_processing(c);\n  token = token || this._read_open(c, open_token);\n  token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());\n\n  return token;\n};\n\nTokenizer.prototype._read_comment_or_cdata = function(c) { // jshint unused:false\n  var token = null;\n  var resulting_string = null;\n  var directives = null;\n\n  if (c === '<') {\n    var peek1 = this._input.peek(1);\n    // We treat all comments as literals, even more than preformatted tags\n    // we only look for the appropriate closing marker\n    if (peek1 === '!') {\n      resulting_string = this.__patterns.comment.read();\n\n      // only process directive on html comments\n      if (resulting_string) {\n        directives = directives_core.get_directives(resulting_string);\n        if (directives && directives.ignore === 'start') {\n          resulting_string += directives_core.readIgnored(this._input);\n        }\n      } else {\n        resulting_string = this.__patterns.cdata.read();\n      }\n    }\n\n    if (resulting_string) {\n      token = this._create_token(TOKEN.COMMENT, resulting_string);\n      token.directives = directives;\n    }\n  }\n\n  return token;\n};\n\nTokenizer.prototype._read_processing = function(c) { // jshint unused:false\n  var token = null;\n  var resulting_string = null;\n  var directives = null;\n\n  if (c === '<') {\n    var peek1 = this._input.peek(1);\n    if (peek1 === '!' || peek1 === '?') {\n      resulting_string = this.__patterns.conditional_comment.read();\n      resulting_string = resulting_string || this.__patterns.processing.read();\n    }\n\n    if (resulting_string) {\n      token = this._create_token(TOKEN.COMMENT, resulting_string);\n      token.directives = directives;\n    }\n  }\n\n  return token;\n};\n\nTokenizer.prototype._read_open = function(c, open_token) {\n  var resulting_string = null;\n  var token = null;\n  if (!open_token || open_token.type === TOKEN.CONTROL_FLOW_OPEN) {\n    if (c === '<') {\n\n      resulting_string = this._input.next();\n      if (this._input.peek() === '/') {\n        resulting_string += this._input.next();\n      }\n      resulting_string += this.__patterns.element_name.read();\n      token = this._create_token(TOKEN.TAG_OPEN, resulting_string);\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._read_open_handlebars = function(c, open_token) {\n  var resulting_string = null;\n  var token = null;\n  if (!open_token || open_token.type === TOKEN.CONTROL_FLOW_OPEN) {\n    if (this._options.indent_handlebars && c === '{' && this._input.peek(1) === '{') {\n      if (this._input.peek(2) === '!') {\n        resulting_string = this.__patterns.handlebars_comment.read();\n        resulting_string = resulting_string || this.__patterns.handlebars.read();\n        token = this._create_token(TOKEN.COMMENT, resulting_string);\n      } else {\n        resulting_string = this.__patterns.handlebars_open.read();\n        token = this._create_token(TOKEN.TAG_OPEN, resulting_string);\n      }\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._read_control_flows = function(c, open_token) {\n  var resulting_string = '';\n  var token = null;\n  // Only check for control flows if angular templating is set AND indenting is set\n  if (!this._options.templating.includes('angular') || !this._options.indent_handlebars) {\n    return token;\n  }\n\n  if (c === '@') {\n    resulting_string = this.__patterns.angular_control_flow_start.read();\n    if (resulting_string === '') {\n      return token;\n    }\n\n    var opening_parentheses_count = resulting_string.endsWith('(') ? 1 : 0;\n    var closing_parentheses_count = 0;\n    // The opening brace of the control flow is where the number of opening and closing parentheses equal\n    // e.g. @if({value: true} !== null) { \n    while (!(resulting_string.endsWith('{') && opening_parentheses_count === closing_parentheses_count)) {\n      var next_char = this._input.next();\n      if (next_char === null) {\n        break;\n      } else if (next_char === '(') {\n        opening_parentheses_count++;\n      } else if (next_char === ')') {\n        closing_parentheses_count++;\n      }\n      resulting_string += next_char;\n    }\n    token = this._create_token(TOKEN.CONTROL_FLOW_OPEN, resulting_string);\n  } else if (c === '}' && open_token && open_token.type === TOKEN.CONTROL_FLOW_OPEN) {\n    resulting_string = this._input.next();\n    token = this._create_token(TOKEN.CONTROL_FLOW_CLOSE, resulting_string);\n  }\n  return token;\n};\n\n\nTokenizer.prototype._read_close = function(c, open_token) {\n  var resulting_string = null;\n  var token = null;\n  if (open_token && open_token.type === TOKEN.TAG_OPEN) {\n    if (open_token.text[0] === '<' && (c === '>' || (c === '/' && this._input.peek(1) === '>'))) {\n      resulting_string = this._input.next();\n      if (c === '/') { //  for close tag \"/>\"\n        resulting_string += this._input.next();\n      }\n      token = this._create_token(TOKEN.TAG_CLOSE, resulting_string);\n    } else if (open_token.text[0] === '{' && c === '}' && this._input.peek(1) === '}') {\n      this._input.next();\n      this._input.next();\n      token = this._create_token(TOKEN.TAG_CLOSE, '}}');\n    }\n  }\n\n  return token;\n};\n\nTokenizer.prototype._read_attribute = function(c, previous_token, open_token) {\n  var token = null;\n  var resulting_string = '';\n  if (open_token && open_token.text[0] === '<') {\n\n    if (c === '=') {\n      token = this._create_token(TOKEN.EQUALS, this._input.next());\n    } else if (c === '\"' || c === \"'\") {\n      var content = this._input.next();\n      if (c === '\"') {\n        content += this.__patterns.double_quote.read();\n      } else {\n        content += this.__patterns.single_quote.read();\n      }\n      token = this._create_token(TOKEN.VALUE, content);\n    } else {\n      resulting_string = this.__patterns.attribute.read();\n\n      if (resulting_string) {\n        if (previous_token.type === TOKEN.EQUALS) {\n          token = this._create_token(TOKEN.VALUE, resulting_string);\n        } else {\n          token = this._create_token(TOKEN.ATTRIBUTE, resulting_string);\n        }\n      }\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._is_content_unformatted = function(tag_name) {\n  // void_elements have no content and so cannot have unformatted content\n  // script and style tags should always be read as unformatted content\n  // finally content_unformatted and unformatted element contents are unformatted\n  return this._options.void_elements.indexOf(tag_name) === -1 &&\n    (this._options.content_unformatted.indexOf(tag_name) !== -1 ||\n      this._options.unformatted.indexOf(tag_name) !== -1);\n};\n\n\nTokenizer.prototype._read_raw_content = function(c, previous_token, open_token) { // jshint unused:false\n  var resulting_string = '';\n  if (open_token && open_token.text[0] === '{') {\n    resulting_string = this.__patterns.handlebars_raw_close.read();\n  } else if (previous_token.type === TOKEN.TAG_CLOSE &&\n    previous_token.opened.text[0] === '<' && previous_token.text[0] !== '/') {\n    // ^^ empty tag has no content \n    var tag_name = previous_token.opened.text.substr(1).toLowerCase();\n    if (tag_name === 'script' || tag_name === 'style') {\n      // Script and style tags are allowed to have comments wrapping their content\n      // or just have regular content.\n      var token = this._read_comment_or_cdata(c);\n      if (token) {\n        token.type = TOKEN.TEXT;\n        return token;\n      }\n      resulting_string = this._input.readUntil(new RegExp('</' + tag_name + '[\\\\n\\\\r\\\\t ]*?>', 'ig'));\n    } else if (this._is_content_unformatted(tag_name)) {\n\n      resulting_string = this._input.readUntil(new RegExp('</' + tag_name + '[\\\\n\\\\r\\\\t ]*?>', 'ig'));\n    }\n  }\n\n  if (resulting_string) {\n    return this._create_token(TOKEN.TEXT, resulting_string);\n  }\n\n  return null;\n};\n\nTokenizer.prototype._read_content_word = function(c, open_token) {\n  var resulting_string = '';\n  if (this._options.unformatted_content_delimiter) {\n    if (c === this._options.unformatted_content_delimiter[0]) {\n      resulting_string = this.__patterns.unformatted_content_delimiter.read();\n    }\n  }\n\n  if (!resulting_string) {\n    resulting_string = (open_token && open_token.type === TOKEN.CONTROL_FLOW_OPEN) ? this.__patterns.word_control_flow_close_excluded.read() : this.__patterns.word.read();\n  }\n  if (resulting_string) {\n    return this._create_token(TOKEN.TEXT, resulting_string);\n  }\n};\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Options = require('../html/options').Options;\nvar Output = require('../core/output').Output;\nvar Tokenizer = require('../html/tokenizer').Tokenizer;\nvar TOKEN = require('../html/tokenizer').TOKEN;\n\nvar lineBreak = /\\r\\n|[\\r\\n]/;\nvar allLineBreaks = /\\r\\n|[\\r\\n]/g;\n\nvar Printer = function(options, base_indent_string) { //handles input/output and some other printing functions\n\n  this.indent_level = 0;\n  this.alignment_size = 0;\n  this.max_preserve_newlines = options.max_preserve_newlines;\n  this.preserve_newlines = options.preserve_newlines;\n\n  this._output = new Output(options, base_indent_string);\n\n};\n\nPrinter.prototype.current_line_has_match = function(pattern) {\n  return this._output.current_line.has_match(pattern);\n};\n\nPrinter.prototype.set_space_before_token = function(value, non_breaking) {\n  this._output.space_before_token = value;\n  this._output.non_breaking_space = non_breaking;\n};\n\nPrinter.prototype.set_wrap_point = function() {\n  this._output.set_indent(this.indent_level, this.alignment_size);\n  this._output.set_wrap_point();\n};\n\n\nPrinter.prototype.add_raw_token = function(token) {\n  this._output.add_raw_token(token);\n};\n\nPrinter.prototype.print_preserved_newlines = function(raw_token) {\n  var newlines = 0;\n  if (raw_token.type !== TOKEN.TEXT && raw_token.previous.type !== TOKEN.TEXT) {\n    newlines = raw_token.newlines ? 1 : 0;\n  }\n\n  if (this.preserve_newlines) {\n    newlines = raw_token.newlines < this.max_preserve_newlines + 1 ? raw_token.newlines : this.max_preserve_newlines + 1;\n  }\n  for (var n = 0; n < newlines; n++) {\n    this.print_newline(n > 0);\n  }\n\n  return newlines !== 0;\n};\n\nPrinter.prototype.traverse_whitespace = function(raw_token) {\n  if (raw_token.whitespace_before || raw_token.newlines) {\n    if (!this.print_preserved_newlines(raw_token)) {\n      this._output.space_before_token = true;\n    }\n    return true;\n  }\n  return false;\n};\n\nPrinter.prototype.previous_token_wrapped = function() {\n  return this._output.previous_token_wrapped;\n};\n\nPrinter.prototype.print_newline = function(force) {\n  this._output.add_new_line(force);\n};\n\nPrinter.prototype.print_token = function(token) {\n  if (token.text) {\n    this._output.set_indent(this.indent_level, this.alignment_size);\n    this._output.add_token(token.text);\n  }\n};\n\nPrinter.prototype.indent = function() {\n  this.indent_level++;\n};\n\nPrinter.prototype.deindent = function() {\n  if (this.indent_level > 0) {\n    this.indent_level--;\n    this._output.set_indent(this.indent_level, this.alignment_size);\n  }\n};\n\nPrinter.prototype.get_full_indent = function(level) {\n  level = this.indent_level + (level || 0);\n  if (level < 1) {\n    return '';\n  }\n\n  return this._output.get_indent_string(level);\n};\n\nvar get_type_attribute = function(start_token) {\n  var result = null;\n  var raw_token = start_token.next;\n\n  // Search attributes for a type attribute\n  while (raw_token.type !== TOKEN.EOF && start_token.closed !== raw_token) {\n    if (raw_token.type === TOKEN.ATTRIBUTE && raw_token.text === 'type') {\n      if (raw_token.next && raw_token.next.type === TOKEN.EQUALS &&\n        raw_token.next.next && raw_token.next.next.type === TOKEN.VALUE) {\n        result = raw_token.next.next.text;\n      }\n      break;\n    }\n    raw_token = raw_token.next;\n  }\n\n  return result;\n};\n\nvar get_custom_beautifier_name = function(tag_check, raw_token) {\n  var typeAttribute = null;\n  var result = null;\n\n  if (!raw_token.closed) {\n    return null;\n  }\n\n  if (tag_check === 'script') {\n    typeAttribute = 'text/javascript';\n  } else if (tag_check === 'style') {\n    typeAttribute = 'text/css';\n  }\n\n  typeAttribute = get_type_attribute(raw_token) || typeAttribute;\n\n  // For script and style tags that have a type attribute, only enable custom beautifiers for matching values\n  // For those without a type attribute use default;\n  if (typeAttribute.search('text/css') > -1) {\n    result = 'css';\n  } else if (typeAttribute.search(/module|((text|application|dojo)\\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\\+)?json|method|aspect))/) > -1) {\n    result = 'javascript';\n  } else if (typeAttribute.search(/(text|application|dojo)\\/(x-)?(html)/) > -1) {\n    result = 'html';\n  } else if (typeAttribute.search(/test\\/null/) > -1) {\n    // Test only mime-type for testing the beautifier when null is passed as beautifing function\n    result = 'null';\n  }\n\n  return result;\n};\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\nfunction TagFrame(parent, parser_token, indent_level) {\n  this.parent = parent || null;\n  this.tag = parser_token ? parser_token.tag_name : '';\n  this.indent_level = indent_level || 0;\n  this.parser_token = parser_token || null;\n}\n\nfunction TagStack(printer) {\n  this._printer = printer;\n  this._current_frame = null;\n}\n\nTagStack.prototype.get_parser_token = function() {\n  return this._current_frame ? this._current_frame.parser_token : null;\n};\n\nTagStack.prototype.record_tag = function(parser_token) { //function to record a tag and its parent in this.tags Object\n  var new_frame = new TagFrame(this._current_frame, parser_token, this._printer.indent_level);\n  this._current_frame = new_frame;\n};\n\nTagStack.prototype._try_pop_frame = function(frame) { //function to retrieve the opening tag to the corresponding closer\n  var parser_token = null;\n\n  if (frame) {\n    parser_token = frame.parser_token;\n    this._printer.indent_level = frame.indent_level;\n    this._current_frame = frame.parent;\n  }\n\n  return parser_token;\n};\n\nTagStack.prototype._get_frame = function(tag_list, stop_list) { //function to retrieve the opening tag to the corresponding closer\n  var frame = this._current_frame;\n\n  while (frame) { //till we reach '' (the initial value);\n    if (tag_list.indexOf(frame.tag) !== -1) { //if this is it use it\n      break;\n    } else if (stop_list && stop_list.indexOf(frame.tag) !== -1) {\n      frame = null;\n      break;\n    }\n    frame = frame.parent;\n  }\n\n  return frame;\n};\n\nTagStack.prototype.try_pop = function(tag, stop_list) { //function to retrieve the opening tag to the corresponding closer\n  var frame = this._get_frame([tag], stop_list);\n  return this._try_pop_frame(frame);\n};\n\nTagStack.prototype.indent_to_tag = function(tag_list) {\n  var frame = this._get_frame(tag_list);\n  if (frame) {\n    this._printer.indent_level = frame.indent_level;\n  }\n};\n\nfunction Beautifier(source_text, options, js_beautify, css_beautify) {\n  //Wrapper function to invoke all the necessary constructors and deal with the output.\n  this._source_text = source_text || '';\n  options = options || {};\n  this._js_beautify = js_beautify;\n  this._css_beautify = css_beautify;\n  this._tag_stack = null;\n\n  // Allow the setting of language/file-type specific options\n  // with inheritance of overall settings\n  var optionHtml = new Options(options, 'html');\n\n  this._options = optionHtml;\n\n  this._is_wrap_attributes_force = this._options.wrap_attributes.substr(0, 'force'.length) === 'force';\n  this._is_wrap_attributes_force_expand_multiline = (this._options.wrap_attributes === 'force-expand-multiline');\n  this._is_wrap_attributes_force_aligned = (this._options.wrap_attributes === 'force-aligned');\n  this._is_wrap_attributes_aligned_multiple = (this._options.wrap_attributes === 'aligned-multiple');\n  this._is_wrap_attributes_preserve = this._options.wrap_attributes.substr(0, 'preserve'.length) === 'preserve';\n  this._is_wrap_attributes_preserve_aligned = (this._options.wrap_attributes === 'preserve-aligned');\n}\n\nBeautifier.prototype.beautify = function() {\n\n  // if disabled, return the input unchanged.\n  if (this._options.disabled) {\n    return this._source_text;\n  }\n\n  var source_text = this._source_text;\n  var eol = this._options.eol;\n  if (this._options.eol === 'auto') {\n    eol = '\\n';\n    if (source_text && lineBreak.test(source_text)) {\n      eol = source_text.match(lineBreak)[0];\n    }\n  }\n\n  // HACK: newline parsing inconsistent. This brute force normalizes the input.\n  source_text = source_text.replace(allLineBreaks, '\\n');\n\n  var baseIndentString = source_text.match(/^[\\t ]*/)[0];\n\n  var last_token = {\n    text: '',\n    type: ''\n  };\n\n  var last_tag_token = new TagOpenParserToken();\n\n  var printer = new Printer(this._options, baseIndentString);\n  var tokens = new Tokenizer(source_text, this._options).tokenize();\n\n  this._tag_stack = new TagStack(printer);\n\n  var parser_token = null;\n  var raw_token = tokens.next();\n  while (raw_token.type !== TOKEN.EOF) {\n\n    if (raw_token.type === TOKEN.TAG_OPEN || raw_token.type === TOKEN.COMMENT) {\n      parser_token = this._handle_tag_open(printer, raw_token, last_tag_token, last_token, tokens);\n      last_tag_token = parser_token;\n    } else if ((raw_token.type === TOKEN.ATTRIBUTE || raw_token.type === TOKEN.EQUALS || raw_token.type === TOKEN.VALUE) ||\n      (raw_token.type === TOKEN.TEXT && !last_tag_token.tag_complete)) {\n      parser_token = this._handle_inside_tag(printer, raw_token, last_tag_token, last_token);\n    } else if (raw_token.type === TOKEN.TAG_CLOSE) {\n      parser_token = this._handle_tag_close(printer, raw_token, last_tag_token);\n    } else if (raw_token.type === TOKEN.TEXT) {\n      parser_token = this._handle_text(printer, raw_token, last_tag_token);\n    } else if (raw_token.type === TOKEN.CONTROL_FLOW_OPEN) {\n      parser_token = this._handle_control_flow_open(printer, raw_token);\n    } else if (raw_token.type === TOKEN.CONTROL_FLOW_CLOSE) {\n      parser_token = this._handle_control_flow_close(printer, raw_token);\n    } else {\n      // This should never happen, but if it does. Print the raw token\n      printer.add_raw_token(raw_token);\n    }\n\n    last_token = parser_token;\n\n    raw_token = tokens.next();\n  }\n  var sweet_code = printer._output.get_code(eol);\n\n  return sweet_code;\n};\n\nBeautifier.prototype._handle_control_flow_open = function(printer, raw_token) {\n  var parser_token = {\n    text: raw_token.text,\n    type: raw_token.type\n  };\n  printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== '', true);\n  if (raw_token.newlines) {\n    printer.print_preserved_newlines(raw_token);\n  } else {\n    printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== '', true);\n  }\n  printer.print_token(raw_token);\n  printer.indent();\n  return parser_token;\n};\n\nBeautifier.prototype._handle_control_flow_close = function(printer, raw_token) {\n  var parser_token = {\n    text: raw_token.text,\n    type: raw_token.type\n  };\n\n  printer.deindent();\n  if (raw_token.newlines) {\n    printer.print_preserved_newlines(raw_token);\n  } else {\n    printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== '', true);\n  }\n  printer.print_token(raw_token);\n  return parser_token;\n};\n\nBeautifier.prototype._handle_tag_close = function(printer, raw_token, last_tag_token) {\n  var parser_token = {\n    text: raw_token.text,\n    type: raw_token.type\n  };\n  printer.alignment_size = 0;\n  last_tag_token.tag_complete = true;\n\n  printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== '', true);\n  if (last_tag_token.is_unformatted) {\n    printer.add_raw_token(raw_token);\n  } else {\n    if (last_tag_token.tag_start_char === '<') {\n      printer.set_space_before_token(raw_token.text[0] === '/', true); // space before />, no space before >\n      if (this._is_wrap_attributes_force_expand_multiline && last_tag_token.has_wrapped_attrs) {\n        printer.print_newline(false);\n      }\n    }\n    printer.print_token(raw_token);\n\n  }\n\n  if (last_tag_token.indent_content &&\n    !(last_tag_token.is_unformatted || last_tag_token.is_content_unformatted)) {\n    printer.indent();\n\n    // only indent once per opened tag\n    last_tag_token.indent_content = false;\n  }\n\n  if (!last_tag_token.is_inline_element &&\n    !(last_tag_token.is_unformatted || last_tag_token.is_content_unformatted)) {\n    printer.set_wrap_point();\n  }\n\n  return parser_token;\n};\n\nBeautifier.prototype._handle_inside_tag = function(printer, raw_token, last_tag_token, last_token) {\n  var wrapped = last_tag_token.has_wrapped_attrs;\n  var parser_token = {\n    text: raw_token.text,\n    type: raw_token.type\n  };\n\n  printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== '', true);\n  if (last_tag_token.is_unformatted) {\n    printer.add_raw_token(raw_token);\n  } else if (last_tag_token.tag_start_char === '{' && raw_token.type === TOKEN.TEXT) {\n    // For the insides of handlebars allow newlines or a single space between open and contents\n    if (printer.print_preserved_newlines(raw_token)) {\n      raw_token.newlines = 0;\n      printer.add_raw_token(raw_token);\n    } else {\n      printer.print_token(raw_token);\n    }\n  } else {\n    if (raw_token.type === TOKEN.ATTRIBUTE) {\n      printer.set_space_before_token(true);\n    } else if (raw_token.type === TOKEN.EQUALS) { //no space before =\n      printer.set_space_before_token(false);\n    } else if (raw_token.type === TOKEN.VALUE && raw_token.previous.type === TOKEN.EQUALS) { //no space before value\n      printer.set_space_before_token(false);\n    }\n\n    if (raw_token.type === TOKEN.ATTRIBUTE && last_tag_token.tag_start_char === '<') {\n      if (this._is_wrap_attributes_preserve || this._is_wrap_attributes_preserve_aligned) {\n        printer.traverse_whitespace(raw_token);\n        wrapped = wrapped || raw_token.newlines !== 0;\n      }\n\n      // Wrap for 'force' options, and if the number of attributes is at least that specified in 'wrap_attributes_min_attrs':\n      // 1. always wrap the second and beyond attributes\n      // 2. wrap the first attribute only if 'force-expand-multiline' is specified\n      if (this._is_wrap_attributes_force &&\n        last_tag_token.attr_count >= this._options.wrap_attributes_min_attrs &&\n        (last_token.type !== TOKEN.TAG_OPEN || // ie. second attribute and beyond\n          this._is_wrap_attributes_force_expand_multiline)) {\n        printer.print_newline(false);\n        wrapped = true;\n      }\n    }\n    printer.print_token(raw_token);\n    wrapped = wrapped || printer.previous_token_wrapped();\n    last_tag_token.has_wrapped_attrs = wrapped;\n  }\n  return parser_token;\n};\n\nBeautifier.prototype._handle_text = function(printer, raw_token, last_tag_token) {\n  var parser_token = {\n    text: raw_token.text,\n    type: 'TK_CONTENT'\n  };\n  if (last_tag_token.custom_beautifier_name) { //check if we need to format javascript\n    this._print_custom_beatifier_text(printer, raw_token, last_tag_token);\n  } else if (last_tag_token.is_unformatted || last_tag_token.is_content_unformatted) {\n    printer.add_raw_token(raw_token);\n  } else {\n    printer.traverse_whitespace(raw_token);\n    printer.print_token(raw_token);\n  }\n  return parser_token;\n};\n\nBeautifier.prototype._print_custom_beatifier_text = function(printer, raw_token, last_tag_token) {\n  var local = this;\n  if (raw_token.text !== '') {\n\n    var text = raw_token.text,\n      _beautifier,\n      script_indent_level = 1,\n      pre = '',\n      post = '';\n    if (last_tag_token.custom_beautifier_name === 'javascript' && typeof this._js_beautify === 'function') {\n      _beautifier = this._js_beautify;\n    } else if (last_tag_token.custom_beautifier_name === 'css' && typeof this._css_beautify === 'function') {\n      _beautifier = this._css_beautify;\n    } else if (last_tag_token.custom_beautifier_name === 'html') {\n      _beautifier = function(html_source, options) {\n        var beautifier = new Beautifier(html_source, options, local._js_beautify, local._css_beautify);\n        return beautifier.beautify();\n      };\n    }\n\n    if (this._options.indent_scripts === \"keep\") {\n      script_indent_level = 0;\n    } else if (this._options.indent_scripts === \"separate\") {\n      script_indent_level = -printer.indent_level;\n    }\n\n    var indentation = printer.get_full_indent(script_indent_level);\n\n    // if there is at least one empty line at the end of this text, strip it\n    // we'll be adding one back after the text but before the containing tag.\n    text = text.replace(/\\n[ \\t]*$/, '');\n\n    // Handle the case where content is wrapped in a comment or cdata.\n    if (last_tag_token.custom_beautifier_name !== 'html' &&\n      text[0] === '<' && text.match(/^(<!--|<!\\[CDATA\\[)/)) {\n      var matched = /^(<!--[^\\n]*|<!\\[CDATA\\[)(\\n?)([ \\t\\n]*)([\\s\\S]*)(-->|]]>)$/.exec(text);\n\n      // if we start to wrap but don't finish, print raw\n      if (!matched) {\n        printer.add_raw_token(raw_token);\n        return;\n      }\n\n      pre = indentation + matched[1] + '\\n';\n      text = matched[4];\n      if (matched[5]) {\n        post = indentation + matched[5];\n      }\n\n      // if there is at least one empty line at the end of this text, strip it\n      // we'll be adding one back after the text but before the containing tag.\n      text = text.replace(/\\n[ \\t]*$/, '');\n\n      if (matched[2] || matched[3].indexOf('\\n') !== -1) {\n        // if the first line of the non-comment text has spaces\n        // use that as the basis for indenting in null case.\n        matched = matched[3].match(/[ \\t]+$/);\n        if (matched) {\n          raw_token.whitespace_before = matched[0];\n        }\n      }\n    }\n\n    if (text) {\n      if (_beautifier) {\n\n        // call the Beautifier if avaliable\n        var Child_options = function() {\n          this.eol = '\\n';\n        };\n        Child_options.prototype = this._options.raw_options;\n        var child_options = new Child_options();\n        text = _beautifier(indentation + text, child_options);\n      } else {\n        // simply indent the string otherwise\n        var white = raw_token.whitespace_before;\n        if (white) {\n          text = text.replace(new RegExp('\\n(' + white + ')?', 'g'), '\\n');\n        }\n\n        text = indentation + text.replace(/\\n/g, '\\n' + indentation);\n      }\n    }\n\n    if (pre) {\n      if (!text) {\n        text = pre + post;\n      } else {\n        text = pre + text + '\\n' + post;\n      }\n    }\n\n    printer.print_newline(false);\n    if (text) {\n      raw_token.text = text;\n      raw_token.whitespace_before = '';\n      raw_token.newlines = 0;\n      printer.add_raw_token(raw_token);\n      printer.print_newline(true);\n    }\n  }\n};\n\nBeautifier.prototype._handle_tag_open = function(printer, raw_token, last_tag_token, last_token, tokens) {\n  var parser_token = this._get_tag_open_token(raw_token);\n\n  if ((last_tag_token.is_unformatted || last_tag_token.is_content_unformatted) &&\n    !last_tag_token.is_empty_element &&\n    raw_token.type === TOKEN.TAG_OPEN && !parser_token.is_start_tag) {\n    // End element tags for unformatted or content_unformatted elements\n    // are printed raw to keep any newlines inside them exactly the same.\n    printer.add_raw_token(raw_token);\n    parser_token.start_tag_token = this._tag_stack.try_pop(parser_token.tag_name);\n  } else {\n    printer.traverse_whitespace(raw_token);\n    this._set_tag_position(printer, raw_token, parser_token, last_tag_token, last_token);\n    if (!parser_token.is_inline_element) {\n      printer.set_wrap_point();\n    }\n    printer.print_token(raw_token);\n  }\n\n  // count the number of attributes\n  if (parser_token.is_start_tag && this._is_wrap_attributes_force) {\n    var peek_index = 0;\n    var peek_token;\n    do {\n      peek_token = tokens.peek(peek_index);\n      if (peek_token.type === TOKEN.ATTRIBUTE) {\n        parser_token.attr_count += 1;\n      }\n      peek_index += 1;\n    } while (peek_token.type !== TOKEN.EOF && peek_token.type !== TOKEN.TAG_CLOSE);\n  }\n\n  //indent attributes an auto, forced, aligned or forced-align line-wrap\n  if (this._is_wrap_attributes_force_aligned || this._is_wrap_attributes_aligned_multiple || this._is_wrap_attributes_preserve_aligned) {\n    parser_token.alignment_size = raw_token.text.length + 1;\n  }\n\n  if (!parser_token.tag_complete && !parser_token.is_unformatted) {\n    printer.alignment_size = parser_token.alignment_size;\n  }\n\n  return parser_token;\n};\n\nvar TagOpenParserToken = function(parent, raw_token) {\n  this.parent = parent || null;\n  this.text = '';\n  this.type = 'TK_TAG_OPEN';\n  this.tag_name = '';\n  this.is_inline_element = false;\n  this.is_unformatted = false;\n  this.is_content_unformatted = false;\n  this.is_empty_element = false;\n  this.is_start_tag = false;\n  this.is_end_tag = false;\n  this.indent_content = false;\n  this.multiline_content = false;\n  this.custom_beautifier_name = null;\n  this.start_tag_token = null;\n  this.attr_count = 0;\n  this.has_wrapped_attrs = false;\n  this.alignment_size = 0;\n  this.tag_complete = false;\n  this.tag_start_char = '';\n  this.tag_check = '';\n\n  if (!raw_token) {\n    this.tag_complete = true;\n  } else {\n    var tag_check_match;\n\n    this.tag_start_char = raw_token.text[0];\n    this.text = raw_token.text;\n\n    if (this.tag_start_char === '<') {\n      tag_check_match = raw_token.text.match(/^<([^\\s>]*)/);\n      this.tag_check = tag_check_match ? tag_check_match[1] : '';\n    } else {\n      tag_check_match = raw_token.text.match(/^{{~?(?:[\\^]|#\\*?)?([^\\s}]+)/);\n      this.tag_check = tag_check_match ? tag_check_match[1] : '';\n\n      // handle \"{{#> myPartial}}\" or \"{{~#> myPartial}}\"\n      if ((raw_token.text.startsWith('{{#>') || raw_token.text.startsWith('{{~#>')) && this.tag_check[0] === '>') {\n        if (this.tag_check === '>' && raw_token.next !== null) {\n          this.tag_check = raw_token.next.text.split(' ')[0];\n        } else {\n          this.tag_check = raw_token.text.split('>')[1];\n        }\n      }\n    }\n\n    this.tag_check = this.tag_check.toLowerCase();\n\n    if (raw_token.type === TOKEN.COMMENT) {\n      this.tag_complete = true;\n    }\n\n    this.is_start_tag = this.tag_check.charAt(0) !== '/';\n    this.tag_name = !this.is_start_tag ? this.tag_check.substr(1) : this.tag_check;\n    this.is_end_tag = !this.is_start_tag ||\n      (raw_token.closed && raw_token.closed.text === '/>');\n\n    // if whitespace handler ~ included (i.e. {{~#if true}}), handlebars tags start at pos 3 not pos 2\n    var handlebar_starts = 2;\n    if (this.tag_start_char === '{' && this.text.length >= 3) {\n      if (this.text.charAt(2) === '~') {\n        handlebar_starts = 3;\n      }\n    }\n\n    // handlebars tags that don't start with # or ^ are single_tags, and so also start and end.\n    this.is_end_tag = this.is_end_tag ||\n      (this.tag_start_char === '{' && (this.text.length < 3 || (/[^#\\^]/.test(this.text.charAt(handlebar_starts)))));\n  }\n};\n\nBeautifier.prototype._get_tag_open_token = function(raw_token) { //function to get a full tag and parse its type\n  var parser_token = new TagOpenParserToken(this._tag_stack.get_parser_token(), raw_token);\n\n  parser_token.alignment_size = this._options.wrap_attributes_indent_size;\n\n  parser_token.is_end_tag = parser_token.is_end_tag ||\n    in_array(parser_token.tag_check, this._options.void_elements);\n\n  parser_token.is_empty_element = parser_token.tag_complete ||\n    (parser_token.is_start_tag && parser_token.is_end_tag);\n\n  parser_token.is_unformatted = !parser_token.tag_complete && in_array(parser_token.tag_check, this._options.unformatted);\n  parser_token.is_content_unformatted = !parser_token.is_empty_element && in_array(parser_token.tag_check, this._options.content_unformatted);\n  parser_token.is_inline_element = in_array(parser_token.tag_name, this._options.inline) || (this._options.inline_custom_elements && parser_token.tag_name.includes(\"-\")) || parser_token.tag_start_char === '{';\n\n  return parser_token;\n};\n\nBeautifier.prototype._set_tag_position = function(printer, raw_token, parser_token, last_tag_token, last_token) {\n\n  if (!parser_token.is_empty_element) {\n    if (parser_token.is_end_tag) { //this tag is a double tag so check for tag-ending\n      parser_token.start_tag_token = this._tag_stack.try_pop(parser_token.tag_name); //remove it and all ancestors\n    } else { // it's a start-tag\n      // check if this tag is starting an element that has optional end element\n      // and do an ending needed\n      if (this._do_optional_end_element(parser_token)) {\n        if (!parser_token.is_inline_element) {\n          printer.print_newline(false);\n        }\n      }\n\n      this._tag_stack.record_tag(parser_token); //push it on the tag stack\n\n      if ((parser_token.tag_name === 'script' || parser_token.tag_name === 'style') &&\n        !(parser_token.is_unformatted || parser_token.is_content_unformatted)) {\n        parser_token.custom_beautifier_name = get_custom_beautifier_name(parser_token.tag_check, raw_token);\n      }\n    }\n  }\n\n  if (in_array(parser_token.tag_check, this._options.extra_liners)) { //check if this double needs an extra line\n    printer.print_newline(false);\n    if (!printer._output.just_added_blankline()) {\n      printer.print_newline(true);\n    }\n  }\n\n  if (parser_token.is_empty_element) { //if this tag name is a single tag type (either in the list or has a closing /)\n\n    // if you hit an else case, reset the indent level if you are inside an:\n    // 'if', 'unless', or 'each' block.\n    if (parser_token.tag_start_char === '{' && parser_token.tag_check === 'else') {\n      this._tag_stack.indent_to_tag(['if', 'unless', 'each']);\n      parser_token.indent_content = true;\n      // Don't add a newline if opening {{#if}} tag is on the current line\n      var foundIfOnCurrentLine = printer.current_line_has_match(/{{#if/);\n      if (!foundIfOnCurrentLine) {\n        printer.print_newline(false);\n      }\n    }\n\n    // Don't add a newline before elements that should remain where they are.\n    if (parser_token.tag_name === '!--' && last_token.type === TOKEN.TAG_CLOSE &&\n      last_tag_token.is_end_tag && parser_token.text.indexOf('\\n') === -1) {\n      //Do nothing. Leave comments on same line.\n    } else {\n      if (!(parser_token.is_inline_element || parser_token.is_unformatted)) {\n        printer.print_newline(false);\n      }\n      this._calcluate_parent_multiline(printer, parser_token);\n    }\n  } else if (parser_token.is_end_tag) { //this tag is a double tag so check for tag-ending\n    var do_end_expand = false;\n\n    // deciding whether a block is multiline should not be this hard\n    do_end_expand = parser_token.start_tag_token && parser_token.start_tag_token.multiline_content;\n    do_end_expand = do_end_expand || (!parser_token.is_inline_element &&\n      !(last_tag_token.is_inline_element || last_tag_token.is_unformatted) &&\n      !(last_token.type === TOKEN.TAG_CLOSE && parser_token.start_tag_token === last_tag_token) &&\n      last_token.type !== 'TK_CONTENT'\n    );\n\n    if (parser_token.is_content_unformatted || parser_token.is_unformatted) {\n      do_end_expand = false;\n    }\n\n    if (do_end_expand) {\n      printer.print_newline(false);\n    }\n  } else { // it's a start-tag\n    parser_token.indent_content = !parser_token.custom_beautifier_name;\n\n    if (parser_token.tag_start_char === '<') {\n      if (parser_token.tag_name === 'html') {\n        parser_token.indent_content = this._options.indent_inner_html;\n      } else if (parser_token.tag_name === 'head') {\n        parser_token.indent_content = this._options.indent_head_inner_html;\n      } else if (parser_token.tag_name === 'body') {\n        parser_token.indent_content = this._options.indent_body_inner_html;\n      }\n    }\n\n    if (!(parser_token.is_inline_element || parser_token.is_unformatted) &&\n      (last_token.type !== 'TK_CONTENT' || parser_token.is_content_unformatted)) {\n      printer.print_newline(false);\n    }\n\n    this._calcluate_parent_multiline(printer, parser_token);\n  }\n};\n\nBeautifier.prototype._calcluate_parent_multiline = function(printer, parser_token) {\n  if (parser_token.parent && printer._output.just_added_newline() &&\n    !((parser_token.is_inline_element || parser_token.is_unformatted) && parser_token.parent.is_inline_element)) {\n    parser_token.parent.multiline_content = true;\n  }\n};\n\n//To be used for <p> tag special case:\nvar p_closers = ['address', 'article', 'aside', 'blockquote', 'details', 'div', 'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hr', 'main', 'menu', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'];\nvar p_parent_excludes = ['a', 'audio', 'del', 'ins', 'map', 'noscript', 'video'];\n\nBeautifier.prototype._do_optional_end_element = function(parser_token) {\n  var result = null;\n  // NOTE: cases of \"if there is no more content in the parent element\"\n  // are handled automatically by the beautifier.\n  // It assumes parent or ancestor close tag closes all children.\n  // https://www.w3.org/TR/html5/syntax.html#optional-tags\n  if (parser_token.is_empty_element || !parser_token.is_start_tag || !parser_token.parent) {\n    return;\n\n  }\n\n  if (parser_token.tag_name === 'body') {\n    // A head element’s end tag may be omitted if the head element is not immediately followed by a space character or a comment.\n    result = result || this._tag_stack.try_pop('head');\n\n    //} else if (parser_token.tag_name === 'body') {\n    // DONE: A body element’s end tag may be omitted if the body element is not immediately followed by a comment.\n\n  } else if (parser_token.tag_name === 'li') {\n    // An li element’s end tag may be omitted if the li element is immediately followed by another li element or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('li', ['ol', 'ul', 'menu']);\n\n  } else if (parser_token.tag_name === 'dd' || parser_token.tag_name === 'dt') {\n    // A dd element’s end tag may be omitted if the dd element is immediately followed by another dd element or a dt element, or if there is no more content in the parent element.\n    // A dt element’s end tag may be omitted if the dt element is immediately followed by another dt element or a dd element.\n    result = result || this._tag_stack.try_pop('dt', ['dl']);\n    result = result || this._tag_stack.try_pop('dd', ['dl']);\n\n\n  } else if (parser_token.parent.tag_name === 'p' && p_closers.indexOf(parser_token.tag_name) !== -1) {\n    // IMPORTANT: this else-if works because p_closers has no overlap with any other element we look for in this method\n    // check for the parent element is an HTML element that is not an <a>, <audio>, <del>, <ins>, <map>, <noscript>, or <video> element,  or an autonomous custom element.\n    // To do this right, this needs to be coded as an inclusion of the inverse of the exclusion above.\n    // But to start with (if we ignore \"autonomous custom elements\") the exclusion would be fine.\n    var p_parent = parser_token.parent.parent;\n    if (!p_parent || p_parent_excludes.indexOf(p_parent.tag_name) === -1) {\n      result = result || this._tag_stack.try_pop('p');\n    }\n  } else if (parser_token.tag_name === 'rp' || parser_token.tag_name === 'rt') {\n    // An rt element’s end tag may be omitted if the rt element is immediately followed by an rt or rp element, or if there is no more content in the parent element.\n    // An rp element’s end tag may be omitted if the rp element is immediately followed by an rt or rp element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('rt', ['ruby', 'rtc']);\n    result = result || this._tag_stack.try_pop('rp', ['ruby', 'rtc']);\n\n  } else if (parser_token.tag_name === 'optgroup') {\n    // An optgroup element’s end tag may be omitted if the optgroup element is immediately followed by another optgroup element, or if there is no more content in the parent element.\n    // An option element’s end tag may be omitted if the option element is immediately followed by another option element, or if it is immediately followed by an optgroup element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('optgroup', ['select']);\n    //result = result || this._tag_stack.try_pop('option', ['select']);\n\n  } else if (parser_token.tag_name === 'option') {\n    // An option element’s end tag may be omitted if the option element is immediately followed by another option element, or if it is immediately followed by an optgroup element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('option', ['select', 'datalist', 'optgroup']);\n\n  } else if (parser_token.tag_name === 'colgroup') {\n    // DONE: A colgroup element’s end tag may be omitted if the colgroup element is not immediately followed by a space character or a comment.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n\n  } else if (parser_token.tag_name === 'thead') {\n    // A colgroup element's end tag may be ommitted if a thead, tfoot, tbody, or tr element is started.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n    result = result || this._tag_stack.try_pop('colgroup', ['table']);\n\n    //} else if (parser_token.tag_name === 'caption') {\n    // DONE: A caption element’s end tag may be omitted if the caption element is not immediately followed by a space character or a comment.\n\n  } else if (parser_token.tag_name === 'tbody' || parser_token.tag_name === 'tfoot') {\n    // A thead element’s end tag may be omitted if the thead element is immediately followed by a tbody or tfoot element.\n    // A tbody element’s end tag may be omitted if the tbody element is immediately followed by a tbody or tfoot element, or if there is no more content in the parent element.\n    // A colgroup element's end tag may be ommitted if a thead, tfoot, tbody, or tr element is started.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n    result = result || this._tag_stack.try_pop('colgroup', ['table']);\n    result = result || this._tag_stack.try_pop('thead', ['table']);\n    result = result || this._tag_stack.try_pop('tbody', ['table']);\n\n    //} else if (parser_token.tag_name === 'tfoot') {\n    // DONE: A tfoot element’s end tag may be omitted if there is no more content in the parent element.\n\n  } else if (parser_token.tag_name === 'tr') {\n    // A tr element’s end tag may be omitted if the tr element is immediately followed by another tr element, or if there is no more content in the parent element.\n    // A colgroup element's end tag may be ommitted if a thead, tfoot, tbody, or tr element is started.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n    result = result || this._tag_stack.try_pop('colgroup', ['table']);\n    result = result || this._tag_stack.try_pop('tr', ['table', 'thead', 'tbody', 'tfoot']);\n\n  } else if (parser_token.tag_name === 'th' || parser_token.tag_name === 'td') {\n    // A td element’s end tag may be omitted if the td element is immediately followed by a td or th element, or if there is no more content in the parent element.\n    // A th element’s end tag may be omitted if the th element is immediately followed by a td or th element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('td', ['table', 'thead', 'tbody', 'tfoot', 'tr']);\n    result = result || this._tag_stack.try_pop('th', ['table', 'thead', 'tbody', 'tfoot', 'tr']);\n  }\n\n  // Start element omission not handled currently\n  // A head element’s start tag may be omitted if the element is empty, or if the first thing inside the head element is an element.\n  // A tbody element’s start tag may be omitted if the first thing inside the tbody element is a tr element, and if the element is not immediately preceded by a tbody, thead, or tfoot element whose end tag has been omitted. (It can’t be omitted if the element is empty.)\n  // A colgroup element’s start tag may be omitted if the first thing inside the colgroup element is a col element, and if the element is not immediately preceded by another colgroup element whose end tag has been omitted. (It can’t be omitted if the element is empty.)\n\n  // Fix up the parent of the parser token\n  parser_token.parent = this._tag_stack.get_parser_token();\n\n  return result;\n};\n\nmodule.exports.Beautifier = Beautifier;\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar Beautifier = require('./beautifier').Beautifier,\n  Options = require('./options').Options;\n\nfunction style_html(html_source, options, js_beautify, css_beautify) {\n  var beautifier = new Beautifier(html_source, options, js_beautify, css_beautify);\n  return beautifier.beautify();\n}\n\nmodule.exports = style_html;\nmodule.exports.defaultOptions = function() {\n  return new Options();\n};\n","/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n'use strict';\n\nvar js_beautify = require('./javascript/index');\nvar css_beautify = require('./css/index');\nvar html_beautify = require('./html/index');\n\nfunction style_html(html_source, options, js, css) {\n  js = js || js_beautify;\n  css = css || css_beautify;\n  return html_beautify(html_source, options, js, css);\n}\nstyle_html.defaultOptions = html_beautify.defaultOptions;\n\nmodule.exports.js = js_beautify;\nmodule.exports.css = css_beautify;\nmodule.exports.html = style_html;\n","/*jshint node:true */\n/* globals define */\n/*\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n*/\n\n'use strict';\n\n/**\nThe following batches are equivalent:\n\nvar beautify_js = require('js-beautify');\nvar beautify_js = require('js-beautify').js;\nvar beautify_js = require('js-beautify').js_beautify;\n\nvar beautify_css = require('js-beautify').css;\nvar beautify_css = require('js-beautify').css_beautify;\n\nvar beautify_html = require('js-beautify').html;\nvar beautify_html = require('js-beautify').html_beautify;\n\nAll methods returned accept two arguments, the source string and an options object.\n**/\n\nfunction get_beautify(js_beautify, css_beautify, html_beautify) {\n  // the default is js\n  var beautify = function(src, config) {\n    return js_beautify.js_beautify(src, config);\n  };\n\n  // short aliases\n  beautify.js = js_beautify.js_beautify;\n  beautify.css = css_beautify.css_beautify;\n  beautify.html = html_beautify.html_beautify;\n\n  // legacy aliases\n  beautify.js_beautify = js_beautify.js_beautify;\n  beautify.css_beautify = css_beautify.css_beautify;\n  beautify.html_beautify = html_beautify.html_beautify;\n\n  return beautify;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n  define([\n    \"./lib/beautify\",\n    \"./lib/beautify-css\",\n    \"./lib/beautify-html\"\n  ], function(js_beautify, css_beautify, html_beautify) {\n    return get_beautify(js_beautify, css_beautify, html_beautify);\n  });\n} else {\n  (function(mod) {\n    var beautifier = require('./src/index');\n    beautifier.js_beautify = beautifier.js;\n    beautifier.css_beautify = beautifier.css;\n    beautifier.html_beautify = beautifier.html;\n\n    mod.exports = get_beautify(beautifier, beautifier, beautifier);\n\n  })(module);\n}","<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { html } from \"js-beautify\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    text,\n    onSubmit,\n    onClose,\n  }: {\n    text: string;\n    onSubmit: (text: string) => void;\n    onClose: () => void;\n  } = $props();\n\n  text = html(text);\n  let textarea: HTMLTextAreaElement;\n  $effect(() => {\n    textarea?.focus();\n  });\n\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} size=\"lg\">\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Source Code\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <textarea\n          id=\"source_text\"\n          class=\"form-control\"\n          style=\"height: calc(100vh - 240px); max-height: 568px\"\n          aria-label={t(\"Source Code\")}\n          bind:value={text}\n          bind:this={textarea}\n        ></textarea>\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Save (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit(text);\n          close();\n        }}\n      >\n        {t(\"Save\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M18.045 7.95c0-1.877-1.596-3.95-4.207-3.95h-8.262c-.427 0-.576.24-.576.647v14.79c0 .406.204.563.631.563h8.484c3.111 0 4.885-2.063 4.885-4.342 0-2.306-1.446-3.943-2.96-4.27.9-.409 2.006-1.561 2.006-3.438zm-5.326-.95c.867 0 1.497.682 1.497 1.5 0 .694-.52 1.5-1.497 1.5h-4.52v-3h4.52zm-4.52 9.5v-3h5.57c.897 0 1.472.775 1.472 1.5 0 .948-.79 1.5-1.472 1.5h-5.57z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M12.435 16.33l.105-.38c.005-.021.557-2.182 1.147-4.438 1.015-3.879 1.263-4.66 1.318-4.779.189-.396.495-.695.936-.916.381-.19.866-.315 1.443-.373.17-.018.33-.113.447-.267.106-.14.168-.317.168-.486 0-.381-.306-.692-.682-.692h-7.733c-.376 0-.682.311-.682.692v.024c0 .341.241.628.573.682.439.072 1.042.172 1.515.399.243.116.431.257.557.418.143.182.213.393.213.642 0 .467-.135.935-.265 1.387l-.082.291c-.167.603-.412 1.519-.696 2.579-.655 2.441-1.47 5.477-1.675 6.055-.138.389-.65 1.311-2.413 1.448-.171.013-.332.092-.447.219-.117.129-.181.294-.181.47v.002c0 .381.306.692.682.692h7.735c.376 0 .682-.311.682-.692v-.005c0-.349-.257-.644-.598-.685l-.201-.024c-.679-.079-1.523-.179-1.878-.647-.165-.217-.217-.504-.163-.872.035-.249.105-.491.178-.745\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M6 20h12v1h-12v-1zm12-7.242c0 1.907-.532 3.324-1.596 4.251-1.064.927-2.535 1.391-4.414 1.391-1.905 0-3.379-.46-4.424-1.381-1.044-.921-1.567-2.341-1.567-4.261v-8.758h3.094v8.758c0 .381.033.756.099 1.124.066.368.204.694.414.976.21.283.502.513.877.69.374.178.877.266 1.507.266 1.103 0 1.865-.247 2.286-.74.42-.493.631-1.266.631-2.318v-8.758h3.094v8.758z\\\"/></svg>\"","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_45)\\\">\\n        <path d=\\\"M64.8 37.01H51.4V36.28C51.4 32.16 52.74 30.45 55.27 30.45C57.39 30.45 58.58 31.7 58.98 33.73H63.16C62.44 29.02 59.54 26.77 55.27 26.77C50.43 26.77 47.03 29.64 47.03 36.29V37.02H42.11C43.55 36.14 44.47 34.7 44.47 32.7C44.47 28.86 41.69 27.05 36.61 27.05H29.4V37.01H23.97L20.5 27.05H16.32L12.85 37.01H7.19V40.21H11.74L8.83 48.57H13.51L14.82 44.48H22.03L23.34 48.57H27.99L25.08 40.21H29.39V48.57H37.28C42.96 48.57 45.14 45.73 45.14 42.39C45.14 41.56 45 40.84 44.76 40.2H47.04C47.33 46.17 50.63 48.85 55.25 48.85C59.87 48.85 62.4 46.73 63.11 41.89H58.96C58.49 44.07 57.43 45.17 55.25 45.17C52.92 45.17 51.6 43.59 51.41 40.21H64.79V37.01H64.8ZM33.77 30.72H36.2C39.35 30.72 40.1 31.59 40.1 33.09C40.1 34.59 39.07 35.55 36.67 35.55H33.77V30.71V30.72ZM18.42 33.22L19.64 37.01H17.21L18.43 33.22H18.42ZM20.85 40.8H15.98L16.17 40.2H20.65L20.84 40.8H20.85ZM40.79 42.05C40.79 43.89 39.54 44.89 36.92 44.89H33.77V40.21H40.14C40.58 40.65 40.8 41.25 40.8 42.05H40.79Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_45\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M8 11.505c0-.279.229-.505.5-.505h10.999c.276 0 .5.214.5.505v.991c0 .279-.229.505-.5.505h-10.999c-.276 0-.5-.214-.5-.505v-.991zm0 6c0-.279.229-.505.5-.505h10.999c.276 0 .5.214.5.505v.991c0 .279-.229.505-.5.505h-10.999c-.276 0-.5-.214-.5-.505v-.991zm0-12c0-.279.229-.505.5-.505h10.999c.276 0 .5.214.5.505v.991c0 .279-.229.505-.5.505h-10.999c-.276 0-.5-.214-.5-.505v-.991zm-3 1.495c-.552 0-1-.448-1-1s.448-1 1-1 1 .448 1 1-.448 1-1 1zm0 6c-.552 0-1-.448-1-1s.448-1 1-1 1 .448 1 1-.448 1-1 1zm0 6c-.552 0-1-.448-1-1s.448-1 1-1 1 .448 1 1-.448 1-1 1z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M6 18.5h-2v-.5h2v-1h.5v2.5h-2.5v-.5h2v-.5zm-2-6.25v-.25h2v-1h.5v1.5h-2v.5h2v.5h-2.5v-1.25zm4-.745c0-.279.229-.505.5-.505h10.999c.276 0 .5.214.5.505v.991c0 .279-.229.505-.5.505h-10.999c-.276 0-.5-.214-.5-.505v-.991zm0 6c0-.279.229-.505.5-.505h10.999c.276 0 .5.214.5.505v.991c0 .279-.229.505-.5.505h-10.999c-.276 0-.5-.214-.5-.505v-.991zm0-12c0-.279.229-.505.5-.505h10.999c.276 0 .5.214.5.505v.991c0 .279-.229.505-.5.505h-10.999c-.276 0-.5-.214-.5-.505v-.991zm-3-1.005h.5v3h-.5v-3zm-1 6.5h2v.5h-2v-.5zm0 6h2v.5h-2v-.5z\\\"/></svg>\"","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M63 32H9V40H63V32Z\\\" fill=\\\"black\\\"/>\\n</svg>\\n\"","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_31)\\\">\\n        <path d=\\\"M30.09 44.49H13.05V31.36C13.05 26.53 14.05 22.71 16.07 19.92C18.09 17.13 21.53 14.66 26.41 12.51L30.09 19.49C27.09 20.9 25.01 22.31 23.86 23.7C22.71 25.1 22.07 26.75 21.94 28.66H30.09V44.49ZM49.95 44.49H32.91V31.36C32.91 26.53 33.91 22.71 35.93 19.92C37.95 17.13 41.39 14.66 46.27 12.51L49.95 19.49C46.95 20.9 44.87 22.31 43.72 23.7C42.57 25.09 41.93 26.75 41.8 28.66H49.95V44.49Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_31\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\">\\n    <path fill-rule=\\\"evenodd\\\" d=\\\"M16.407 6.284l1.732 1c.957.552 1.284 1.775.732 2.732l-5 8.66c-.552.957-1.775 1.284-2.732.732l-1.732-1-1.5 2.598c-.276.478-.888.642-1.366.366-.478-.276-.642-.888-.366-1.366l1.5-2.598-1.732-1c-.957-.552-1.284-1.775-.732-2.732l5-8.66c.552-.957 1.775-1.284 2.732-.732l1.732 1 1.5-2.598c.276-.478.888-.642 1.366-.366.478.276.642.888.366 1.366l-1.5 2.598zm-1 1.732l-.5.866c-.276.478-.888.642-1.366.366-.478-.276-.642-.888-.366-1.366l.5-.866-1.299-.75c-.239-.138-.545-.056-.683.183l-4.5 7.794c-.138.239-.056.545.183.683l1.299.75.5-.866c.276-.478.888-.642 1.366-.366.478.276.642.888.366 1.366l-.5.866 1.299.75c.239.138.545.056.683-.183l4.5-7.794c.138-.239.056-.545-.183-.683l-1.299-.75zm-6.696-.402l-1.961 3.397c.443-.415.872-.503 1.287-.263.415.24.564.661.445 1.263l1.961-3.397c-.448.57-.921.711-1.42.423-.499-.288-.603-.762-.312-1.423zm6.928 4l-1.961 3.397c.443-.415.872-.503 1.287-.263.415.24.564.661.445 1.263l1.961-3.397c-.448.57-.921.711-1.42.423-.499-.288-.603-.762-.312-1.423zm4.464 1.634c.138.239.056.545-.183.683l-.866.5c-.239.138-.545.056-.683-.183s-.056-.545.183-.683l.866-.5c.239-.138.545-.056.683.183zm-2.866 2.964c.276 0 .5.224.5.5v1c0 .276-.224.5-.5.5s-.5-.224-.5-.5v-1c0-.276.224-.5.5-.5zm2.732.268c-.138.239-.444.321-.683.183l-.866-.5c-.239-.138-.321-.444-.183-.683.138-.239.444-.321.683-.183l.866.5c.239.138.321.444.183.683zm-12.64-10.607c.276 0 .5.224.5.5v1c0 .276-.224.5-.5.5s-.5-.224-.5-.5v-1c0-.276.224-.5.5-.5zm-1.134 3.964c.138.239.056.545-.183.683l-.866.5c-.239.138-.545.056-.683-.183s-.056-.545.183-.683l.866-.5c.239-.138.545-.056.683.183zm.134-1.232c-.138.239-.444.321-.683.183l-.866-.5c-.239-.138-.321-.444-.183-.683.138-.239.444-.321.683-.183l.866.5c.239.138.321.444.183.683z\\\"/>\\n</svg>\\n\"","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_171)\\\">\\n        <path d=\\\"M43.45 22.79H26.67L34.86 14.43L28.46 8.10001L9.65002 27.31L28.47 46.52L34.87 40.19L26.68 31.83H43.46C48.93 31.83 53.38 36.4 53.38 42.02V44.69C53.38 50.31 48.93 54.88 43.46 54.88V63.9C53.88 63.9 62.36 55.28 62.36 44.68V42.01C62.36 31.41 53.88 22.79 43.46 22.79H43.45Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_171\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_35)\\\">\\n        <path d=\\\"M43.53 8.10001L37.13 14.43L45.32 22.79H28.54C18.12 22.79 9.64001 31.41 9.64001 42.01V44.68C9.64001 55.28 18.12 63.9 28.54 63.9V54.88C23.07 54.88 18.62 50.31 18.62 44.69V42.02C18.62 36.4 23.07 31.83 28.54 31.83H45.32L37.13 40.19L43.53 46.52L62.35 27.31L43.53 8.10001Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_35\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_39)\\\">\\n        <path d=\\\"M39 56.99H9V62.99H39V56.99Z\\\" fill=\\\"black\\\"/>\\n        <path d=\\\"M57 9L55.41 17.02H40.79L33.12 52.49H23.45L31.12 17.02H16.5L18.09 9H57Z\\\" fill=\\\"black\\\"/>\\n        <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M56.7601 52.5L62.1101 47.15C63.2801 45.98 63.2801 44.08 62.1101 42.91L62.0801 42.88C60.9101 41.71 59.0101 41.71 57.8401 42.88L52.4901 48.23L47.1401 42.88C45.9701 41.71 44.0701 41.71 42.9001 42.88L42.8701 42.91C41.7001 44.08 41.7001 45.98 42.8701 47.15L48.2201 52.5L42.8701 57.85C41.7001 59.02 41.7001 60.92 42.8701 62.09L42.9001 62.12C44.0701 63.29 45.9701 63.29 47.1401 62.12L52.4901 56.77L57.8401 62.12C59.0101 63.29 60.9101 63.29 62.0801 62.12L62.1101 62.09C63.2801 60.92 63.2801 59.02 62.1101 57.85L56.7601 52.5Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_39\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path id=\\\"a\\\" fill-rule=\\\"evenodd\\\" d=\\\"M8 6.49c0-.271.229-.49.5-.49h10.999c.276 0 .5.215.5.49v3.019c0 .271-.229.49-.5.49h-10.999c-.276 0-.5-.215-.5-.49v-3.019zm-4-1.994c0-.274.214-.496.505-.496h.991c.279 0 .505.226.505.496v15.007c0 .274-.214.496-.505.496h-.991c-.279 0-.505-.226-.505-.496v-15.007zm4 9.994c0-.271.231-.49.5-.49h6.999c.276 0 .5.215.5.49v3.019c0 .271-.231.49-.5.49h-6.999c-.276 0-.5-.215-.5-.49v-3.019z\\\"/></svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M11 13v-2h-7.5c-.276 0-.5-.215-.5-.49v-3.019c0-.271.228-.49.5-.49h7.5v-2.504c0-.274.214-.496.505-.496h.991c.279 0 .505.226.505.496v2.504h7.5c.276 0 .5.215.5.49v3.019c0 .271-.228.49-.5.49h-7.5v2h2.5c.276 0 .5.215.5.49v3.019c0 .271-.231.49-.5.49h-2.5v2.504c0 .274-.214.496-.505.496h-.991c-.279 0-.505-.226-.505-.496v-2.504h-2.5c-.276 0-.5-.215-.5-.49v-3.019c0-.271.231-.49.5-.49h2.5z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 6.49c0-.271.229-.49.5-.49h10.999c.276 0 .5.215.5.49v3.019c0 .271-.229.49-.5.49h-10.999c-.276 0-.5-.215-.5-.49v-3.019zm4 8c0-.271.231-.49.5-.49h6.999c.276 0 .5.215.5.49v3.019c0 .271-.231.49-.5.49h-6.999c-.276 0-.5-.215-.5-.49v-3.019zm10-9.994c0-.274.214-.496.505-.496h.991c.279 0 .505.226.505.496v15.007c0 .274-.214.496-.505.496h-.991c-.279 0-.505-.226-.505-.496v-15.007z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M6.553 12.06c0 .06-.036.112-.088.135l.002.003-3.216 1.856a.147.147 0 0 1-.25-.1H3v-3.787a.148.148 0 0 1 .253-.103l3.229 1.864-.004.006a.146.146 0 0 1 .075.126zM3.5 3h17a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-17a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5zm6 5h11a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5zm0 5h11a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5zm-6 5h17a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-17a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M3 12.06c0-.055.031-.1.075-.126l-.004-.006L6.3 10.064a.147.147 0 0 1 .253.103v3.786a.147.147 0 0 1-.25.101l-3.216-1.856.001-.003A.147.147 0 0 1 3 12.06zM3.5 3h17a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-17a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5zm6 5h11a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5zm0 5h11a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5zm-6 5h17a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-17a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M3.923 15.095c.019-.117.102-.213.215-.249.113-.036.236-.006.319.077l1.08 1.08 2.899-2.899c.123-.123.323-.123.446 0l1.998 1.998c.123.123.123.323 0 .446l-2.9 2.899 1.08 1.08c.084.083.114.207.078.319-.036.113-.131.196-.248.215l-5.523.933c-.101.017-.203-.015-.276-.087v-.001c-.072-.072-.105-.174-.088-.274l.919-5.538zm16.154-6.19c-.019.117-.102.213-.215.249-.113.036-.236.006-.32-.077l-1.08-1.08-2.899 2.899c-.123.123-.323.123-.446 0l-1.998-1.998c-.123-.123-.123-.323 0-.446l2.9-2.9-1.08-1.08c-.084-.084-.114-.207-.078-.319.036-.113.132-.196.248-.215l5.523-.933c.101-.017.203.016.276.088v.001c.072.072.105.174.088.274l-.919 5.538z\\\"/></svg>\\n\"","import { mount, unmount } from \"svelte\";\nimport { undoDepth, redoDepth } from \"@tiptap/pm/history\";\nimport type { ChainedCommands } from \"@tiptap/core\";\nimport { Editor as TiptapEditor } from \"@tiptap/core\";\nimport { t } from \"../../i18n\";\nimport { toKeyboardShortcutLabel } from \"../../util/keyboardShortcut\";\nimport { normalizeHTML, preprocessHTML } from \"../../util/html\";\n\nimport type { Editor } from \"../../editor\";\nimport { ToolbarItemElement } from \"./element\";\n\nimport { EditorEl } from \"../../editor\";\n\nimport insertHtmlIcon from \"../../ui/icon/insertHtml.svg?raw\";\nimport InsertHtmlModal from \"./insertHtml/Modal.svelte\";\n\nimport sourceIcon from \"../../ui/icon/source.svg?raw\";\nimport SourceModal from \"./source/Modal.svelte\";\n\nimport boldIcon from \"../../ui/icon/bold.svg?raw\";\nimport italicIcon from \"../../ui/icon/italic.svg?raw\";\nimport underlineIcon from \"../../ui/icon/underline.svg?raw\";\nimport strikeIcon from \"../../ui/icon/strike.svg?raw\";\nimport bulletListIcon from \"../../ui/icon/bulletList.svg?raw\";\nimport orderedListIcon from \"../../ui/icon/orderedList.svg?raw\";\nimport horizontalRuleIcon from \"../../ui/icon/horizontalRule.svg?raw\";\nimport blockquoteIcon from \"../../ui/icon/blockquote.svg?raw\";\nimport unlinkIcon from \"../../ui/icon/unlink.svg?raw\";\nimport undoIcon from \"../../ui/icon/undo.svg?raw\";\nimport redoIcon from \"../../ui/icon/redo.svg?raw\";\nimport removeFormatIcon from \"../../ui/icon/removeFormat.svg?raw\";\nimport alignLeftIcon from \"../../ui/icon/alignLeft.svg?raw\";\nimport alignCenterIcon from \"../../ui/icon/alignCenter.svg?raw\";\nimport alignRightIcon from \"../../ui/icon/alignRight.svg?raw\";\nimport indentIcon from \"../../ui/icon/indent.svg?raw\";\nimport outdentIcon from \"../../ui/icon/outdent.svg?raw\";\nimport fullScreenIcon from \"../../ui/icon/fullScreen.svg?raw\";\n\nconst createButtonClass = (\n  label: string | [string, string],\n  name: string,\n  icon: string,\n  method?: string | ((editor: TiptapEditor) => void),\n  stateClass?: string | false,\n  checkState?: (editor: Editor) => boolean\n) => {\n  method ??= `toggle${name.slice(0, 1).toUpperCase() + name.slice(1)}`;\n  stateClass ??= `is-active`;\n  checkState ??= (editor: Editor) => editor.tiptap.isActive(name);\n\n  return class extends ToolbarItemElement {\n    #button: HTMLButtonElement;\n    constructor() {\n      super();\n      this.#button = document.createElement(\"button\");\n      this.#button.title =\n        typeof label === \"string\"\n          ? t(label)\n          : `${t(label[0])} (${toKeyboardShortcutLabel(label[1])})`;\n      this.#button.innerHTML = icon;\n      this.shadowRoot.appendChild(this.#button);\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n\n      this.addEventListener(\"click\", () => {\n        const tiptap = this.tiptap;\n        if (!tiptap) {\n          return;\n        }\n\n        if (typeof method === \"function\") {\n          method(tiptap);\n        } else {\n          const chain = tiptap.chain().focus() as unknown as {\n            [key: string]: () => ChainedCommands;\n          };\n          chain[method]().run();\n        }\n      });\n    }\n\n    onEditorUpdate() {\n      if (stateClass !== false) {\n        const state = checkState(this.editor!);\n        this.#button.classList.toggle(stateClass, state);\n        if (stateClass === \"is-disabled\") {\n          this.#button.disabled = state;\n        }\n      }\n    }\n  };\n};\n\nconst createTextAlignButtonClass = (\n  label: string | [string, string],\n  name: string,\n  icon: string\n) => {\n  const targetAlign = name.substring(5).toLowerCase();\n\n  return class extends ToolbarItemElement {\n    #button: HTMLButtonElement;\n    constructor() {\n      super();\n      this.#button = document.createElement(\"button\");\n      this.#button.title =\n        typeof label === \"string\"\n          ? t(label)\n          : `${t(label[0])} (${toKeyboardShortcutLabel(label[1])})`;\n      this.#button.innerHTML = icon;\n      this.shadowRoot.appendChild(this.#button);\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n      this.addEventListener(\"click\", () => {\n        const tiptap = this.tiptap;\n        if (!tiptap) {\n          return;\n        }\n        const nodeType = tiptap.state.selection.$head.parent.type.name;\n        const currentAlign = tiptap.getAttributes(nodeType).textAlign;\n        if (currentAlign === targetAlign) {\n          tiptap.chain().focus().unsetTextAlign().run();\n        } else {\n          tiptap.chain().focus().setTextAlign(targetAlign).run();\n        }\n      });\n    }\n\n    onEditorUpdate() {\n      const tiptap = this.tiptap;\n      if (!tiptap) {\n        return;\n      }\n      const nodeType = tiptap.state.selection.$head.parent.type.name;\n      const currentAlign = tiptap.getAttributes(nodeType).textAlign;\n      this.#button.classList.toggle(\"is-active\", currentAlign === targetAlign);\n    }\n  };\n};\n\nexport const BoldButton = createButtonClass([\"Bold\", \"cmd+B\"], \"bold\", boldIcon);\nexport const ItalicButton = createButtonClass([\"Italic\", \"cmd+I\"], \"italic\", italicIcon);\nexport const UnderlineButton = createButtonClass(\n  [\"Underline\", \"cmd+U\"],\n  \"underline\",\n  underlineIcon\n);\nexport const StrikeButton = createButtonClass(\"Strike\", \"strike\", strikeIcon);\nexport const UnlinkButton = createButtonClass(\n  \"Unlink\",\n  \"unlink\",\n  unlinkIcon,\n  \"unsetLink\",\n  \"is-disabled\",\n  (editor: Editor) => !editor.tiptap.isActive(\"link\")\n);\nexport const BulletListButton = createButtonClass(\n  \"Bullet List\",\n  \"bulletList\",\n  bulletListIcon,\n  (tiptap) => {\n    tiptap\n      .chain()\n      .focus()\n      // FIXME: fix type error\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      .lift(tiptap.state.selection.$from.before())\n      .setNode(tiptap.isActive(\"bulletList\") ? \"paragraph\" : \"textBlock\")\n      .run();\n    tiptap.chain().toggleBulletList().run();\n  }\n);\nexport const OrderedListButton = createButtonClass(\n  \"Ordered List\",\n  \"orderedList\",\n  orderedListIcon,\n  (tiptap) => {\n    tiptap\n      .chain()\n      .focus()\n      // FIXME: fix type error\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      .lift(tiptap.state.selection.$from.before())\n      .setNode(tiptap.isActive(\"orderedList\") ? \"paragraph\" : \"textBlock\")\n      .run();\n    tiptap.chain().toggleOrderedList().run();\n  }\n);\nexport const BlockquoteButton = createButtonClass(\"Blockquote\", \"blockquote\", blockquoteIcon);\nexport const UndoButton = createButtonClass(\n  [\"Undo\", \"cmd+Z\"],\n  \"undo\",\n  undoIcon,\n  \"undo\",\n  \"is-disabled\",\n  (editor: Editor) => undoDepth(editor.tiptap.state) === 0\n);\nexport const RedoButton = createButtonClass(\n  [\"Redo\", \"cmd+Y\"],\n  \"redo\",\n  redoIcon,\n  \"redo\",\n  \"is-disabled\",\n  (editor: Editor) => redoDepth(editor.tiptap.state) === 0\n);\nexport const RemoveFormatButton = createButtonClass(\n  \"Remove Format\",\n  \"removeFormat\",\n  removeFormatIcon,\n  (tiptap) => tiptap.chain().focus().unsetAllMarks().clearNodes().run(),\n  false\n);\nexport const AlignLeftButton = createTextAlignButtonClass(\"Align Left\", \"alignLeft\", alignLeftIcon);\nexport const AlignCenterButton = createTextAlignButtonClass(\n  \"Align Center\",\n  \"alignCenter\",\n  alignCenterIcon\n);\nexport const AlignRightButton = createTextAlignButtonClass(\n  \"Align Right\",\n  \"alignRight\",\n  alignRightIcon\n);\nexport const IndentButton = createButtonClass(\"Indent\", \"indent\", indentIcon, \"indent\", false);\nexport const OutdentButton = createButtonClass(\"Outdent\", \"outdent\", outdentIcon, \"outdent\", false);\n\nexport class HorizontalRuleButton extends ToolbarItemElement {\n  constructor() {\n    super();\n    const button = document.createElement(\"button\");\n    button.title = t(\"Horizontal Rule\");\n    button.innerHTML = horizontalRuleIcon;\n    this.shadowRoot.appendChild(button);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener(\"click\", () => {\n      const tiptap = this.tiptap;\n      if (!tiptap) {\n        return;\n      }\n      tiptap.chain().focus().setHorizontalRule().run();\n    });\n  }\n}\n\nexport class InsertHtmlButton extends ToolbarItemElement {\n  constructor() {\n    super();\n    const button = document.createElement(\"button\");\n    button.title = t(\"Insert HTML\");\n    button.innerHTML = insertHtmlIcon;\n    this.shadowRoot.appendChild(button);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener(\"click\", () => {\n      const tiptap = this.tiptap;\n      if (!tiptap) {\n        return;\n      }\n      const modal = mount(InsertHtmlModal, {\n        target: document.body,\n        props: {\n          onSubmit: (html: string) => {\n            tiptap.commands.insertContent(preprocessHTML(html));\n          },\n          onClose: () => {\n            unmount(modal);\n          },\n        },\n      });\n    });\n  }\n}\n\nexport class SourceButton extends ToolbarItemElement {\n  constructor() {\n    super();\n    const button = document.createElement(\"button\");\n    button.title = t(\"Toggle to HTML editing mode\");\n    button.innerHTML = sourceIcon;\n    this.shadowRoot.appendChild(button);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener(\"click\", () => {\n      const tiptap = this.tiptap;\n      if (!tiptap) {\n        return;\n      }\n      const modal = mount(SourceModal, {\n        target: document.body,\n        props: {\n          text: normalizeHTML(tiptap.getHTML()),\n          onSubmit: (html: string) => {\n            tiptap.commands.setContent(preprocessHTML(html));\n          },\n          onClose: () => {\n            unmount(modal);\n          },\n        },\n      });\n    });\n  }\n}\n\nexport class FullScreenButton extends ToolbarItemElement {\n  #button: HTMLButtonElement;\n  #styleElement: HTMLStyleElement;\n  constructor() {\n    super();\n    this.#styleElement = document.createElement(\"style\");\n    this.#styleElement.textContent = \"body { overflow: hidden; }\";\n    this.#button = document.createElement(\"button\");\n    this.#button.title = t(\"Full Screen\");\n    this.#button.innerHTML = fullScreenIcon;\n    this.shadowRoot.appendChild(this.#button);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener(\"click\", () => {\n      const editor = this.editor;\n      if (!editor) {\n        return;\n      }\n      const isFullScreen = editor[EditorEl].classList.contains(\n        \"mt-rich-text-editor-editor--fullscreen\"\n      );\n\n      editor[EditorEl].classList.toggle(\"mt-rich-text-editor-editor--fullscreen\");\n      this.#button.classList.toggle(\"is-active\", !isFullScreen);\n\n      if (!isFullScreen) {\n        document.body.appendChild(this.#styleElement);\n      } else {\n        document.body.removeChild(this.#styleElement);\n      }\n    });\n  }\n}\n","import type { Editor } from \"../../editor\";\nimport { PanelItemElement } from \"./element\";\n\nexport const extend = (customElementConstructor: typeof HTMLElement): new () => PanelItemElement =>\n  class extends customElementConstructor implements PanelItemElement {\n    editor: Editor | undefined;\n    options: Record<string, unknown> = {};\n\n    get tiptap() {\n      return this.editor?.tiptap;\n    }\n    get shadowRoot(): ShadowRoot {\n      return super.shadowRoot!;\n    }\n\n    onEditorInit(editor: Editor, options: Record<string, unknown>) {\n      this.editor = editor;\n      this.options = options;\n    }\n    onEditorUpdate() {}\n  };\n","import { extend } from \"../../ui/item/svelte\";\nimport { ToolbarItemElement } from \"./element\";\nimport css from \"./element.css?raw\";\n\nconst toolbarItemStyle = document.createElement(\"style\");\ntoolbarItemStyle.textContent = css;\nexport const extendToolbarItem = (\n  customElementConstructor: typeof HTMLElement\n): new () => ToolbarItemElement =>\n  class extends extend(customElementConstructor) implements ToolbarItemElement {\n    connectedCallback() {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      super.connectedCallback();\n      this.shadowRoot.appendChild(toolbarItemStyle.cloneNode(true));\n    }\n  };\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\">\\n    <path fill-rule=\\\"evenodd\\\" d=\\\"M16.366 6.438l1.732 1c.957.552 1.284 1.775.732 2.732l-5 8.66c-.552.957-1.775 1.284-2.732.732l-1.732-1-1.5 2.598c-.276.478-.888.642-1.366.366-.478-.276-.642-.888-.366-1.366l1.5-2.598-1.732-1c-.957-.552-1.284-1.775-.732-2.732l5-8.66c.552-.957 1.775-1.284 2.732-.732l1.732 1 1.5-2.598c.276-.478.888-.642 1.366-.366.478.276.642.888.366 1.366l-1.5 2.598zm-1 1.732l-.5.866c-.276.478-.888.642-1.366.366-.478-.276-.642-.888-.366-1.366l.5-.866-1.299-.75c-.239-.138-.545-.056-.683.183l-4.5 7.794c-.138.239-.056.545.183.683l1.299.75.5-.866c.276-.478.888-.642 1.366-.366.478.276.642.888.366 1.366l-.5.866 1.299.75c.239.138.545.056.683-.183l4.5-7.794c.138-.239.056-.545-.183-.683l-1.299-.75z\\\"/>\\n</svg>\\n\"","<script lang=\"ts\">\n  import type { Editor } from \"../editor\";\n  import type { EditorView } from \"@tiptap/pm/view\";\n  import { findParentNode } from \"@tiptap/core\";\n  import type { ToolbarItemElement } from \"../toolbar/item/element\";\n  import { getPanelItem } from \"../ui/item/registry\";\n\n  const {\n    editor,\n    condition,\n    targetNodeName,\n    targetNodeTagName,\n    items,\n  }: {\n    editor: Editor;\n    condition: () => boolean;\n    targetNodeName: string;\n    targetNodeTagName: string;\n    items: string[][];\n  } = $props();\n\n  const tiptap = editor.tiptap;\n  const viewDom = tiptap.view.dom;\n\n  const buttonRefs: Record<string, HTMLElement> = {};\n  const buttons = items.map((item) => {\n    return item.map((name) => {\n      return {\n        name,\n        elementName: getPanelItem(\"toolbar\", name),\n        icon: name,\n      };\n    });\n  });\n\n  let isOpen = $state(false);\n  let top = $state(0);\n  let left = $state(0);\n  let toolbarElement: HTMLElement;\n  let showInBottom = $state(false);\n\n  const update = () => {\n    isOpen = !editor.getStructureMode() && condition();\n    if (isOpen) {\n      updatePosition();\n      for (const key in buttonRefs) {\n        if (\"onEditorUpdate\" in buttonRefs[key]) {\n          (buttonRefs[key] as ToolbarItemElement).onEditorUpdate();\n        }\n      }\n    }\n  };\n  tiptap.on(\"selectionUpdate\", update);\n  tiptap.on(\"update\", update);\n\n  const tryUpdatePosition = (view: EditorView) => {\n    const viewRect = view.dom.getBoundingClientRect();\n    const { selection } = view.state;\n\n    let targetDom: HTMLElement | null = null;\n    if (tiptap.isActive(targetNodeName)) {\n      const resolvedPos = view.domAtPos(selection.from);\n      if (resolvedPos.node) {\n        targetDom = resolvedPos.node as HTMLElement;\n        if (targetDom.nodeType === Node.TEXT_NODE) {\n          targetDom = targetDom.parentElement;\n        }\n      }\n      if (targetNodeTagName === \"A\" && targetDom?.tagName !== \"A\") {\n        const resolvedPos = view.domAtPos(selection.from - 1);\n        if (resolvedPos.node) {\n          targetDom = resolvedPos.node as HTMLElement;\n          if (targetDom.nodeType === Node.TEXT_NODE) {\n            targetDom = targetDom.parentElement;\n          }\n        }\n      }\n\n      if (targetDom && targetNodeTagName !== targetDom.tagName) {\n        const child = targetDom.querySelector<HTMLElement>(targetNodeTagName);\n        if (child) {\n          targetDom = child;\n        }\n      }\n    }\n    if (!targetDom) {\n      const targetPos =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (selection as any).node?.type.name === targetNodeName\n          ? selection.$anchor\n          : findParentNode((node) => node.type.name === targetNodeName)(selection);\n      if (!targetPos) {\n        top = 0;\n        left = 0;\n        return;\n      }\n\n      targetDom = view.nodeDOM(targetPos.pos) as HTMLElement;\n      if (!targetDom) {\n        top = 0;\n        left = 0;\n        return;\n      }\n    }\n\n    (async () => {\n      if (targetDom instanceof HTMLImageElement && !targetDom.complete) {\n        await new Promise((resolve) => {\n          targetDom.onload = resolve;\n        });\n      }\n\n      const targetRect = targetDom.getBoundingClientRect();\n\n      const isVisible =\n        targetRect.top < viewRect.bottom &&\n        targetRect.bottom > viewRect.top &&\n        targetRect.left < viewRect.right &&\n        targetRect.right > viewRect.left;\n\n      if (!isVisible) {\n        top = 0;\n        left = 0;\n        return;\n      }\n\n      const toolbarWidth = toolbarElement?.offsetWidth || 0;\n      const toolbarHeight = toolbarElement?.offsetHeight || 0;\n      const targetWidth = targetDom.offsetWidth;\n\n      const topPosition = targetRect.top - viewRect.top - toolbarHeight - 10;\n      const bottomPosition = targetRect.bottom - viewRect.top + 10;\n\n      showInBottom = topPosition < 0;\n\n      top = showInBottom ? bottomPosition : topPosition;\n      left = targetRect.left - viewRect.left + targetWidth / 2 - toolbarWidth / 2;\n    })();\n  };\n  const updatePosition = () => {\n    try {\n      tryUpdatePosition(tiptap.view);\n    } catch {\n      // ignore error\n    }\n  };\n\n  function bindRef(node: HTMLElement, key: string) {\n    buttonRefs[key] = node;\n    if (\"onEditorInit\" in buttonRefs[key]) {\n      (buttonRefs[key] as ToolbarItemElement).onEditorInit(editor, {});\n    }\n    return {\n      destroy() {\n        delete buttonRefs[key];\n      },\n    };\n  }\n\n  $effect(() => {\n    viewDom.addEventListener(\"scroll\", () => {\n      if (isOpen) {\n        updatePosition();\n      }\n    });\n\n    if (isOpen) {\n      updatePosition();\n    }\n  });\n</script>\n\n<div\n  bind:this={toolbarElement}\n  class={`toolbar ${showInBottom ? \"toolbar--bottom\" : \"toolbar--top\"}`}\n  style={`\n    display: ${isOpen && top && left ? \"flex\" : \"none\"};\n    background-color: #fff;\n    z-index: 1000;\n    top: ${top}px; \n    left: ${left}px;\n  `}\n>\n  {#each buttons as group, groupIndex (groupIndex)}\n    <div class=\"toolbar-group\">\n      {#each group as button (button.name)}\n        <svelte:element this={button.elementName} use:bindRef={button.name} class=\"toolbar-item\" />\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<style>\n  .toolbar {\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    z-index: 1;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    gap: 5px;\n  }\n\n  .toolbar::after,\n  .toolbar::before {\n    content: \"\";\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 0;\n    height: 0;\n  }\n\n  /* Arrow at the bottom */\n  .toolbar--top::before {\n    bottom: -9px;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-top: 8px solid #ccc;\n  }\n\n  .toolbar--top::after {\n    bottom: -7px;\n    border-left: 7px solid transparent;\n    border-right: 7px solid transparent;\n    border-top: 7px solid #fff;\n  }\n\n  /* Arrow at the top */\n  .toolbar--bottom::before {\n    top: -9px;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-bottom: 8px solid #ccc;\n  }\n\n  .toolbar--bottom::after {\n    top: -7px;\n    border-left: 7px solid transparent;\n    border-right: 7px solid transparent;\n    border-bottom: 7px solid #fff;\n  }\n\n  .toolbar-group {\n    display: flex;\n    gap: 5px;\n    padding: 4px;\n  }\n\n  .toolbar-item {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { Editor } from \"../../editor\";\n  import ContextToolbar from \"../ContextToolbar.svelte\";\n  const {\n    editor,\n  }: {\n    editor: Editor;\n  } = $props();\n  const items = [[\"previewLink\", \"editLink\", \"unlink\"]];\n</script>\n\n<ContextToolbar\n  {editor}\n  targetNodeName=\"link\"\n  targetNodeTagName=\"A\"\n  condition={() => !editor.isPasting() && editor.tiptap?.isActive(\"link\")}\n  {items}\n/>\n","import type { Editor } from \"../../editor\";\nimport Toolbar from \"./Toolbar.svelte\";\nimport { mount, unmount } from \"svelte\";\n\nexport class LinkToolbar {\n  #ui: ReturnType<typeof mount> | undefined;\n\n  constructor({ editor }: { editor: Editor }) {\n    this.#ui = mount(Toolbar, {\n      target: editor.tiptap.view.dom.getRootNode() as ShadowRoot,\n      props: {\n        editor,\n      },\n    });\n  }\n\n  public destroy(): void {\n    if (this.#ui) {\n      unmount(this.#ui);\n    }\n  }\n}\n","<script lang=\"ts\" module>\n  export interface LinkData {\n    readonly url: string;\n    readonly text: string;\n    readonly title: string;\n    readonly target: \"_self\" | \"_blank\";\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    linkData,\n    onSubmit,\n    onClose,\n  }: {\n    linkData: LinkData;\n    onSubmit: (linkData: LinkData) => void;\n    onClose: () => void;\n  } = $props();\n\n  let url = $state(linkData.url);\n  let text = $state(linkData.text);\n  let title = $state(linkData.title);\n  let target = $state(linkData.target);\n\n  let urlInput: HTMLInputElement;\n  $effect(() => {\n    urlInput?.focus();\n  });\n\n  let hasTextValue = linkData.text !== \"\";\n  const onLinkTextChange = () => {\n    hasTextValue = true;\n  };\n  $effect(() => {\n    if (!hasTextValue) {\n      text = url;\n    }\n  });\n\n  let self: Modal;\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} bind:this={self}>\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Insert Link\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <label for=\"link-url\" class=\"form-label\">{t(\"Link URL\")}</label>\n        <input\n          type=\"url\"\n          id=\"link-url\"\n          class=\"form-control\"\n          bind:value={url}\n          bind:this={urlInput}\n        />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"link-text\" class=\"form-label\">{t(\"Link Text\")}</label>\n        <input\n          type=\"text\"\n          id=\"link-text\"\n          class=\"form-control\"\n          bind:value={text}\n          onchange={onLinkTextChange}\n        />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"link-title\" class=\"form-label\">{t(\"Title\")}</label>\n        <input type=\"text\" id=\"link-title\" class=\"form-control\" bind:value={title} />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"link-target\" class=\"form-label\">{t(\"Link Target\")}</label>\n        <select id=\"link-target\" class=\"form-select\" bind:value={target}>\n          <option value=\"_self\">{t(\"LINK_TARGET_SELF\")}</option>\n          <option value=\"_blank\">{t(\"LINK_TARGET_BLANK\")}</option>\n        </select>\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit({ url, text, title, target });\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","import { mount, unmount } from \"svelte\";\nimport { Editor as TiptapEditor } from \"@tiptap/core\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport type { LinkData } from \"../../../ui/link/Modal.svelte\";\nimport LinkModal from \"../../../ui/link/Modal.svelte\";\n\nexport const onClickFunction = (tiptap: TiptapEditor | undefined) => () => {\n  if (!tiptap) {\n    return;\n  }\n  let linkData: LinkData;\n  if (tiptap.isActive(\"link\")) {\n    tiptap.chain().extendMarkRange(\"link\").run();\n\n    const linkText = tiptap.state.doc.textBetween(\n      tiptap.state.selection.from,\n      tiptap.state.selection.to\n    );\n\n    const attrs = tiptap.getAttributes(\"link\");\n    linkData = {\n      url: attrs.href || \"\",\n      text: linkText,\n      title: attrs.title || \"\",\n      target: attrs.target || \"_self\",\n    };\n  } else {\n    linkData = {\n      url: \"\",\n      text: tiptap.state.selection.empty\n        ? \"\"\n        : tiptap.state.doc.textBetween(tiptap.state.selection.from, tiptap.state.selection.to),\n      title: \"\",\n      target: \"_self\",\n    };\n  }\n\n  const modal = mount(LinkModal, {\n    target: document.body,\n    props: {\n      linkData,\n      onSubmit: (linkData: LinkData) => {\n        const chain = tiptap.chain().focus();\n\n        if (tiptap.isActive(\"link\")) {\n          chain.extendMarkRange(\"link\");\n        }\n\n        chain\n          .deleteSelection()\n          .insertContent({\n            type: \"text\",\n            text: linkData.text,\n            marks: [\n              {\n                type: \"link\",\n                attrs: {\n                  href: linkData.url,\n                  target: linkData.target,\n                  title: linkData.title,\n                },\n              },\n            ],\n          })\n          .run();\n      },\n      onClose: () => {\n        unmount(modal);\n      },\n    },\n  });\n};\n","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendToolbarItem(customElementConstructor) {\n      onEditorUpdate() {\n        this.classList.toggle(\"is-active\", this.tiptap?.isActive(\"link\"));\n      }\n    };\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { toKeyboardShortcutLabel } from \"../../../util/keyboardShortcut\";\n  import icon from \"../../../ui/icon/link.svg?raw\";\n  import { tooltip } from \"../../../tooltip\";\n  import { LinkToolbar } from \"../../../context-toolbar/link\";\n  import type { ToolbarItemElement } from \"../element\";\n  import { onClickFunction } from \"./common\";\n\n  const element = $host<ToolbarItemElement>();\n  const { editor, tiptap } = element;\n  const onClick = onClickFunction(tiptap);\n\n  element.addEventListener(\"click\", onClick);\n\n  let menu: LinkToolbar | undefined;\n  $effect(() => {\n    if (editor) {\n      menu = new LinkToolbar({ editor });\n      editor.tiptap?.commands.setInlineLinkShortcutHandler(onClick);\n    }\n    return () => {\n      menu?.destroy();\n    };\n  });\n</script>\n\n<button use:tooltip={`${t(\"Link\")} (${toKeyboardShortcutLabel(\"cmd+K\")})`}>\n  {@html icon}\n</button>\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-external-link\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 6h-6a2 2 0 0 0 -2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-6\\\" />\\n    <path d=\\\"M11 13l9 -9\\\" />\\n    <path d=\\\"M15 4h5v5\\\" />\\n</svg>\\n\"","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendToolbarItem(customElementConstructor) {};\n</script>\n\n<script lang=\"ts\">\n  import icon from \"../../../ui/icon/externalLink.svg?raw\";\n  import type { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement>();\n  const { tiptap } = element;\n  let url = $state(\"\");\n  element.onEditorUpdate = () => {\n    url = tiptap?.getAttributes(\"link\").href;\n  };\n</script>\n\n<a href={url} target=\"_blank\" title={url}>\n  <span>\n    {url}\n  </span>\n  {@html icon}\n</a>\n\n<style>\n  a {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    height: 100%;\n    padding: 0 4px;\n  }\n\n  a:hover {\n    background-color: #dee0e2;\n  }\n\n  a span {\n    max-width: 300px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  a :global(svg) {\n    width: 16px;\n    height: 16px;\n  }\n</style>\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-pencil\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4\\\" />\\n    <path d=\\\"M13.5 6.5l4 4\\\" />\\n</svg>\\n\"","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendToolbarItem(customElementConstructor) {};\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { tooltip } from \"../../../tooltip\";\n  import icon from \"../../../ui/icon/edit.svg?raw\";\n  import type { ToolbarItemElement } from \"../element\";\n  import { onClickFunction } from \"./common\";\n\n  const element = $host<ToolbarItemElement>();\n  const { tiptap } = element;\n  element.addEventListener(\"click\", onClickFunction(tiptap));\n</script>\n\n<button use:tooltip={t(\"Edit Link\")}>\n  {@html icon}\n</button>\n","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_27)\\\">\\n        <path d=\\\"M56.75 24.88H51.56V15.99C51.56 13.53 49.57 11.54 47.11 11.54H24.87C22.41 11.54 20.42 13.53 20.42 15.99V24.88H15.23C12.77 24.88 10.78 26.87 10.78 29.33V56.01C10.78 58.47 12.77 60.46 15.23 60.46H56.74C59.2 60.46 61.19 58.47 61.19 56.01V29.33C61.19 26.87 59.2 24.88 56.74 24.88H56.75ZM24.88 15.99H47.12V24.88H24.88V15.99Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_27\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","<svelte:options\n  customElement={{\n    extend: extendToolbarItem,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import type { Editor } from \"../../../editor\";\n  import { extendToolbarItem } from \"../svelte\";\n  export interface Options {\n    readonly select?: (options: { editor: Editor }) => void;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { tooltip } from \"../../../tooltip\";\n  import icon from \"../../../ui/icon/file.svg?raw\";\n  import { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement<Options>>();\n  element.addEventListener(\"click\", () => {\n    element.options.select?.({ editor: element.editor! });\n  });\n</script>\n\n<button use:tooltip={t(\"Insert File\")}>\n  {@html icon}\n</button>\n","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_21)\\\">\\n        <path d=\\\"M58.5 18.9V53.1H13.5V18.9H58.5ZM58.5 11.7H13.5C9.52005 11.7 6.30005 14.92 6.30005 18.9V53.1C6.30005 57.08 9.52005 60.3 13.5 60.3H58.5C62.48 60.3 65.7 57.08 65.7 53.1V18.9C65.7 14.92 62.48 11.7 58.5 11.7Z\\\" fill=\\\"black\\\"/>\\n        <path d=\\\"M50.4 35.1C53.3823 35.1 55.8 32.6823 55.8 29.7C55.8 26.7177 53.3823 24.3 50.4 24.3C47.4177 24.3 45 26.7177 45 29.7C45 32.6823 47.4177 35.1 50.4 35.1Z\\\" fill=\\\"#231F20\\\"/>\\n        <path d=\\\"M56.7 54H50.53L50.44 53.73H50.45L37.54 29.69C37.26 29.07 36.66 28.63 35.97 28.63C35.28 28.63 34.65 29.09 34.37 29.74L25.78 45.73L23.68 41.82C23.53 41.49 23.22 41.26 22.85 41.26C22.48 41.26 22.15 41.5 22.01 41.85L13.51 54.02C13.51 56.99 15.92 59.4 18.9 59.4H56.73C59.71 59.4 62.12 56.99 62.12 54.02L56.72 54H56.7Z\\\" fill=\\\"#231F20\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_21\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","<script lang=\"ts\">\n  import type { Editor } from \"../../editor\";\n  import ContextToolbar from \"../ContextToolbar.svelte\";\n\n  const { editor } = $props<{\n    editor: Editor;\n  }>();\n\n  const tiptap = editor.tiptap;\n  const items = editor.options.toolbarOptions?.image?.edit\n    ? [[\"deleteImage\"], [\"editImage\"]]\n    : [[\"deleteImage\"]];\n</script>\n\n<ContextToolbar\n  {editor}\n  targetNodeName=\"image\"\n  targetNodeTagName=\"IMG\"\n  condition={() => !tiptap.isActive(\"link\") && tiptap.isActive(\"image\")}\n  {items}\n/>\n","import type { Editor } from \"../../editor\";\nimport Toolbar from \"./Toolbar.svelte\";\nimport { mount, unmount } from \"svelte\";\n\nexport class ImageToolbar {\n  #ui: ReturnType<typeof mount> | undefined;\n\n  constructor({\n    editor,\n    edit,\n  }: {\n    editor: Editor;\n    edit?: (options: { editor: Editor; element: HTMLElement }) => void;\n  }) {\n    this.#ui = mount(Toolbar, {\n      target: editor.tiptap.view.dom.getRootNode() as ShadowRoot,\n      props: {\n        editor,\n        edit,\n      },\n    });\n  }\n\n  public destroy(): void {\n    if (this.#ui) {\n      unmount(this.#ui);\n    }\n  }\n}\n","<svelte:options\n  customElement={{\n    extend: extendToolbarItem,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import type { Editor } from \"../../../editor\";\n  import { extendToolbarItem } from \"../svelte\";\n  export interface Options {\n    readonly select?: (options: { editor: Editor }) => void;\n    readonly edit?: (options: { editor: Editor; element: HTMLElement }) => void;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import icon from \"../../../ui/icon/image.svg?raw\";\n  import { tooltip } from \"../../../tooltip\";\n  import { ImageToolbar } from \"../../../context-toolbar/image\";\n  import type { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement<Options>>();\n  const { editor, options } = element;\n  element.addEventListener(\"click\", () => {\n    element.options.select?.({ editor: element.editor! });\n  });\n\n  let menu: ImageToolbar | undefined;\n  $effect(() => {\n    if (editor) {\n      menu = new ImageToolbar({ editor, edit: options.edit });\n    }\n    return () => {\n      menu?.destroy();\n    };\n  });\n</script>\n\n<button use:tooltip={t(\"Insert Image\")}>\n  {@html icon}\n</button>\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-trash\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M4 7l16 0\\\" />\\n    <path d=\\\"M10 11l0 6\\\" />\\n    <path d=\\\"M14 11l0 6\\\" />\\n    <path d=\\\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\\\" />\\n    <path d=\\\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\\\" />\\n</svg>\\n\"","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendToolbarItem(customElementConstructor) {};\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { tooltip } from \"../../../tooltip\";\n  import icon from \"../../../ui/icon/delete.svg?raw\";\n  import type { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement>();\n  element.addEventListener(\"click\", () => {\n    element.tiptap?.chain().focus().deleteSelection().run();\n  });\n</script>\n\n<button use:tooltip={t(\"Delete Image\")}>\n  {@html icon}\n</button>\n","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendToolbarItem(customElementConstructor) {};\n</script>\n\n<script lang=\"ts\">\n  import { findParentNode } from \"@tiptap/core\";\n  import { t } from \"../../../i18n\";\n  import { tooltip } from \"../../../tooltip\";\n  import icon from \"../../../ui/icon/edit.svg?raw\";\n  import type { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement>();\n  const { editor, tiptap } = element;\n\n  function getSelectedImageElement(): HTMLElement | null {\n    if (!tiptap) {\n      return null;\n    }\n    const { selection } = tiptap.state;\n    const targetPos =\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (selection as any).node?.type.name === \"image\"\n        ? selection.$anchor\n        : findParentNode((node) => node.type.name === \"image\")(selection);\n\n    if (!targetPos) return null;\n\n    return tiptap.view.nodeDOM(targetPos.pos) as HTMLElement;\n  }\n\n  element.addEventListener(\"click\", () => {\n    const el = getSelectedImageElement();\n    if (el) {\n      editor?.options.toolbarOptions?.image?.edit?.({ editor, element: el });\n    }\n  });\n</script>\n\n<button use:tooltip={t(\"Edit Image\")}>\n  {@html icon}\n</button>\n","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_229)\\\">\\n        <path d=\\\"M64.05 22.55C63.27 21.44 62 20.78 60.65 20.78H56.32L54.81 24.93H60.65L50.08 53.98H16.8799L18.6399 49.14H14.22L12.97 52.56C12.51 53.83 12.69 55.25 13.47 56.36C14.25 57.47 15.52 58.13 16.87 58.13H50.07C51.81 58.13 53.37 57.04 53.97 55.4L64.54 26.35C65 25.08 64.82 23.66 64.04 22.55H64.05Z\\\" fill=\\\"black\\\"/>\\n        <path d=\\\"M55.1201 18.02L44.5501 47.07H11.3501L21.9201 18.02H55.1201ZM55.1201 13.87H21.9201C20.1801 13.87 18.6201 14.96 18.0201 16.6L7.45005 45.65C6.99005 46.92 7.17005 48.34 7.95005 49.45C8.73005 50.56 10.0001 51.22 11.3501 51.22H44.5501C46.2901 51.22 47.8501 50.13 48.4501 48.49L59.0201 19.44C59.4801 18.17 59.3001 16.75 58.5201 15.64C57.7401 14.53 56.4701 13.87 55.1201 13.87Z\\\" fill=\\\"black\\\"/>\\n        <path d=\\\"M43.86 23.55L39.71 35.31H21.23L25.38 23.55H43.86ZM43.86 20.79H25.38C24.21 20.79 23.16 21.53 22.77 22.63L18.62 34.39C18.32 35.24 18.45 36.18 18.97 36.91C19.49 37.64 20.33 38.08 21.23 38.08H39.71C40.88 38.08 41.93 37.34 42.32 36.24L46.47 24.48C46.77 23.63 46.64 22.69 46.12 21.96C45.6 21.23 44.76 20.79 43.86 20.79Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_229\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendToolbarItem(customElementConstructor) {\n      onEditorUpdate() {\n        this.classList.toggle(\"is-active\", this.editor?.getStructureMode());\n      }\n    };\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { ToolbarItemElement } from \"../element\";\n  import icon from \"../../../ui/icon/structure.svg?raw\";\n  import { tooltip } from \"../../../tooltip\";\n  const element = $host<ToolbarItemElement>();\n  element.addEventListener(\"click\", () => {\n    const editor = element.editor;\n    if (!editor) {\n      return;\n    }\n    editor.setStructureMode(!editor.getStructureMode());\n    element.onEditorUpdate();\n  });\n</script>\n\n<button use:tooltip={t(\"Toggle to HTML structure editing mode\")}>\n  {@html icon}\n</button>\n","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_206)\\\">\\n        <path d=\\\"M58.4 8.80005H13.6C10.07 8.80005 7.20001 11.67 7.20001 15.2V56.8C7.20001 60.33 10.07 63.2001 13.6 63.2001H58.4C61.93 63.2001 64.8 60.33 64.8 56.8V15.2C64.8 11.67 61.93 8.80005 58.4 8.80005ZM58.4 24.8V37.6H39.2V24.8H58.4ZM32.8 24.8V37.6H13.6V24.8H32.8ZM13.6 56.8V44H32.8V56.8H13.6ZM39.2 56.8V44H58.4V56.8H39.2Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_206\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","<script lang=\"ts\">\n  //   import { t } from \"../../../i18n\";\n\n  const {\n    onInsert,\n  }: {\n    onInsert: (rows: number, cols: number) => void;\n  } = $props();\n\n  let hoveredRows = $state(0);\n  let hoveredCols = $state(0);\n  const MAX_ROWS = 20;\n  const MAX_COLS = 20;\n  const DEFAULT_ROWS = 10;\n  const DEFAULT_COLS = 10;\n\n  const maxRows = $derived(Math.min(MAX_ROWS, Math.max(DEFAULT_ROWS, hoveredRows + 1)));\n  const maxCols = $derived(Math.min(MAX_COLS, Math.max(DEFAULT_COLS, hoveredCols + 1)));\n\n  function handleCellHover(row: number, col: number) {\n    hoveredRows = row + 1;\n    hoveredCols = col + 1;\n  }\n\n  function handleClick(ev: Event) {\n    ev.stopPropagation();\n    if (hoveredRows && hoveredCols) {\n      onInsert(hoveredRows, hoveredCols);\n    }\n  }\n\n  function handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === \"Enter\") {\n      handleClick(ev);\n    }\n  }\n</script>\n\n<div class=\"table_insert_panel\">\n  <div class=\"grid_container\">\n    <!-- eslint-disable-next-line @typescript-eslint/no-unused-vars -->\n    {#each Array(maxRows) as _, row (row)}\n      <div class=\"grid_row\">\n        <!-- eslint-disable-next-line @typescript-eslint/no-unused-vars -->\n        {#each Array(maxCols) as _, col (col)}\n          <div\n            class=\"grid_cell\"\n            class:selected={row < hoveredRows && col < hoveredCols}\n            onclick={handleClick}\n            onkeydown={handleKeyDown}\n            onmouseover={() => handleCellHover(row, col)}\n            onfocus={() => handleCellHover(row, col)}\n            role=\"button\"\n            tabindex=\"0\"\n          ></div>\n        {/each}\n      </div>\n    {/each}\n  </div>\n  <div class=\"size_indicator\">\n    {#if hoveredRows && hoveredCols}\n      {hoveredRows} x {hoveredCols}\n    {/if}\n  </div>\n</div>\n\n<style>\n  .table_insert_panel {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: white;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 8px 8px 0 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .size_indicator {\n    text-align: center;\n    margin: 4px 0;\n    height: 20px;\n    font-size: 12px;\n  }\n\n  .grid_container {\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n  }\n\n  .grid_row {\n    display: flex;\n    gap: 2px;\n  }\n\n  .grid_cell {\n    width: 12px;\n    height: 12px;\n    border: 1px solid #ddd;\n    background: #fff;\n    cursor: pointer;\n  }\n\n  .grid_cell.selected {\n    background: #0066cc;\n    border-color: #0066cc;\n  }\n</style>\n","<script lang=\"ts\" module>\n  export interface TableData {\n    readonly width: string;\n    readonly height: string;\n    readonly cellSpacing: string;\n    readonly borderWidth: string;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    tableData,\n    onSubmit,\n    onClose,\n  }: {\n    tableData: TableData;\n    onSubmit: (tableData: TableData) => void;\n    onClose: () => void;\n  } = $props();\n\n  let width = $state(tableData.width);\n  let height = $state(tableData.height);\n  let cellSpacing = $state(tableData.cellSpacing);\n  let borderWidth = $state(tableData.borderWidth);\n\n  let widthInput: HTMLInputElement;\n  $effect(() => {\n    widthInput?.focus();\n  });\n\n  let self: Modal;\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} bind:this={self}>\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Table Properties\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <label for=\"link-url\" class=\"form-label\">{t(\"Width\")}</label>\n        <input\n          type=\"text\"\n          id=\"table-width\"\n          class=\"form-control\"\n          bind:value={width}\n          bind:this={widthInput}\n        />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"table-height\" class=\"form-label\">{t(\"Height\")}</label>\n        <input type=\"text\" id=\"table-height\" class=\"form-control\" bind:value={height} />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"table-cell-spacing\" class=\"form-label\">{t(\"Cell Spacing\")}</label>\n        <input type=\"text\" id=\"table-cell-spacing\" class=\"form-control\" bind:value={cellSpacing} />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"table-border-width\" class=\"form-label\">{t(\"Border Width\")}</label>\n        <input type=\"text\" id=\"table-border-width\" class=\"form-control\" bind:value={borderWidth} />\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit({ width, height, cellSpacing, borderWidth });\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","import { mount, unmount } from \"svelte\";\nimport type { Editor as TiptapEditor } from \"@tiptap/core\";\nimport { selectedRect } from \"@tiptap/pm/tables\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport type { TableData } from \"./TablePropertiesPanel.svelte\";\nimport TablePropertiesPanel from \"./TablePropertiesPanel.svelte\";\n\nconst getCurrentTableData = (tiptap: TiptapEditor): TableData => {\n  const { state } = tiptap;\n  let depth = state.selection.$anchor.depth;\n  let tableNode = null;\n\n  // Find the table node by traversing up the document\n  while (depth > 0) {\n    const currentNode = state.selection.$anchor.node(depth);\n    if (currentNode.type.name === \"table\") {\n      tableNode = currentNode;\n      break;\n    }\n    depth--;\n  }\n\n  const el = document.createElement(\"div\");\n  el.style.cssText = tableNode?.attrs.style || \"\";\n  return {\n    width: el.style.width || \"100%\",\n    height: el.style.height || \"\",\n    cellSpacing: el.style.borderSpacing || \"\",\n    borderWidth: el.style.borderWidth || \"\",\n  };\n  // <table border=\"1\" style=\"border-collapse: collapse; width: 100.097%; height: 200px; border-width: 1px; border-spacing: 1px; margin-left: 0px; margin-right: auto;\">\n};\n\nconst getTableNodePos = (tiptap: TiptapEditor): number | null => {\n  const { state } = tiptap;\n  let depth = state.selection.$anchor.depth;\n\n  while (depth > 0) {\n    const currentNode = state.selection.$anchor.node(depth);\n    if (currentNode.type.name === \"table\") {\n      return state.selection.$anchor.before(depth);\n    }\n    depth--;\n  }\n  return null;\n};\n\nlet tablePropertiesModal: ReturnType<typeof mount> | undefined;\nexport const handleTableProperties = (tiptap: TiptapEditor) => {\n  mount(TablePropertiesPanel, {\n    target: document.body,\n    props: {\n      tableData: getCurrentTableData(tiptap),\n      onSubmit: (tableData: TableData) => {\n        const tablePos = getTableNodePos(tiptap);\n        if (tablePos !== null) {\n          tiptap\n            ?.chain()\n            .focus()\n            .command(({ tr }) => {\n              const node = tr.doc.nodeAt(tablePos);\n              if (node) {\n                const el = document.createElement(\"div\");\n                el.style.cssText = node.attrs.style || \"\";\n\n                el.style.width = tableData.width;\n                el.style.height = tableData.height;\n                el.style.borderSpacing = tableData.cellSpacing;\n                el.style.borderWidth = tableData.borderWidth;\n\n                tr.setNodeMarkup(tablePos, null, {\n                  ...node.attrs,\n                  style: el.style.cssText,\n                });\n\n                const rect = selectedRect(tiptap.state);\n                if (rect) {\n                  rect.map.map.forEach((i) => {\n                    const cell = rect.table.nodeAt(i);\n                    if (cell) {\n                      const el = document.createElement(\"div\");\n                      el.style.cssText = cell.attrs.style || \"\";\n                      el.style.borderWidth = tableData.borderWidth;\n\n                      tr.setNodeMarkup(rect.tableStart + i, null, {\n                        ...cell.attrs,\n                        style: el.style.cssText,\n                      });\n                    }\n                  });\n                }\n              }\n              return true;\n            })\n            .run();\n        }\n        unmount(tablePropertiesModal as ReturnType<typeof mount>);\n      },\n      onClose: () => {\n        unmount(tablePropertiesModal as ReturnType<typeof mount>);\n      },\n    },\n  });\n};\n","<script lang=\"ts\" module>\n  export interface CellData {\n    readonly width: string;\n    readonly height: string;\n    readonly element: string;\n    readonly scope: string;\n    readonly horizontalAlign: string;\n    readonly verticalAlign: string;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    cellData,\n    onSubmit,\n    onClose,\n  }: {\n    cellData: CellData;\n    onSubmit: (cellData: CellData) => void;\n    onClose: () => void;\n  } = $props();\n\n  let width = $state(cellData.width);\n  let height = $state(cellData.height);\n  let element = $state(cellData.element);\n  let scope = $state(cellData.scope);\n  let horizontalAlign = $state(cellData.horizontalAlign);\n  let verticalAlign = $state(cellData.verticalAlign);\n\n  let widthInput: HTMLInputElement;\n  $effect(() => {\n    widthInput?.focus();\n  });\n\n  let self: Modal;\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} bind:this={self}>\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Cell Properties\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <label for=\"width\" class=\"form-label\">{t(\"Width\")}</label>\n        <input\n          type=\"text\"\n          id=\"width\"\n          class=\"form-control\"\n          bind:value={width}\n          bind:this={widthInput}\n        />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"width\" class=\"form-label\">{t(\"Height\")}</label>\n        <input type=\"text\" id=\"height\" class=\"form-control\" bind:value={height} />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"element\" class=\"form-label\">{t(\"Cell type\")}</label>\n        <select id=\"element\" class=\"form-control\" bind:value={element}>\n          <option value=\"td\">{t(\"Cell\")}</option>\n          <option value=\"th\">{t(\"Header cell\")}</option>\n        </select>\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"scope\" class=\"form-label\">{t(\"Scope\")}</label>\n        <select id=\"scope\" class=\"form-control\" bind:value={scope}>\n          <option value=\"\">{t(\"None\")}</option>\n          <option value=\"row\">{t(\"Row\")}</option>\n          <option value=\"col\">{t(\"Column\")}</option>\n          <option value=\"rowgroup\">{t(\"Row group\")}</option>\n          <option value=\"colgroup\">{t(\"Column group\")}</option>\n        </select>\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"horizontalAlign\" class=\"form-label\">{t(\"Horizontal align\")}</label>\n        <select id=\"horizontalAlign\" class=\"form-control\" bind:value={horizontalAlign}>\n          <option value=\"\">{t(\"None\")}</option>\n          <option value=\"left\">{t(\"HORIZONTAL_ALIGN_LEFT\")}</option>\n          <option value=\"center\">{t(\"HORIZONTAL_ALIGN_CENTER\")}</option>\n          <option value=\"right\">{t(\"HORIZONTAL_ALIGN_RIGHT\")}</option>\n          <option value=\"justify\">{t(\"HORIZONTAL_ALIGN_JUSTIFY\")}</option>\n        </select>\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"verticalAlign\" class=\"form-label\">{t(\"Vertical align\")}</label>\n        <select id=\"verticalAlign\" class=\"form-control\" bind:value={verticalAlign}>\n          <option value=\"\">{t(\"None\")}</option>\n          <option value=\"top\">{t(\"VERTICAL_ALIGN_TOP\")}</option>\n          <option value=\"middle\">{t(\"VERTICAL_ALIGN_MIDDLE\")}</option>\n          <option value=\"bottom\">{t(\"VERTICAL_ALIGN_BOTTOM\")}</option>\n        </select>\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit({ width, height, element, scope, horizontalAlign, verticalAlign });\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","import { mount, unmount } from \"svelte\";\nimport type { Editor as TiptapEditor } from \"@tiptap/core\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport type { CellData } from \"./CellPropertiesPanel.svelte\";\nimport CellPropertiesPanel from \"./CellPropertiesPanel.svelte\";\n\nconst getCurrentCellData = (tiptap: TiptapEditor): CellData => {\n  const { state } = tiptap;\n  let depth = state.selection.$anchor.depth;\n  let cellNode = null;\n\n  // Find the cell node by traversing up the document\n  while (depth > 0) {\n    const currentNode = state.selection.$anchor.node(depth);\n    if (currentNode.type.name === \"tableCell\" || currentNode.type.name === \"tableHeader\") {\n      cellNode = currentNode;\n      break;\n    }\n    depth--;\n  }\n\n  const el = document.createElement(\"div\");\n  el.style.cssText = cellNode?.attrs.style || \"\";\n  return {\n    width: el.style.width || \"\",\n    height: el.style.height || \"\",\n    element: cellNode?.type.name === \"tableCell\" ? \"td\" : \"th\",\n    scope: cellNode?.attrs.scope || \"\",\n    horizontalAlign: el.style.textAlign || \"\",\n    verticalAlign: el.style.verticalAlign || \"\",\n  };\n};\n\nconst getCellNodePos = (tiptap: TiptapEditor): number | null => {\n  if (!tiptap) {\n    return null;\n  }\n\n  const { state } = tiptap;\n  let depth = state.selection.$anchor.depth;\n\n  while (depth > 0) {\n    const currentNode = state.selection.$anchor.node(depth);\n    if (currentNode.type.name === \"tableCell\" || currentNode.type.name === \"tableHeader\") {\n      return state.selection.$anchor.before(depth);\n    }\n    depth--;\n  }\n  return null;\n};\n\nlet cellPropertiesModal: ReturnType<typeof mount> | undefined;\nexport const handleCellProperties = (tiptap: TiptapEditor) => {\n  mount(CellPropertiesPanel, {\n    target: document.body,\n    props: {\n      cellData: getCurrentCellData(tiptap),\n      onSubmit: (cellData: CellData) => {\n        const cellPos = getCellNodePos(tiptap);\n        if (cellPos !== null) {\n          const node = tiptap?.state.selection?.$anchor.node();\n          if (\n            (node?.type.name === \"tableCell\" && cellData.element === \"th\") ||\n            (node?.type.name === \"tableHeader\" && cellData.element === \"td\")\n          ) {\n            tiptap?.chain().focus().toggleHeaderCell().run();\n          }\n\n          tiptap\n            ?.chain()\n            .focus()\n            .command(({ tr }) => {\n              const node = tr.doc.nodeAt(cellPos);\n              if (node) {\n                const el = document.createElement(\"div\");\n                el.style.cssText = node.attrs.style || \"\";\n\n                el.style.width = cellData.width;\n                el.style.height = cellData.height;\n                el.style.textAlign = cellData.horizontalAlign;\n                el.style.verticalAlign = cellData.verticalAlign;\n\n                tr.setNodeMarkup(cellPos, null, {\n                  ...node.attrs,\n                  scope: cellData.scope || undefined,\n                  style: el.style.cssText,\n                });\n              }\n              return true;\n            })\n            .run();\n        }\n        unmount(cellPropertiesModal as ReturnType<typeof mount>);\n      },\n      onClose: () => {\n        unmount(cellPropertiesModal as ReturnType<typeof mount>);\n      },\n    },\n  });\n};\n","<script lang=\"ts\" module>\n  export interface RowData {\n    readonly element: string;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    rowData,\n    onSubmit,\n    onClose,\n  }: {\n    rowData: RowData;\n    onSubmit: (rowData: RowData) => void;\n    onClose: () => void;\n  } = $props();\n\n  let element = $state(rowData.element);\n\n  let elementInput: HTMLSelectElement;\n  $effect(() => {\n    elementInput?.focus();\n  });\n\n  let self: Modal;\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} bind:this={self}>\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Row Properties\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <label for=\"element\" class=\"form-label\">{t(\"Row type\")}</label>\n        <select id=\"element\" class=\"form-control\" bind:value={element} bind:this={elementInput}>\n          <option value=\"tbody\">{t(\"Row\")}</option>\n          <option value=\"thead\">{t(\"Header row\")}</option>\n        </select>\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit({ element });\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","<svelte:options\n  customElement={{\n    extend: extendToolbarItem,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n</script>\n\n<script lang=\"ts\">\n  import { selectedRect } from \"@tiptap/pm/tables\";\n  import { t } from \"../../../i18n\";\n  import icon from \"../../../ui/icon/table.svg?raw\";\n  import { tooltip } from \"../../../tooltip\";\n  import TableInsertPanel from \"./TableInsertPanel.svelte\";\n  import type { ToolbarItemElement } from \"../element\";\n  import { handleTableProperties } from \"./table-properties\";\n  import { handleCellProperties } from \"./cell-properties\";\n  import { handleRowProperties } from \"./row-properties\";\n\n  const element = $host<ToolbarItemElement>();\n  const { tiptap } = element;\n\n  element.addEventListener(\"click\", toggleTableInsertPanel);\n\n  let isOpen = $state(false);\n  let isTableActive = $state(tiptap?.isActive(\"table\"));\n\n  let canMergeCell = $state<boolean>(false);\n  let canSplitCell = $state<boolean>(false);\n\n  const update = () => {\n    if (!tiptap) {\n      return;\n    }\n\n    isTableActive = tiptap.isActive(\"table\");\n    const tableRect = isTableActive ? selectedRect(tiptap.state) : null;\n    if (tableRect) {\n      const selectedCells = new Set();\n      let canSplitCellSelected = false;\n      const map = tableRect.map;\n      RECT_LOOP: for (let row = tableRect.top; row < tableRect.bottom; row++) {\n        for (let col = tableRect.left; col < tableRect.right; col++) {\n          const cellPos = map.map[row * map.width + col];\n          const cell = tableRect.table.nodeAt(cellPos);\n          if (cell) {\n            selectedCells.add(cell);\n            canSplitCellSelected = cell.attrs.colspan > 1 || cell.attrs.rowspan > 1;\n            if (canSplitCellSelected && selectedCells.size > 1) {\n              break RECT_LOOP;\n            }\n          }\n        }\n      }\n      canSplitCell = canSplitCellSelected;\n      canMergeCell = selectedCells.size > 1;\n    }\n  };\n  tiptap?.on(\"update\", update);\n  tiptap?.on(\"selectionUpdate\", update);\n\n  function handleInsert(rows: number, cols: number) {\n    tiptap?.chain().focus().insertTable({ rows, cols, withHeaderRow: false }).run();\n    isOpen = false;\n  }\n\n  function toggleTableInsertPanel(ev: MouseEvent) {\n    if (!tiptap) {\n      return;\n    }\n    ev.stopPropagation();\n    isOpen = !isOpen;\n  }\n\n  function handleClickOutside() {\n    isOpen = false;\n  }\n\n  $effect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  });\n\n  let showSubMenu = $state<Record<string, boolean>>({});\n  $effect(() => {\n    if (!isOpen) {\n      showSubMenu = {};\n    }\n  });\n</script>\n\n<button use:tooltip={t(\"Table\")}>\n  {@html icon}\n</button>\n\n<div class=\"menu-container\">\n  {#if isOpen}\n    <div class=\"menu\">\n      <div\n        class=\"menu-item-group menu-item-group--insert\"\n        onmouseenter={() => (showSubMenu.insert = true)}\n        onmouseleave={() => (showSubMenu.insert = false)}\n        role=\"menuitem\"\n        tabindex=\"0\"\n      >\n        <div class=\"menu-item-group-label\">{t(\"Insert table\")}</div>\n        {#if showSubMenu.insert}\n          <div class=\"menu-item-subgroup\">\n            <TableInsertPanel onInsert={handleInsert} />\n          </div>\n        {/if}\n      </div>\n      <div\n        class=\"menu-item-group\"\n        onmouseenter={() => (showSubMenu.cell = true)}\n        onmouseleave={() => (showSubMenu.cell = false)}\n        role=\"menuitem\"\n        tabindex=\"0\"\n      >\n        <div class=\"menu-item-group-label\">{t(\"Cell\")}</div>\n        {#if showSubMenu.cell}\n          <div class=\"menu-item-subgroup\">\n            <button\n              class=\"menu-item\"\n              disabled={!(isTableActive && canMergeCell)}\n              onclick={() => {\n                tiptap?.chain().focus().mergeCells().run();\n              }}\n            >\n              {t(\"Merge cells\")}\n            </button>\n            <button\n              class=\"menu-item\"\n              disabled={!(isTableActive && canSplitCell)}\n              onclick={() => {\n                tiptap?.chain().focus().splitCell().run();\n              }}\n            >\n              {t(\"Split cell\")}\n            </button>\n            <button\n              class=\"menu-item\"\n              disabled={!isTableActive}\n              onclick={() => {\n                handleCellProperties(tiptap!);\n              }}>{t(\"Cell properties\")}</button\n            >\n          </div>\n        {/if}\n      </div>\n      <div\n        class=\"menu-item-group\"\n        onmouseenter={() => (showSubMenu.row = true)}\n        onmouseleave={() => (showSubMenu.row = false)}\n        role=\"menuitem\"\n        tabindex=\"0\"\n      >\n        <div class=\"menu-item-group-label\">{t(\"Row\")}</div>\n        {#if showSubMenu.row}\n          <div class=\"menu-item-subgroup\">\n            <button\n              class=\"menu-item\"\n              disabled={!isTableActive}\n              onclick={() => {\n                tiptap?.chain().focus().addRowBefore().run();\n              }}\n            >\n              {t(\"Insert row before\")}\n            </button>\n            <button\n              class=\"menu-item\"\n              disabled={!isTableActive}\n              onclick={() => {\n                tiptap?.chain().focus().addRowAfter().run();\n              }}\n            >\n              {t(\"Insert row after\")}\n            </button>\n            <button\n              class=\"menu-item\"\n              disabled={!isTableActive}\n              onclick={() => {\n                tiptap?.chain().focus().deleteRow().run();\n              }}\n            >\n              {t(\"Delete row\")}\n            </button>\n            {#if false}\n              <!-- TODO: implement row properties -->\n              <button\n                class=\"menu-item\"\n                disabled={!isTableActive}\n                onclick={() => {\n                  handleRowProperties(tiptap!);\n                }}>{t(\"Row properties\")}</button\n              >\n            {/if}\n          </div>\n        {/if}\n      </div>\n      <div\n        class=\"menu-item-group\"\n        onmouseenter={() => (showSubMenu.col = true)}\n        onmouseleave={() => (showSubMenu.col = false)}\n        role=\"menuitem\"\n        tabindex=\"0\"\n      >\n        <div class=\"menu-item-group-label\">{t(\"Column\")}</div>\n        {#if showSubMenu.col}\n          <div class=\"menu-item-subgroup\">\n            <button\n              class=\"menu-item\"\n              disabled={!isTableActive}\n              onclick={() => {\n                tiptap?.chain().focus().addColumnBefore().run();\n              }}\n            >\n              {t(\"Insert column before\")}\n            </button>\n            <button\n              class=\"menu-item\"\n              disabled={!isTableActive}\n              onclick={() => {\n                tiptap?.chain().focus().addColumnAfter().run();\n              }}\n            >\n              {t(\"Insert column after\")}\n            </button>\n            <button\n              class=\"menu-item\"\n              disabled={!isTableActive}\n              onclick={() => {\n                tiptap?.chain().focus().deleteColumn().run();\n              }}\n            >\n              {t(\"Delete column\")}\n            </button>\n          </div>\n        {/if}\n      </div>\n      <div class=\"menu-item-group\">\n        <button\n          class=\"menu-item\"\n          disabled={!isTableActive}\n          onclick={() => {\n            handleTableProperties(tiptap!);\n          }}\n        >\n          {t(\"Table properties\")}\n        </button>\n        <button\n          class=\"menu-item\"\n          disabled={!isTableActive}\n          onclick={() => {\n            tiptap?.chain().focus().deleteTable().run();\n          }}\n        >\n          {t(\"Delete table\")}\n        </button>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .menu-container {\n    position: relative;\n    z-index: 3;\n  }\n\n  .menu {\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: flex;\n    flex-direction: column;\n    border-radius: 4px;\n    box-shadow: 0 0 0 1px #ccc;\n    background: white;\n  }\n\n  .menu-item-group {\n    position: relative;\n    background: white;\n\n    &:first-child {\n      border-top-left-radius: 4px;\n      border-top-right-radius: 4px;\n    }\n\n    &:hover .menu-item-group-label {\n      background: #dee0e2;\n    }\n  }\n\n  .menu-item-group--insert {\n    border-bottom: 1px solid #ccc;\n  }\n\n  .menu-item-group-label {\n    font-size: 0.85rem;\n    padding: 5px 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    &:after {\n      content: \">\";\n      font-weight: bold;\n      font-size: 0.85rem;\n    }\n  }\n\n  .menu-item-subgroup {\n    position: absolute;\n    left: calc(100% + 1px);\n    top: 0;\n    border-radius: 4px;\n\n    .menu-item:first-child {\n      border-top-left-radius: 4px;\n      border-top-right-radius: 4px;\n    }\n  }\n\n  .menu-item {\n    font-size: 0.85rem;\n    border: none;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 5px 10px;\n    width: 100%;\n    background: white;\n    box-shadow: 0 0 0 1px #ccc;\n\n    &:last-child {\n      border-bottom-left-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n\n    &:hover {\n      background: #dee0e2;\n    }\n  }\n</style>\n","<svelte:options\n  customElement={{\n    extend: extendToolbarItem,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  export interface Options {\n    readonly blocks?: ({ value: string; label: string } | string)[];\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import type { Level } from \"@tiptap/extension-heading\";\n  import { ToolbarItemElement } from \"../element\";\n\n  const defaultBlocks = [\n    { value: \"paragraph\", label: t(\"Paragraph\") },\n    { value: \"h1\", label: t(\"Heading 1\") },\n    { value: \"h2\", label: t(\"Heading 2\") },\n    { value: \"h3\", label: t(\"Heading 3\") },\n    { value: \"h4\", label: t(\"Heading 4\") },\n    { value: \"h5\", label: t(\"Heading 5\") },\n    { value: \"h6\", label: t(\"Heading 6\") },\n    { value: \"pre\", label: t(\"Preformatted\") },\n  ];\n\n  const element = $host<ToolbarItemElement<Options>>();\n  const { options, tiptap } = element;\n  let isOpen = $state(false);\n\n  const optionsBlocks: Options[\"blocks\"] = options.blocks ?? defaultBlocks;\n  const blocks = optionsBlocks\n    .map((block) =>\n      typeof block === \"string\" ? defaultBlocks.find((b) => b.value === block) : block\n    )\n    .filter((b) => b !== undefined);\n  let selectedBlock = $state(blocks[0].value);\n\n  element.onEditorUpdate = () => {\n    if (!tiptap) {\n      return;\n    }\n\n    const { $head: head } = tiptap.state.selection;\n    const parent = head.parent;\n\n    if (parent.type.name === \"heading\") {\n      selectedBlock = `h${parent.attrs.level}`;\n    } else {\n      selectedBlock = parent.type.name;\n    }\n    if (!blocks.some((b) => b.value === selectedBlock)) {\n      selectedBlock = blocks[0].value;\n    }\n  };\n\n  function handleSelect(value: string) {\n    if (value === \"paragraph\" || value === \"pre\") {\n      tiptap?.chain().focus().setNode(value).run();\n    } else if (value.match(/^h[1-6]$/)) {\n      const level = parseInt(value.substring(1)) as Level;\n      tiptap?.chain().focus().setHeading({ level }).run();\n    }\n    selectedBlock = value;\n    isOpen = false;\n  }\n\n  function toggleDropdown(ev: MouseEvent) {\n    if (!tiptap) {\n      return;\n    }\n    ev.stopPropagation();\n    isOpen = !isOpen;\n  }\n\n  function handleClickOutside() {\n    isOpen = false;\n  }\n\n  let dropdownElement: HTMLElement;\n  let isInitialized = $state(false);\n\n  $effect(() => {\n    if (isInitialized) return;\n    isInitialized = true;\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  });\n</script>\n\n<div class=\"dropdown\" bind:this={dropdownElement}>\n  <button class=\"selected\" onclick={toggleDropdown}>\n    {blocks.find((b) => b.value === selectedBlock)?.label}\n    <span class=\"arrow\"></span>\n  </button>\n\n  {#if isOpen}\n    <div class=\"options\">\n      {#each blocks as block (block.value)}\n        <button\n          class=\"option\"\n          class:active={selectedBlock === block.value}\n          onclick={() => handleSelect(block.value)}\n        >\n          <div class={block.value}>\n            {block.label}\n          </div>\n        </button>\n      {/each}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .dropdown {\n    position: relative;\n    width: 150px;\n  }\n\n  .selected {\n    width: 100%;\n    padding: 4px 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    background-color: white;\n    font-size: 14px;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .arrow {\n    width: 6px;\n    height: 6px;\n    border-right: 1px solid #666;\n    border-bottom: 1px solid #666;\n    transform: rotate(45deg);\n    margin-left: 4px;\n    position: relative;\n    top: -2px;\n  }\n\n  .options {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background: white;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-top: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    z-index: 1000;\n  }\n\n  .option {\n    display: block;\n    width: 100%;\n    text-align: left;\n    border: none;\n    background: white;\n    padding: 8px;\n    cursor: pointer;\n  }\n\n  .option:hover {\n    background-color: #f5f5f5;\n  }\n\n  .option.active {\n    background-color: #e0e0e0;\n  }\n\n  .h1 {\n    font-size: 1.8em;\n    font-weight: bold;\n  }\n\n  .h2 {\n    font-size: 1.5em;\n    font-weight: bold;\n  }\n\n  .h3 {\n    font-size: 1.3em;\n    font-weight: bold;\n  }\n\n  .h4 {\n    font-size: 1.2em;\n    font-weight: bold;\n  }\n\n  .h5 {\n    font-size: 1.1em;\n    font-weight: bold;\n  }\n\n  .h6 {\n    font-size: 1em;\n    font-weight: bold;\n  }\n\n  .paragraph {\n    font-size: 1em;\n  }\n\n  .pre {\n    font-family: monospace;\n  }\n</style>\n","export default \"<svg width=\\\"24\\\" height=\\\"24\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path fill-rule=\\\"evenodd\\\" d=\\\"M10.384 11.53h3.18l-1.547-4.504h-.034l-1.599 4.504zM10.642 4h2.768L18 16.275h-2.802l-.929-2.733H9.68l-.963 2.733H6L10.642 4z\\\" />\\n    <rect x=\\\"4\\\" y=\\\"18\\\" width=\\\"16\\\" height=\\\"3\\\" rx=\\\".5\\\" fill=\\\"currentColor\\\"/>\\n</svg>\\n\"","<script lang=\"ts\">\n  const { colors, onSelect } = $props<{\n    colors: string[];\n    onSelect: (color: string) => void;\n  }>();\n\n  function handleKeyDown(ev: KeyboardEvent, color: string) {\n    if (ev.key === \"Enter\") {\n      ev.stopPropagation();\n      onSelect(color);\n    }\n  }\n</script>\n\n<div class=\"color-panel\">\n  {#each colors as color (color)}\n    <div\n      class=\"color-item\"\n      style=\"background-color: {color}\"\n      onclick={(ev) => {\n        ev.stopPropagation();\n        onSelect(color);\n      }}\n      onkeydown={(ev) => handleKeyDown(ev, color)}\n      role=\"button\"\n      tabindex=\"0\"\n      aria-label={color}\n    ></div>\n  {/each}\n</div>\n\n<style>\n  .color-panel {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    gap: 4px;\n    padding: 8px;\n    background: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    width: 160px;\n    z-index: 1000;\n  }\n\n  .color-item {\n    width: 24px;\n    height: 24px;\n    border-radius: 4px;\n    cursor: pointer;\n    border: 1px solid #ddd;\n  }\n\n  .color-item:hover {\n    transform: scale(1.1);\n    transition: transform 0.2s;\n  }\n</style>\n","<svelte:options\n  customElement={{\n    extend: extendToolbarItem,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  export interface Options {\n    readonly presetColors?: string[];\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { tooltip } from \"../../../tooltip\";\n  import icon from \"../../../ui/icon/foregroundColor.svg?raw\";\n  import Panel from \"./Panel.svelte\";\n  import type { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement<Options>>();\n  element.addEventListener(\"click\", toggleColorPanel);\n\n  const { options, tiptap } = element;\n  let isOpen = $state(false);\n\n  const colors = options.presetColors ?? [\n    \"#000000\",\n    \"#595959\",\n    \"#999999\",\n    \"#CCCCCC\",\n    \"#FFFFFF\",\n    \"#F06292\",\n    \"#E57373\",\n    \"#BA68C8\",\n    \"#9575CD\",\n    \"#7986CB\",\n    \"#64B5F6\",\n    \"#4FC3F7\",\n    \"#4DD0E1\",\n    \"#4DB6AC\",\n    \"#81C784\",\n    \"#AED581\",\n    \"#FFF176\",\n    \"#FFB74D\",\n    \"#FF8A65\",\n    \"#A1887F\",\n  ];\n\n  let selectedColor = $state(\"#000000\");\n  element.onEditorUpdate = () => {\n    selectedColor = tiptap?.getAttributes(\"textStyle\").color ?? \"#000000\";\n  };\n\n  function handleSelect(value: string) {\n    selectedColor = value;\n    tiptap?.chain().focus().setColor(value).run();\n    isOpen = false;\n  }\n\n  function toggleColorPanel(ev: MouseEvent) {\n    if (!tiptap) {\n      return;\n    }\n    ev.stopPropagation();\n    isOpen = !isOpen;\n  }\n\n  function handleClickOutside() {\n    isOpen = false;\n  }\n\n  $effect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  });\n</script>\n\n<button use:tooltip={t(\"Text Color\")} class:tooltip-disabled={isOpen}>\n  {@html icon.replace(/fill=\"currentColor\"/g, `fill=\"${selectedColor}\"`)}\n</button>\n\n<div class=\"color-panel-container\">\n  {#if isOpen}\n    <Panel {colors} onSelect={handleSelect} />\n  {/if}\n</div>\n\n<style>\n  .color-panel-container {\n    position: relative;\n  }\n</style>\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg id=\\\"b\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 72 72\\\">\\n    <!-- Generator: Adobe Illustrator 29.3.1, SVG Export Plug-In . SVG Version: 2.1.0 Build 151)  -->\\n    <g id=\\\"c\\\">\\n        <g id=\\\"d\\\">\\n            <rect x=\\\"9\\\" y=\\\"54.8\\\" width=\\\"54\\\" height=\\\"10.2\\\" rx=\\\".5\\\" ry=\\\".5\\\" fill=\\\"rgba(0,0,0,0)\\\"/>\\n            <path class=\\\"st1\\\" d=\\\"M62.3,15.6l-10.1-9.7c-.5-.5-1.1-.7-1.7-.7h0c-.6,0-1.2.2-1.7.7l-28,26.7c-.5.4-.7,1.1-.7,1.6s.2,1.2.7,1.7l.9.8-12.5,11.9h16.8l4.2-3.9.9.8c.5.5,1.1.7,1.7.7.6,0,1.3-.2,1.7-.7l28-26.7c.5-.4.7-1.1.7-1.6s-.2-1.2-.7-1.7h0ZM45.7,28.5l-7.1-6.8,11.8-11.3,7.1,6.8-11.8,11.3Z\\\"/>\\n        </g>\\n    </g>\\n</svg>\\n\"","<svelte:options\n  customElement={{\n    extend: extendToolbarItem,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  export interface Options {\n    readonly presetColors?: string[];\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import icon from \"../../../ui/icon/backgroundColor.svg?raw\";\n  import { tooltip } from \"../../../tooltip\";\n  import Panel from \"./Panel.svelte\";\n  import type { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement<Options>>();\n  element.addEventListener(\"click\", toggleColorPanel);\n\n  const { options, tiptap } = element;\n  let isOpen = $state(false);\n\n  const colors = options.presetColors ?? [\n    \"#000000\",\n    \"#595959\",\n    \"#999999\",\n    \"#CCCCCC\",\n    \"#FFFFFF\",\n    \"#F06292\",\n    \"#E57373\",\n    \"#BA68C8\",\n    \"#9575CD\",\n    \"#7986CB\",\n    \"#64B5F6\",\n    \"#4FC3F7\",\n    \"#4DD0E1\",\n    \"#4DB6AC\",\n    \"#81C784\",\n    \"#AED581\",\n    \"#FFF176\",\n    \"#FFB74D\",\n    \"#FF8A65\",\n    \"#A1887F\",\n  ];\n\n  const defaultColor = \"rgba(0,0,0,0)\";\n  let selectedColor = $state(defaultColor);\n  element.onEditorUpdate = () => {\n    selectedColor = tiptap?.getAttributes(\"textStyle\").backgroundColor ?? defaultColor;\n  };\n\n  function handleSelect(value: string) {\n    selectedColor = value;\n    tiptap?.chain().focus().setBackgroundColor(value).run();\n    isOpen = false;\n  }\n\n  function toggleColorPanel(ev: MouseEvent) {\n    if (!tiptap) {\n      return;\n    }\n    ev.stopPropagation();\n    isOpen = !isOpen;\n  }\n\n  function handleClickOutside() {\n    isOpen = false;\n  }\n\n  $effect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  });\n</script>\n\n<button use:tooltip={t(\"Background Color\")} class:tooltip-disabled={isOpen}>\n  {@html icon.replace(/fill=\"rgba\\(0,0,0,0\\)\"/g, `fill=\"${selectedColor}\"`)}\n</button>\n\n<div class=\"color-panel-container\">\n  {#if isOpen}\n    <Panel {colors} onSelect={handleSelect} />\n  {/if}\n</div>\n\n<style>\n  .color-panel-container {\n    position: relative;\n  }\n</style>\n","export default \"<svg width=\\\"72\\\" height=\\\"72\\\" viewBox=\\\"0 0 72 72\\\" fill=\\\"none\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g clip-path=\\\"url(#clip0_57_211)\\\">\\n        <path d=\\\"M48 32.8H24V36H48V32.8Z\\\" fill=\\\"black\\\"/>\\n        <path d=\\\"M48 40.8H24V44H48V40.8Z\\\" fill=\\\"black\\\"/>\\n        <path d=\\\"M48 48.8H24V52H48V48.8Z\\\" fill=\\\"black\\\"/>\\n        <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M51.2 15.2H47.2V12.8H41.6C41.6 9.71001 39.09 7.20001 36 7.20001C32.91 7.20001 30.4 9.71001 30.4 12.8H24.8V15.2H20.8C17.27 15.2 14.4 18.07 14.4 21.6V58.4C14.4 61.93 17.27 64.8 20.8 64.8H51.2C54.73 64.8 57.6 61.93 57.6 58.4V21.6C57.6 18.07 54.73 15.2 51.2 15.2ZM52.8 58.4C52.8 59.28 52.08 60 51.2 60H20.8C19.92 60 19.2 59.28 19.2 58.4V21.6C19.2 20.72 19.92 20 20.8 20H24.8V22.4H47.2V20H51.2C52.08 20 52.8 20.72 52.8 21.6V58.4Z\\\" fill=\\\"black\\\"/>\\n    </g>\\n    <defs>\\n        <clipPath id=\\\"clip0_57_211\\\">\\n            <rect width=\\\"72\\\" height=\\\"72\\\" fill=\\\"white\\\"/>\\n        </clipPath>\\n    </defs>\\n</svg>\\n\"","/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*}/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.3';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint) {\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","<script lang=\"ts\">\n  import DOMPurify from \"dompurify\";\n  import { t } from \"../../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n  import { onMount } from \"svelte\";\n\n  const purify = DOMPurify(window);\n\n  let {\n    boilerplates,\n    onSubmit,\n    onClose,\n  }: {\n    boilerplates: {\n      title: string;\n      url: string;\n      description: string;\n    }[];\n    onSubmit: (text: string) => void;\n    onClose: () => void;\n  } = $props();\n\n  let selectedBoilerplate: string = $state(\"\");\n  let selectedBoilerplateDescription: string = $state(\"\");\n\n  async function updateSelectedBoilerplate(url: string) {\n    selectedBoilerplateDescription = boilerplates.find(\n      (boilerplate) => boilerplate.url === url\n    )?.description || \"\";\n    selectedBoilerplate = await (await fetch(url)).text();\n  }\n\n  function onChange(event: Event) {\n    const target = event.target as HTMLSelectElement;\n    selectedBoilerplate = \"\";\n    updateSelectedBoilerplate(target.value);\n  }\n\n  onMount(() => {\n    if (boilerplates.length > 0) {\n      updateSelectedBoilerplate(boilerplates[0].url);\n    }\n  });\n\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} size=\"lg\">\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Insert Boilerplate\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <label for=\"boilerplate_title\">{t(\"Boilerplate\")}</label>\n        <select id=\"boilerplate_title\" class=\"form-control\" onchange={onChange}>\n          {#each boilerplates as boilerplate (boilerplate.url)}\n            <option value={boilerplate.url}>{boilerplate.title}</option>\n          {/each}\n        </select>\n        <div class=\"form-text\">{selectedBoilerplateDescription}</div>\n      </div>\n      <div class=\"form-group mb-3\">\n        {#if selectedBoilerplate}\n          <label for=\"boilerplate_text\">{t(\"Text\")}</label>\n          <div id=\"boilerplate_text\" class=\"form-control\">\n            {@html purify.sanitize(selectedBoilerplate)}\n          </div>\n        {/if}\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit(selectedBoilerplate);\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","<svelte:options\n  customElement={{\n    extend: extendToolbarItem,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendToolbarItem } from \"../svelte\";\n  export interface Options {\n    readonly boilerplates: {\n      title: string;\n      url: string;\n      description: string;\n    }[];\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { mount, unmount } from \"svelte\";\n  import icon from \"../../../ui/icon/boilerplate.svg?raw\";\n  import { tooltip } from \"../../../tooltip\";\n  import Modal from \"./Modal.svelte\";\n  import type { ToolbarItemElement } from \"../element\";\n\n  const element = $host<ToolbarItemElement<Options>>();\n  element.addEventListener(\"click\", () => {\n    const modal = mount(Modal, {\n      target: document.body,\n      props: {\n        boilerplates: element.options.boilerplates,\n        onSubmit: (text: string) => {\n          element.tiptap?.chain().focus().insertContent(text).run();\n        },\n        onClose: () => {\n          unmount(modal);\n        },\n      },\n    });\n  });\n</script>\n\n<button use:tooltip={t(\"Insert Boilerplate\")}>\n  {@html icon}\n</button>\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport {\n  BoldButton,\n  ItalicButton,\n  UnderlineButton,\n  StrikeButton,\n  BulletListButton,\n  OrderedListButton,\n  HorizontalRuleButton,\n  BlockquoteButton,\n  UnlinkButton,\n  InsertHtmlButton,\n  SourceButton,\n  UndoButton,\n  RedoButton,\n  RemoveFormatButton,\n  AlignLeftButton,\n  AlignCenterButton,\n  AlignRightButton,\n  IndentButton,\n  OutdentButton,\n  FullScreenButton,\n} from \"./simple-buttons\";\nimport Link from \"./link/Button.svelte\";\nimport PreviewLink from \"./link/Preview.svelte\";\nimport EditLink from \"./link/Edit.svelte\";\nimport File from \"./file/Button.svelte\";\nimport Image from \"./image/Button.svelte\";\nimport DeleteImage from \"./image/Delete.svelte\";\nimport EditImage from \"./image/Edit.svelte\";\nimport Structure from \"./structure/Button.svelte\";\n\nimport Table from \"./table/Button.svelte\";\nimport Block from \"./block/Select.svelte\";\nimport ForegroundColor from \"./color/ForegroundColor.svelte\";\nimport BackgroundColor from \"./color/BackgroundColor.svelte\";\nimport Boilerplate from \"./boilerplate/Button.svelte\";\n\nexport default {\n  bold: BoldButton,\n  italic: ItalicButton,\n  underline: UnderlineButton,\n  strike: StrikeButton,\n  bulletList: BulletListButton,\n  orderedList: OrderedListButton,\n  horizontalRule: HorizontalRuleButton,\n  blockquote: BlockquoteButton,\n  unlink: UnlinkButton,\n  insertHtml: InsertHtmlButton,\n  source: SourceButton,\n  undo: UndoButton,\n  redo: RedoButton,\n  removeFormat: RemoveFormatButton,\n  alignLeft: AlignLeftButton,\n  alignCenter: AlignCenterButton,\n  alignRight: AlignRightButton,\n  indent: IndentButton,\n  outdent: OutdentButton,\n  fullScreen: FullScreenButton,\n  // @ts-ignore\n  link: Link.element!,\n  // @ts-ignore\n  file: File.element!,\n  // @ts-ignore\n  image: Image.element!,\n  // @ts-ignore\n  structure: Structure.element!,\n  // @ts-ignore\n  table: Table.element!,\n  // @ts-ignore\n  block: Block.element!,\n  // @ts-ignore\n  foregroundColor: ForegroundColor.element!,\n  // @ts-ignore\n  backgroundColor: BackgroundColor.element!,\n  // @ts-ignore\n  boilerplate: Boilerplate.element!,\n\n  // for context toolbar\n  // @ts-ignore\n  previewLink: PreviewLink.element!,\n  // @ts-ignore\n  editLink: EditLink.element!,\n  // @ts-ignore\n  deleteImage: DeleteImage.element!,\n  // @ts-ignore\n  editImage: EditImage.element!,\n};\n","import { StatusbarItemElement } from \"./element\";\n\nconst nodeToTagMap: Record<string, string> = {\n  paragraph: \"p\",\n  heading: \"h1\",\n  bulletList: \"ul\",\n  orderedList: \"ol\",\n  listItem: \"li\",\n  blockquote: \"blockquote\",\n  horizontalRule: \"hr\",\n  table: \"table\",\n  tableRow: \"tr\",\n  tableCell: \"td\",\n  tableHeader: \"th\",\n  hardBreak: \"br\",\n  text: \"\",\n  textBlock: \"\",\n};\nconst getHTMLTag = (nodeName: string): string => nodeToTagMap[nodeName] ?? nodeName;\n\nclass PathItem<\n  Options extends Record<string, unknown> = Record<string, unknown>,\n> extends StatusbarItemElement<Options> {\n  onEditorUpdate() {\n    if (!this.tiptap) {\n      return;\n    }\n\n    const { selection } = this.tiptap.state;\n    const $head = selection.$head;\n\n    const path: string[] = [];\n    for (let depth = 1; depth <= $head.depth; depth++) {\n      const node = $head.node(depth);\n      let nodeName = getHTMLTag(node.type.name);\n      if (!nodeName) {\n        continue;\n      }\n\n      const textAlign = node.attrs.textAlign;\n      if (textAlign) {\n        nodeName += `[align=${textAlign}]`;\n      }\n\n      path.push(nodeName);\n    }\n\n    this.shadowRoot.textContent = path.join(\" > \");\n  }\n}\n\nexport default {\n  path: PathItem,\n};\n","import { extend } from \"../../ui/item/svelte\";\nimport { PasteMenuItemElement } from \"./element\";\nimport css from \"./element.css?raw\";\n\nconst pasteMenuItemStyle = document.createElement(\"style\");\npasteMenuItemStyle.textContent = css;\nexport const extendPasteMenuItem = (\n  customElementConstructor: typeof HTMLElement\n): new () => PasteMenuItemElement =>\n  class extends extend(customElementConstructor) implements PasteMenuItemElement {\n    public content:\n      | {\n          plainText: string;\n          htmlDocument: Document;\n          targetDomNode: HTMLElement | Text | null;\n          clipboardData: DataTransfer;\n          transaction: (cb: () => void) => void;\n        }\n      | undefined = undefined;\n\n    connectedCallback() {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      super.connectedCallback();\n      this.shadowRoot.appendChild(pasteMenuItemStyle.cloneNode(true));\n    }\n\n    onEditorSetPasteContent(content: {\n      plainText: string;\n      htmlDocument: Document;\n      targetDomNode: HTMLElement | Text | null;\n      clipboardData: DataTransfer;\n      transaction: (cb: () => void) => void;\n    }) {\n      this.content = content;\n    }\n\n    isEditorItemAvailable() {\n      return true;\n    }\n\n    insertContent(content: string) {\n      return PasteMenuItemElement.prototype.insertContent.bind(this)(content);\n    }\n\n    onEditorPaste() {}\n  };\n","<script lang=\"ts\">\n  import { t } from \"../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    htmlDocument,\n    onSubmit,\n    onClose,\n  }: {\n    htmlDocument: Document;\n    onSubmit: (htmlDocument: Document) => void;\n    onClose: () => void;\n  } = $props();\n\n  const dataAttributes: {\n    name: string;\n    checked: boolean;\n  }[] = $state([]);\n  htmlDocument.body.querySelectorAll<HTMLElement>(\"*\").forEach((e) => {\n    const data = e.dataset;\n    for (const key in data) {\n      if (!dataAttributes.find((d) => d.name === key)) {\n        dataAttributes.push({ name: key, checked: false });\n      }\n    }\n  });\n  const styleAttributes: {\n    name: string;\n    checked: boolean;\n  }[] = $state([]);\n  htmlDocument.body.querySelectorAll<HTMLElement>(\"[style]\").forEach((e) => {\n    const styleAttr = e.getAttribute(\"style\");\n    if (!styleAttr) return;\n\n    const properties = styleAttr\n      .split(\";\")\n      .map((prop) => prop.trim())\n      .filter((prop) => prop)\n      .map((prop) => {\n        const [name] = prop.split(\":\");\n        return name.trim();\n      });\n\n    properties.forEach((prop) => {\n      if (!styleAttributes.find((s) => s.name === prop)) {\n        styleAttributes.push({ name: prop, checked: true });\n      }\n    });\n  });\n\n  function toggleAll() {\n    const checked = styleAttributes.every((s) => s.checked);\n    if (checked) {\n      styleAttributes.forEach((s) => (s.checked = false));\n    } else {\n      styleAttributes.forEach((s) => (s.checked = true));\n    }\n  }\n\n  function toggleAllData() {\n    const checked = dataAttributes.every((d) => d.checked);\n    if (checked) {\n      dataAttributes.forEach((d) => (d.checked = false));\n    } else {\n      dataAttributes.forEach((d) => (d.checked = true));\n    }\n  }\n\n  let self: Modal;\n\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} bind:this={self}>\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Paste as HTML\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"html-modal-modal-content\">\n        {#if dataAttributes.length > 0}\n          <h4>{t(\"Data attributes\")}</h4>\n          <div class=\"help-text\">\n            {t(\n              \"Select the data attributes you want to keep in the pasted HTML. Unselected attributes will be removed.\"\n            )}\n          </div>\n          <ul>\n            {#each dataAttributes as attribute (attribute.name)}\n              <li>\n                <label>\n                  <input type=\"checkbox\" name={attribute.name} bind:checked={attribute.checked} />\n                  data-{attribute.name}\n                </label>\n              </li>\n            {/each}\n          </ul>\n          <div class=\"mt-checkbox-all\">\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"all\"\n                onchange={toggleAllData}\n                checked={dataAttributes.every((d) => d.checked)}\n              />\n              {t(\"Select All\")}\n            </label>\n          </div>\n        {/if}\n        {#if styleAttributes.length > 0}\n          <h4>{t(\"Properties for style attributes\")}</h4>\n          <div class=\"help-text\">\n            {t(\n              \"Select the properties you want to keep in the pasted HTML. Unselected properties will be removed.\"\n            )}\n          </div>\n          <ul>\n            {#each styleAttributes as attribute (attribute.name)}\n              <li>\n                <label>\n                  <input type=\"checkbox\" name={attribute.name} bind:checked={attribute.checked} />\n                  {attribute.name}\n                </label>\n              </li>\n            {/each}\n          </ul>\n          <div class=\"mt-checkbox-all\">\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"all\"\n                onchange={toggleAll}\n                checked={styleAttributes.every((s) => s.checked)}\n              />\n              {t(\"Select All\")}\n            </label>\n          </div>\n        {/if}\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          const disabledAttributes = styleAttributes.filter((s) => !s.checked).map((s) => s.name);\n          const doc = htmlDocument.cloneNode(true) as Document;\n          doc.querySelectorAll<HTMLElement>(\"[style]\").forEach((e) => {\n            const style = e.style;\n            for (let i = style.length - 1; i >= 0; i--) {\n              const p = style[i];\n              if (disabledAttributes.includes(p)) {\n                style.removeProperty(p);\n              }\n            }\n          });\n\n          const disabledData = dataAttributes.filter((d) => !d.checked).map((d) => d.name);\n          doc.body.querySelectorAll<HTMLElement>(\"*\").forEach((e) => {\n            const data = e.dataset;\n            for (const key in data) {\n              if (disabledData.includes(key)) {\n                delete e.dataset[key];\n              }\n            }\n          });\n\n          onSubmit(doc);\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n\n<style>\n  .mt-checkbox-all {\n    margin-top: 0.5rem;\n  }\n\n  .help-text {\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    color: #666;\n  }\n\n  h4 {\n    font-weight: bold;\n    margin-top: 1.5rem;\n  }\n\n  h4:first-child {\n    margin-top: 0;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n\n  .html-modal-modal-content {\n    overflow-y: auto;\n    max-height: 580px;\n  }\n</style>\n","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendPasteMenuItem } from \"./svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendPasteMenuItem(customElementConstructor) {\n      isEditorItemAvailable() {\n        return !!this.content?.htmlDocument;\n      }\n    };\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../i18n\";\n  import { mount, unmount } from \"svelte\";\n  import { preprocessHTML } from \"../../util/html\";\n  import HtmlModal from \"./HtmlModal.svelte\";\n  import type { PasteMenuItemElement } from \"./element\";\n\n  const element = $host<PasteMenuItemElement>();\n  element.addEventListener(\"click\", toggleDetailPanel);\n\n  const { tiptap } = element;\n\n  let modalComponent: ReturnType<typeof mount> | null = null;\n\n  const apply = (htmlDocument: Document | null | undefined = null) => {\n    if (!tiptap) {\n      return;\n    }\n\n    htmlDocument ??= element.content?.htmlDocument;\n    element.insertContent(preprocessHTML(htmlDocument?.body.innerHTML ?? \"\"));\n\n    unmountModal();\n  };\n  element.onEditorPaste = apply;\n\n  function toggleDetailPanel(ev: MouseEvent) {\n    if (!tiptap) {\n      return;\n    }\n    ev.stopPropagation();\n\n    if (!modalComponent) {\n      modalComponent = mount(HtmlModal, {\n        target: document.body,\n        props: {\n          htmlDocument: element.content!.htmlDocument!,\n          onSubmit: apply,\n          onClose: () => {\n            unmountModal();\n          },\n        },\n      });\n    } else {\n      unmountModal();\n    }\n  }\n\n  function unmountModal() {\n    if (modalComponent) {\n      unmount(modalComponent);\n      modalComponent = null;\n    }\n  }\n\n  $effect(() => unmountModal);\n</script>\n\n<button>{`${t(\"Paste as HTML\")}...`}</button>\n","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendPasteMenuItem } from \"./svelte\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendPasteMenuItem(customElementConstructor) {\n      isEditorItemAvailable() {\n        return /^https?:\\/\\/[^\\s]+(\\s*)?$/.test(this.content?.plainText ?? \"\");\n      }\n    };\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../i18n\";\n  import { mount, unmount } from \"svelte\";\n  import { PasteMenuItemElement } from \"./element\";\n  import type { LinkData } from \"../../ui/link/Modal.svelte\";\n  import LinkModal from \"../../ui/link/Modal.svelte\";\n\n  const element = $host<PasteMenuItemElement>();\n  element.addEventListener(\"click\", toggleDetailPanel);\n\n  const { tiptap } = element;\n  let modalComponent: ReturnType<typeof mount> | null = null;\n\n  const apply = (linkData: LinkData | undefined = undefined) => {\n    const content = element.content;\n    if (!content) {\n      return;\n    }\n    if (!tiptap) {\n      return;\n    }\n\n    linkData ??= {\n      url: content.plainText,\n      text: content.plainText,\n      title: \"\",\n      target: \"_self\",\n    };\n\n    const anchor = document.createElement(\"a\");\n    anchor.href = linkData.url;\n    if (linkData.title) {\n      anchor.title = linkData.title;\n    }\n    anchor.target = linkData.target;\n    anchor.textContent = linkData.text;\n\n    element.insertContent(anchor.outerHTML);\n\n    unmountModal();\n  };\n  element.onEditorPaste = apply;\n\n  function toggleDetailPanel(ev: MouseEvent) {\n    if (!tiptap) {\n      return;\n    }\n    ev.stopPropagation();\n\n    if (!modalComponent) {\n      modalComponent = mount(LinkModal, {\n        target: document.body,\n        props: {\n          linkData: {\n            url: element.content!.plainText,\n            text: element.content!.plainText,\n            title: \"\",\n            target: \"_self\",\n          },\n          onSubmit: apply,\n          onClose: () => {\n            unmountModal();\n          },\n        },\n      });\n    } else {\n      unmountModal();\n    }\n  }\n\n  function unmountModal() {\n    if (modalComponent) {\n      unmount(modalComponent);\n      modalComponent = null;\n    }\n  }\n\n  $effect(() => unmountModal);\n</script>\n\n<button>{t(\"Paste as link\")}</button>\n","<script lang=\"ts\" module>\n  export interface EmbedData {\n    readonly url: string;\n    readonly maxwidth?: number;\n    readonly maxheight?: number;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    embedData,\n    onSubmit,\n    onClose,\n  }: {\n    embedData: EmbedData;\n    onSubmit: (embedData: EmbedData) => void;\n    onClose: () => void;\n  } = $props();\n\n  let url = $state(embedData.url);\n  let maxwidth = $state(embedData.maxwidth);\n  let maxheight = $state(embedData.maxheight);\n\n  let urlInput: HTMLInputElement;\n  $effect(() => {\n    urlInput?.focus();\n  });\n\n  let self: Modal;\n\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} bind:this={self}>\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"oEmbed\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <label for=\"embed-url\" class=\"form-label\">{t(\"URL\")}</label>\n        <input\n          type=\"url\"\n          id=\"embed-url\"\n          class=\"form-control\"\n          bind:value={url}\n          bind:this={urlInput}\n        />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"embed-maxwidth\" class=\"form-label\">{t(\"Width\")}</label>\n        <input type=\"number\" id=\"embed-maxwidth\" class=\"form-control\" bind:value={maxwidth} />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"embed-maxheight\" class=\"form-label\">{t(\"Height\")}</label>\n        <input type=\"number\" id=\"embed-maxheight\" class=\"form-control\" bind:value={maxheight} />\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit({ url, maxwidth, maxheight });\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendPasteMenuItem } from \"./svelte\";\n  import { PasteMenuItemElement } from \"./element\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendPasteMenuItem(customElementConstructor) {\n      async isEditorItemAvailable() {\n        if (!/^https?:\\/\\/[^\\s]+(\\s*)?$/.test(this.content?.plainText ?? \"\")) {\n          return false;\n        }\n\n        const targetDomNode = this.content?.targetDomNode;\n        if (targetDomNode?.tagName === \"P\" && targetDomNode.childNodes.length === 0) {\n          return PasteMenuItemElement.Priority.High;\n        }\n        return PasteMenuItemElement.Priority.Default;\n      }\n    };\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../i18n\";\n  import { mount, unmount } from \"svelte\";\n  import type { EmbedData } from \"./embed/Modal.svelte\";\n  import EmbedModal from \"./embed/Modal.svelte\";\n\n  const element = $host<PasteMenuItemElement>();\n  element.addEventListener(\"click\", toggleDetailPanel);\n\n  const { editor, tiptap } = element;\n  let modalComponent: ReturnType<typeof mount> | null = null;\n\n  const apply = async (embedData: EmbedData | undefined = undefined) => {\n    const content = element.content;\n    if (!content) {\n      return;\n    }\n    if (!tiptap) {\n      return;\n    }\n\n    embedData ??= {\n      url: content.plainText,\n      maxwidth: 0,\n      maxheight: 0,\n    };\n\n    const res = await tiptap.commands\n      .getEmbedObject(embedData)\n      .catch(() => ({ html: \"\", inline: undefined }));\n    if (!res?.html) {\n      editor?.notify({ level: \"error\", message: t(\"Failed to get embed object\") });\n      return;\n    }\n\n    // FIXME: more common way to insert embed object\n    element.content?.transaction(() => {\n      tiptap.chain().undo().focus().run();\n      tiptap.commands.insertEmbedObject(res.html);\n    });\n    element.parentElement?.dispatchEvent(new Event(\"paste-menu-item-applied\"));\n\n    unmountModal();\n  };\n  element.onEditorPaste = apply;\n\n  function toggleDetailPanel(ev: MouseEvent) {\n    if (!tiptap) {\n      return;\n    }\n    ev.stopPropagation();\n\n    if (!modalComponent) {\n      modalComponent = mount(EmbedModal, {\n        target: document.body,\n        props: {\n          embedData: {\n            url: element.content!.plainText,\n          },\n          onSubmit: apply,\n          onClose: () => {\n            unmountModal();\n          },\n        },\n      });\n    } else {\n      unmountModal();\n    }\n  }\n\n  function unmountModal() {\n    if (modalComponent) {\n      unmount(modalComponent);\n      modalComponent = null;\n    }\n  }\n\n  $effect(() => unmountModal);\n</script>\n\n<button>\n  {t(\"Embed object\")}\n</button>\n","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { t } from \"../../i18n\";\n  import { extendPasteMenuItem } from \"./svelte\";\n  import { PasteMenuItemElement } from \"./element\";\n  type EmbedInlineElement = PasteMenuItemElement & {\n    inline: string | undefined;\n  };\n  const extend = (customElementConstructor: typeof HTMLElement): new () => EmbedInlineElement =>\n    class extends extendPasteMenuItem(customElementConstructor) {\n      public inline: string | undefined = undefined;\n\n      async isEditorItemAvailable() {\n        const content = this.content?.plainText || \"\";\n        if (!/^https?:\\/\\/[^\\s]+(\\s*)?$/.test(content)) {\n          return false;\n        }\n\n        const res = await this.tiptap?.commands\n          .getEmbedObject({\n            url: content,\n            maxwidth: 0,\n            maxheight: 0,\n          })\n          .catch(() => ({ html: \"\", inline: undefined }));\n\n        if (!res?.html) {\n          this.editor?.notify({\n            level: \"error\",\n            message: t(\"Failed to get embed object\"),\n          });\n          return false;\n        }\n\n        this.inline = res?.inline;\n        return !!this.inline;\n      }\n    };\n</script>\n\n<script lang=\"ts\">\n  const element = $host<EmbedInlineElement>();\n  const apply = () => {\n    if (!element.inline) {\n      return;\n    }\n\n    element.insertContent(element.inline);\n  };\n  element.onEditorPaste = apply;\n  element.addEventListener(\"click\", apply);\n</script>\n\n<button>{t(\"Embed inline\")}</button>\n","<svelte:options\n  customElement={{\n    extend,\n  }}\n/>\n\n<script module lang=\"ts\">\n  import { extendPasteMenuItem } from \"./svelte\";\n  import { PasteMenuItemElement } from \"./element\";\n  const extend = (customElementConstructor: typeof HTMLElement) =>\n    class extends extendPasteMenuItem(customElementConstructor) {\n      isEditorItemAvailable() {\n        return this.tiptap?.commands.isMarkdownConversionAvailable() &&\n          (this.content?.plainText ?? \"\")\n            .split(\"\\n\")\n            .some(\n              (line) =>\n                line.startsWith(\"#\") ||\n                line.startsWith(\"```\") ||\n                /^=+$/.test(line) ||\n                /^-+$/.test(line)\n            )\n          ? this.content?.htmlDocument\n            ? PasteMenuItemElement.Priority.Default\n            : PasteMenuItemElement.Priority.High\n          : false;\n      }\n    };\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../../i18n\";\n  const element = $host<PasteMenuItemElement>();\n\n  const apply = async () => {\n    element.insertContent(\n      (\n        await element.tiptap?.commands.markdownToHtml({\n          content: element.content?.plainText ?? \"\",\n        })\n      )?.content ?? \"\"\n    );\n  };\n  element.onEditorPaste = apply;\n  element.addEventListener(\"click\", apply);\n</script>\n\n<button>\n  {t(\"Convert from Markdown\")}\n</button>\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { t } from \"../../i18n\";\nimport Html from \"./Html.svelte\";\nimport Link from \"./Link.svelte\";\nimport Embed from \"./Embed.svelte\";\nimport EmbedInline from \"./EmbedInline.svelte\";\nimport Markdown from \"./Markdown.svelte\";\n\nimport { PasteMenuItemElement } from \"./element\";\n\nexport class AsText extends PasteMenuItemElement {\n  constructor() {\n    super();\n    const button = document.createElement(\"button\");\n    button.textContent = t(\"Paste as text\");\n    this.shadowRoot.appendChild(button);\n  }\n\n  onEditorPaste() {\n    const encoder = document.createElement(\"div\");\n    encoder.textContent = this.content?.plainText ?? \"\";\n    this.insertContent(encoder.innerHTML.replace(/\\n/g, \"<br>\"));\n    // TBD: enclose with <p> tag\n    // this.insertContent(preprocessHTML(`<p>${encoder.innerHTML}</p>`));\n  }\n\n  connectedCallback() {\n    this.addEventListener(\"click\", () => {\n      this.onEditorPaste();\n    });\n  }\n}\n\nexport default {\n  text: AsText,\n  // @ts-ignore\n  html: Html.element!,\n  // @ts-ignore\n  link: Link.element!,\n  // @ts-ignore\n  embed: Embed.element!,\n  // @ts-ignore\n  embedInline: EmbedInline.element!,\n  // @ts-ignore\n  markdown: Markdown.element!,\n};\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-h-1\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M19 18v-8l-2 2\\\" />\\n    <path d=\\\"M4 6v12\\\" />\\n    <path d=\\\"M12 6v12\\\" />\\n    <path d=\\\"M11 18h2\\\" />\\n    <path d=\\\"M3 18h2\\\" />\\n    <path d=\\\"M4 12h8\\\" />\\n    <path d=\\\"M3 6h2\\\" />\\n    <path d=\\\"M11 6h2\\\" />\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-h-2\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M17 12a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0\\\" />\\n    <path d=\\\"M4 6v12\\\" />\\n    <path d=\\\"M12 6v12\\\" />\\n    <path d=\\\"M11 18h2\\\" />\\n    <path d=\\\"M3 18h2\\\" />\\n    <path d=\\\"M4 12h8\\\" />\\n    <path d=\\\"M3 6h2\\\" />\\n    <path d=\\\"M11 6h2\\\" />\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-h-3\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M19 14a2 2 0 1 0 -2 -2\\\" />\\n    <path d=\\\"M17 16a2 2 0 1 0 2 -2\\\" />\\n    <path d=\\\"M4 6v12\\\" />\\n    <path d=\\\"M12 6v12\\\" />\\n    <path d=\\\"M11 18h2\\\" />\\n    <path d=\\\"M3 18h2\\\" />\\n    <path d=\\\"M4 12h8\\\" />\\n    <path d=\\\"M3 6h2\\\" />\\n    <path d=\\\"M11 6h2\\\" />\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-h-4\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M20 18v-8l-4 6h5\\\" />\\n    <path d=\\\"M4 6v12\\\" />\\n    <path d=\\\"M12 6v12\\\" />\\n    <path d=\\\"M11 18h2\\\" />\\n    <path d=\\\"M3 18h2\\\" />\\n    <path d=\\\"M4 12h8\\\" />\\n    <path d=\\\"M3 6h2\\\" />\\n    <path d=\\\"M11 6h2\\\" />\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-h-5\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M17 18h2a2 2 0 1 0 0 -4h-2v-4h4\\\" />\\n    <path d=\\\"M4 6v12\\\" />\\n    <path d=\\\"M12 6v12\\\" />\\n    <path d=\\\"M11 18h2\\\" />\\n    <path d=\\\"M3 18h2\\\" />\\n    <path d=\\\"M4 12h8\\\" />\\n    <path d=\\\"M3 6h2\\\" />\\n    <path d=\\\"M11 6h2\\\" />\\n</svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-h-6\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M19 14a2 2 0 1 0 0 4a2 2 0 0 0 0 -4z\\\" />\\n    <path d=\\\"M21 12a2 2 0 1 0 -4 0v4\\\" />\\n    <path d=\\\"M4 6v12\\\" />\\n    <path d=\\\"M12 6v12\\\" />\\n    <path d=\\\"M11 18h2\\\" />\\n    <path d=\\\"M3 18h2\\\" />\\n    <path d=\\\"M4 12h8\\\" />\\n    <path d=\\\"M3 6h2\\\" />\\n    <path d=\\\"M11 6h2\\\" />\\n</svg>\\n\"","import { t } from \"../../i18n\";\nimport { QuickActionItemElement } from \"./element\";\n\nimport h1Icon from \"../../ui/icon/heading1.svg?raw\";\nimport h2Icon from \"../../ui/icon/heading2.svg?raw\";\nimport h3Icon from \"../../ui/icon/heading3.svg?raw\";\nimport h4Icon from \"../../ui/icon/heading4.svg?raw\";\nimport h5Icon from \"../../ui/icon/heading5.svg?raw\";\nimport h6Icon from \"../../ui/icon/heading6.svg?raw\";\n\nconst icons: Record<string, string> = {\n  1: h1Icon,\n  2: h2Icon,\n  3: h3Icon,\n  4: h4Icon,\n  5: h5Icon,\n  6: h6Icon,\n};\nexport class Heading extends QuickActionItemElement {\n  connectedCallback() {\n    const level = this.dataset.mtRichTextEditorPanelItemVariant;\n    if (!level) {\n      return;\n    }\n\n    this.aliases = [`h${level}`, `heading${level}`];\n\n    const button = document.createElement(\"button\");\n    const icon = document.createElement(\"span\");\n    icon.classList.add(\"icon\");\n    icon.innerHTML = icons[level];\n    const label = document.createElement(\"span\");\n    label.textContent = t(`Heading ${level}`);\n    button.appendChild(icon);\n    button.appendChild(label);\n    this.shadowRoot.appendChild(button);\n\n    this.addEventListener(\"click\", () => {\n      this.insertContent(`<h${level}></h${level}>`);\n    });\n  }\n}\n","import { Heading } from \"./heading\";\nexport default {\n  heading: Heading,\n};\n","import toolbar from \"../../toolbar/item\";\nimport statusbar from \"../../statusbar/item\";\nimport pasteMenu from \"../../paste-menu/item\";\nimport quickAction from \"../../quick-action/item\";\n\ntype PanelNamespace = \"toolbar\" | \"statusbar\" | \"paste-menu\" | \"quick-action\";\n\nconst systemItems: Record<PanelNamespace, Record<string, typeof HTMLElement>> = {\n  toolbar,\n  statusbar,\n  \"paste-menu\": pasteMenu,\n  \"quick-action\": quickAction,\n};\n\nexport const getPanelItem = (namespace: PanelNamespace, name: string): string | undefined => {\n  const lowerName = name.toLowerCase();\n  if (lowerName.includes(\"-\") && window.customElements.get(lowerName)) {\n    // specified by full name\n    return lowerName;\n  }\n\n  const elementName = `mt-rich-text-editor-${namespace}-item-${lowerName}`;\n  let elementConstructor = window.customElements.get(elementName);\n  if (!elementConstructor) {\n    elementConstructor = systemItems[namespace][name];\n    if (!elementConstructor) {\n      console.error(`Item for ${name} is not found`);\n      return undefined;\n    }\n    window.customElements.define(elementName, elementConstructor);\n  }\n  return elementName;\n};\n","<script lang=\"ts\">\n  import type { Editor } from \"../editor\";\n  import type { ToolbarItemElement } from \"./item/element\";\n  import { debounce } from \"../util/event\";\n  import { getPanelItem } from \"../ui/item/registry\";\n\n  const {\n    editor,\n    toolbar,\n    options,\n    inline,\n  }: {\n    editor: Editor;\n    toolbar: string[][][][];\n    options: Record<string, Record<string, unknown> | undefined | false>;\n    inline: boolean;\n  } = $props();\n\n  let toolbarRef: HTMLElement | null = null;\n\n  const buttonRefs: Record<string, ToolbarItemElement | HTMLElement> = {};\n  const buttons = toolbar\n    .map((row) =>\n      row.map(\n        (\n          groupSides // left side and right side\n        ) =>\n          (groupSides || [])\n            .map(\n              (group) =>\n                (group || [])\n                  .map((name) => ({\n                    name,\n                    elementName: getPanelItem(\"toolbar\", name),\n                    options: options[name] ?? {},\n                  }))\n                  .filter((item) => item.elementName && item.options !== false) as {\n                  name: string;\n                  elementName: string;\n                  options: Record<string, unknown>;\n                }[]\n            )\n            .filter((group) => group.length > 0)\n      )\n    )\n    .filter((row) => row.length > 0);\n  function update() {\n    for (const key in buttonRefs) {\n      if (\"onEditorUpdate\" in buttonRefs[key]) {\n        buttonRefs[key].onEditorUpdate();\n      }\n    }\n  }\n  editor.tiptap.on(\"selectionUpdate\", update);\n  editor.tiptap.on(\"update\", update);\n  $effect(() => {\n    update();\n  });\n\n  if (inline) {\n    const updateToolbarVisibility = debounce(() => {\n      if (!toolbarRef) {\n        return;\n      }\n\n      let isShow = false;\n      let isNewLine = false;\n      if (editor.tiptap.state.selection.empty) {\n        const node = editor.tiptap.state.selection.$head.parent;\n        isShow = node.type.name === \"paragraph\" && node.content.size === 0;\n        isNewLine = true;\n      } else {\n        isShow = true;\n      }\n\n      if (!isShow) {\n        toolbarRef.style.display = \"\";\n        toolbarRef.style.transition = \"\";\n        return;\n      }\n\n      if (toolbarRef.style.display === \"\") {\n        toolbarRef.style.display = \"block\";\n        setTimeout(() => {\n          if (toolbarRef) {\n            toolbarRef.style.transition = \"left 0.2s ease-in-out\";\n          }\n        }, 100);\n      }\n      const viewRect = editor.tiptap.view.dom.getBoundingClientRect();\n      const { selection } = editor.tiptap.view.state;\n      const toCoords = editor.tiptap.view.coordsAtPos(selection.$to.pos);\n      if (isNewLine) {\n        toolbarRef.style.top = `${toCoords.bottom - viewRect.top - 30}px`;\n        toolbarRef.style.left = `${toCoords.left - viewRect.left + 20}px`;\n        toolbarRef.setAttribute(\"data-is-new-line\", \"true\");\n      } else {\n        const fromCoords = editor.tiptap.view.coordsAtPos(selection.$from.pos);\n        const coords = fromCoords.left < toCoords.left ? fromCoords : toCoords;\n        toolbarRef.style.top = `${coords.bottom - viewRect.top + 15}px`;\n        toolbarRef.style.left = `${coords.left - viewRect.left}px`;\n        toolbarRef.removeAttribute(\"data-is-new-line\");\n      }\n    }, 50);\n\n    editor.tiptap.on(\"selectionUpdate\", updateToolbarVisibility);\n    updateToolbarVisibility();\n  }\n\n  function bindRef(node: ToolbarItemElement | HTMLElement, key: string) {\n    buttonRefs[key] = node;\n    if (\"onEditorInit\" in node) {\n      node.onEditorInit(editor, ((options[key] as Record<string, unknown>) || undefined) ?? {});\n    }\n    return {\n      destroy() {\n        delete buttonRefs[key];\n      },\n    };\n  }\n</script>\n\n<div class=\"toolbar {inline ? 'toolbar--inline' : ''}\" bind:this={toolbarRef}>\n  {#each buttons as row, rowIndex (rowIndex)}\n    <div class=\"toolbar-row\">\n      {#each row as groupSides, groupSidesIndex (groupSidesIndex)}\n        <div class=\"toolbar-side\">\n          {#each groupSides as group, groupIndex (groupIndex)}\n            <div\n              class={`toolbar-group ${group.length === 1 ? `toolbar-group--${group[0].name}` : \"\"}`}\n            >\n              {#each group as button, buttonIndex (buttonIndex)}\n                <svelte:element\n                  this={button.elementName}\n                  use:bindRef={button.name}\n                  class=\"toolbar-item\"\n                />\n              {/each}\n            </div>\n          {/each}\n        </div>\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<style>\n  .toolbar {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n  }\n  .toolbar-row {\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 1px solid #ccc;\n  }\n  .toolbar-row:last-child {\n    border-bottom: none;\n  }\n  .toolbar-side {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .toolbar-group {\n    padding: 0 4px;\n  }\n  .toolbar-group:not(:last-child) {\n    border-right: 1px solid #ccc;\n    white-space: nowrap;\n  }\n  .toolbar-item {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin: 2px 0 3px;\n    height: 34px;\n  }\n\n  .toolbar-item.is-active {\n    background: #dee0e2;\n  }\n\n  /**\n   * Inline\n   */\n  .toolbar--inline {\n    position: absolute;\n    display: none;\n    z-index: 1;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    background: #fff;\n  }\n\n  .toolbar--inline::before {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 50%;\n    left: -8px;\n    width: 14px;\n    height: 14px;\n    background: #fff;\n    transform: translateY(-50%) rotate(45deg);\n    border-left: 1px solid #ccc;\n    border-bottom: 1px solid #ccc;\n    box-shadow: -1px 1px 2px rgba(0, 0, 0, 0.03);\n  }\n\n  .toolbar--inline:not([data-is-new-line])::before {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: -8px;\n    left: 20px;\n    width: 14px;\n    height: 14px;\n    background: #fff;\n    transform: translateX(-50%) rotate(45deg);\n    border-left: 1px solid #ccc;\n    border-top: 1px solid #ccc;\n    border-bottom: none;\n    box-shadow: -1px -1px 2px rgba(0, 0, 0, 0.03);\n  }\n</style>\n","import type { Editor } from \"../editor\";\nimport ToolbarUI from \"./Toolbar.svelte\";\nimport { mount, unmount } from \"svelte\";\n\ninterface ToolbarOptions {\n  target: HTMLDivElement;\n  editor: Editor;\n  toolbar?: string[][][][];\n  options: Record<string, unknown>;\n  inline: boolean;\n}\n\nexport class Toolbar {\n  #toolbar: ReturnType<typeof mount> | undefined;\n\n  constructor({ target, editor, toolbar, options, inline }: ToolbarOptions) {\n    if (!toolbar || toolbar.length === 0) {\n      return;\n    }\n\n    this.#toolbar = mount(ToolbarUI, {\n      target,\n      props: {\n        editor,\n        toolbar,\n        inline,\n        options,\n      },\n    });\n  }\n\n  public destroy(): void {\n    if (this.#toolbar) {\n      unmount(this.#toolbar);\n    }\n  }\n}\n","<script lang=\"ts\">\n  import type { Editor } from \"../editor\";\n  import { getPanelItem } from \"../ui/item/registry\";\n  import type { StatusbarItemElement } from \"./item/element\";\n\n  const {\n    editor,\n    statusbar,\n    options,\n  }: {\n    editor: Editor;\n    statusbar: string[][];\n    options: Record<string, Record<string, unknown> | undefined | false>;\n  } = $props();\n\n  const buttonRefs: Record<string, StatusbarItemElement | HTMLElement> = {};\n  const buttons = statusbar.map(\n    (\n      groupSides // left side and right side\n    ) =>\n      (groupSides || [])\n        .map((name) => ({\n          name,\n          elementName: getPanelItem(\"statusbar\", name),\n          options: options[name] ?? {},\n        }))\n        .filter((item) => item.elementName && item.options !== false) as {\n        name: string;\n        elementName: string;\n        options: Record<string, unknown>;\n      }[]\n  );\n\n  function update() {\n    for (const key in buttonRefs) {\n      if (\"onEditorUpdate\" in buttonRefs[key]) {\n        buttonRefs[key].onEditorUpdate();\n      }\n    }\n  }\n  editor.tiptap.on(\"selectionUpdate\", update);\n  editor.tiptap.on(\"update\", update);\n  $effect(() => {\n    update();\n  });\n\n  function bindRef(node: StatusbarItemElement | HTMLElement, key: string) {\n    buttonRefs[key] = node;\n    if (\"onEditorInit\" in node) {\n      node.onEditorInit(editor, (options[key] as Record<string, unknown> | undefined) ?? {});\n    }\n    return {\n      destroy() {\n        delete buttonRefs[key];\n      },\n    };\n  }\n</script>\n\n<div class=\"statusbar\">\n  {#each buttons as groupSides, groupSidesIndex (groupSidesIndex)}\n    <div class=\"statusbar-side\">\n      {#each groupSides as button, buttonIndex (buttonIndex)}\n        <svelte:element\n          this={button.elementName}\n          use:bindRef={button.name}\n          class=\"statusbar-item\"\n        />\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<style>\n  .statusbar {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n  .statusbar-side {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .statusbar-item {\n    display: inline-flex;\n    align-items: center;\n    margin: 2px 0 3px;\n    border: none;\n    background: none;\n    border-radius: 4px;\n    padding: 1px 5px;\n  }\n</style>\n","import type { Editor } from \"../editor\";\nimport StatusbarUI from \"./Statusbar.svelte\";\nimport { mount, unmount } from \"svelte\";\n\ninterface StatusbarOptions {\n  target: HTMLDivElement;\n  editor: Editor;\n  statusbar: string[][];\n  options: Record<string, unknown>;\n  inline: boolean;\n}\n\nexport class Statusbar {\n  #statusbar: ReturnType<typeof mount> | undefined;\n\n  constructor({ target, editor, statusbar, options, inline }: StatusbarOptions) {\n    if (inline || statusbar.length === 0) {\n      return;\n    }\n\n    this.#statusbar = mount(StatusbarUI, {\n      target,\n      props: {\n        editor,\n        statusbar,\n        inline,\n        options,\n      },\n    });\n  }\n\n  public destroy(): void {\n    if (this.#statusbar) {\n      unmount(this.#statusbar);\n    }\n  }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"icon icon-tabler icons-tabler-outline icon-tabler-clipboard\\\">\\n    <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2\\\" />\\n    <path d=\\\"M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z\\\" />\\n</svg>\\n\"","<script lang=\"ts\">\n  import type { Editor } from \"../editor\";\n  import type { EditorView } from \"@tiptap/pm/view\";\n  import { getPanelItem } from \"../ui/item/registry\";\n  import type { PasteMenuItemElement, PasteMenuItemPriorityValue } from \"./item/element\";\n  import clipboardIcon from \"../ui/icon/clipboard.svg?raw\";\n\n  function getText(clipboardData: DataTransfer): string | undefined {\n    const text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text) {\n      return text;\n    }\n    const uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : undefined;\n  }\n\n  const {\n    editor,\n    onPaste,\n    pasteMenu,\n    options,\n    setIsPasting,\n  }: {\n    editor: Editor;\n    pasteMenu: string[];\n    onPaste: (callback: (view: EditorView, event: ClipboardEvent) => boolean) => void;\n    options: Record<string, Record<string, unknown> | undefined | false>;\n    setIsPasting: (isPasting: boolean) => void;\n  } = $props();\n\n  const buttonRefs: Record<string, PasteMenuItemElement | HTMLElement> = {};\n  const buttons = pasteMenu\n    .map((name) => ({\n      name,\n      elementName: getPanelItem(\"paste-menu\", name),\n      options: options[name] ?? {},\n    }))\n    .filter((item) => item.elementName && item.options !== false) as {\n    name: string;\n    elementName: string;\n    options: Record<string, unknown>;\n  }[];\n\n  let isOpen = $state(false);\n  let isMenuOpen = $state(false);\n  let isInTransaction = false;\n  let top = $state(0);\n  let left = $state(0);\n  let menuElement: HTMLElement | null = null;\n  const isAvailableMap: Record<string, number> = $state({});\n\n  $effect(() => {\n    setIsPasting(isOpen);\n  });\n\n  editor.tiptap.on(\"update\", () => {\n    if (!isInTransaction) {\n      isOpen = false;\n    }\n  });\n\n  const tryUpdatePosition = (view: EditorView, byScroll: boolean = false) => {\n    const viewRect = view.dom.getBoundingClientRect();\n    const { selection } = view.state;\n\n    // Get the DOM node at cursor position\n    const pos = selection.$to.pos;\n    const domNode = view.nodeDOM(selection.$from.pos - 2) as HTMLElement;\n\n    if (!domNode) {\n      // Fallback to coordsAtPos if we can't get the DOM node\n      const coords = view.coordsAtPos(pos);\n      const newTop = coords.bottom - viewRect.top;\n      if (top < newTop || top - newTop > 100) {\n        top = newTop;\n      }\n      const newLeft = coords.left - viewRect.left;\n      if (left !== 0 && left > newLeft) {\n        left = newLeft;\n      }\n      return;\n    }\n\n    // Get the actual rendered size of the node and update position\n    const updateNodePosition = (resizeObserver: ResizeObserver | undefined = undefined) => {\n      if (!domNode.parentElement) {\n        resizeObserver?.disconnect();\n        return;\n      }\n\n      const nodeRect = domNode.getBoundingClientRect();\n      const tmpTop = nodeRect.bottom - viewRect.top;\n      const newTop = tmpTop > viewRect.height - 20 ? viewRect.height - 20 : tmpTop;\n      if (byScroll || top < newTop || top - newTop > 100) {\n        top = newTop;\n      }\n      const newLeft = nodeRect.left - viewRect.left;\n      if (byScroll || left > newLeft) {\n        left = newLeft;\n      }\n    };\n\n    // Initial position update\n    updateNodePosition();\n\n    if (!byScroll) {\n      const resizeObserver = new ResizeObserver(() => {\n        updateNodePosition(resizeObserver);\n      });\n      resizeObserver.observe(domNode);\n\n      // Stop observing after 10 seconds\n      setTimeout(() => {\n        resizeObserver.disconnect();\n      }, 10000);\n    }\n  };\n  const updatePosition = (view: EditorView, byScroll: boolean = false) => {\n    try {\n      tryUpdatePosition(view, byScroll);\n    } catch {\n      // TBD: retry?\n    }\n  };\n\n  editor.tiptap.view.dom.addEventListener(\"scroll\", () => {\n    if (isOpen) {\n      updatePosition(editor.tiptap.view, true);\n    }\n  });\n\n  let applyName = $state(\"\");\n  onPaste((view, event) => {\n    // commit history transaction\n    // FIXME: we should more effectively commit history transaction\n    editor.tiptap.commands.undo();\n    editor.tiptap.commands.redo();\n\n    const targetDomNode = view\n      .domAtPos(editor.tiptap.state.selection.from)\n      ?.node?.cloneNode(true) as HTMLElement | Text | null;\n    if (targetDomNode instanceof HTMLElement) {\n      targetDomNode.querySelectorAll(\"br.ProseMirror-trailingBreak\").forEach((br) => {\n        br.remove();\n      });\n    }\n\n    if (!event.clipboardData) {\n      return false;\n    }\n    const clipboardData = event.clipboardData;\n    const plainText = getText(clipboardData);\n    const htmlText = clipboardData.getData(\"text/html\");\n    let htmlDocument = null;\n    if (htmlText) {\n      htmlDocument = new DOMParser().parseFromString(htmlText, \"text/html\");\n    }\n\n    (async () => {\n      top = 0;\n      left = plainText?.includes(\"\\n\") ? 0 : 9999;\n\n      const availablePromiseMap: Record<\n        string,\n        boolean | PasteMenuItemPriorityValue | Promise<boolean | PasteMenuItemPriorityValue>\n      > = {};\n      buttons.forEach(({ name }) => {\n        const button = buttonRefs[name];\n        if (\"onEditorSetPasteContent\" in button) {\n          button.onEditorSetPasteContent?.({\n            plainText: plainText ?? htmlDocument?.body.innerText ?? \"\",\n            htmlDocument,\n            targetDomNode,\n            clipboardData,\n            transaction: async (cb: () => void | Promise<void>) => {\n              isInTransaction = true;\n              try {\n                await cb();\n              } finally {\n                isInTransaction = false;\n                updatePosition(view);\n              }\n            },\n          });\n        }\n        if (\"isEditorItemAvailable\" in button) {\n          availablePromiseMap[name] = button.isEditorItemAvailable();\n        }\n      });\n\n      await Promise.all(Object.values(availablePromiseMap));\n\n      let maxPriority = 0;\n      applyName = \"\";\n      for (const { name } of buttons) {\n        const availableRes = await availablePromiseMap[name];\n        isAvailableMap[name] =\n          availableRes === true ? 1 : availableRes === false ? 0 : availableRes;\n        if (isAvailableMap[name] > maxPriority) {\n          maxPriority = isAvailableMap[name];\n          applyName = name;\n        }\n      }\n\n      if (applyName) {\n        const button = buttonRefs[applyName];\n        if (\"onEditorPaste\" in button) {\n          button.onEditorPaste();\n        }\n      }\n\n      setTimeout(() => {\n        if (Object.values(isAvailableMap).filter(Boolean).length <= 1) {\n          return;\n        }\n\n        isOpen = true;\n        updatePosition(view);\n      });\n    })();\n\n    return false;\n  });\n\n  const bindRef = (node: PasteMenuItemElement | HTMLElement, key: string) => {\n    buttonRefs[key] = node;\n    if (\"onEditorInit\" in node) {\n      node.onEditorInit(editor, (options[key] as Record<string, unknown> | undefined) ?? {});\n    }\n    return {\n      destroy() {\n        delete buttonRefs[key];\n      },\n    };\n  };\n\n  const closeMenuByClickOutside = (ev: MouseEvent) => {\n    if (document.body.classList.contains(\"modal-open\")) {\n      return;\n    }\n    if (menuElement && (ev.composedPath() as EventTarget[]).includes(menuElement)) {\n      return;\n    }\n    isMenuOpen = false;\n  };\n\n  $effect(() => {\n    if (isMenuOpen) {\n      document.addEventListener(\"click\", closeMenuByClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"click\", closeMenuByClickOutside);\n    };\n  });\n</script>\n\n<div\n  class=\"paste-menu\"\n  style={`\n    display: ${isOpen ? \"block\" : \"none\"};\n    z-index: 1000;\n    top: ${top}px;\n    left: ${left}px;\n    width: max-content;\n  `}\n  bind:this={menuElement}\n>\n  <button\n    type=\"button\"\n    class={`paste-menu-icon ${isMenuOpen ? \"is-active\" : \"\"}`}\n    onclick={() => (isMenuOpen = !isMenuOpen)}\n  >\n    {@html clipboardIcon}\n  </button>\n  <div class=\"paste-menu-list\" style={`display: ${isMenuOpen ? \"block\" : \"none\"};`}>\n    {#each buttons as button (button.name)}\n      <div\n        class=\"paste-menu-item-container\"\n        class:is-applied={applyName === button.name}\n        onpaste-menu-item-applied={() => {\n          applyName = button.name;\n        }}\n      >\n        <svelte:element\n          this={button.elementName}\n          use:bindRef={button.name}\n          class=\"paste-menu-item\"\n          style={`display: ${isAvailableMap[button.name] ? \"block\" : \"none\"};`}\n        />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .paste-menu {\n    position: absolute;\n    z-index: 1;\n  }\n  .paste-menu-icon {\n    background: none;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 2px;\n    margin: 0;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #fff;\n  }\n  .paste-menu-icon:after {\n    content: \"\";\n    display: block;\n    margin: 0 2px;\n    width: 6px;\n    height: 6px;\n    border-right: 1px solid #000;\n    border-bottom: 1px solid #000;\n    transform: rotate(45deg);\n    margin-top: -3px;\n  }\n  .paste-menu-icon:hover {\n    background: #f0f0f0;\n  }\n  .paste-menu-icon.is-active {\n    border-bottom: 0;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    position: relative;\n    z-index: 1;\n    background: #fff;\n  }\n\n  .paste-menu {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n  }\n  .paste-menu-list {\n    display: flex;\n    flex-wrap: wrap;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    border-top-left-radius: 0;\n    margin-top: -1px;\n    background: #fff;\n  }\n  .paste-menu-item-container {\n    position: relative;\n  }\n  .paste-menu-item-container.is-applied::before {\n    content: \"✔\";\n    position: absolute;\n    left: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n</style>\n","import type { Editor } from \"../editor\";\nimport type { EditorView } from \"@tiptap/pm/view\";\nimport PasteMenuUI from \"./PasteMenu.svelte\";\nimport { mount, unmount } from \"svelte\";\n\ninterface PasteMenuOptions {\n  target: HTMLDivElement;\n  editor: Editor;\n  onPaste: (callback: (view: EditorView, event: ClipboardEvent) => boolean) => void;\n  pasteMenu: string[];\n  options: Record<string, Record<string, unknown> | undefined | false>;\n  inline: boolean;\n}\n\nexport class PasteMenu {\n  #pasteMenu: ReturnType<typeof mount> | undefined;\n  #isPasting: boolean = false;\n\n  constructor({ target, editor, onPaste, pasteMenu, options }: PasteMenuOptions) {\n    if (pasteMenu.length === 0) {\n      return;\n    }\n\n    this.#pasteMenu = mount(PasteMenuUI, {\n      target,\n      props: {\n        editor,\n        onPaste,\n        pasteMenu,\n        options,\n        setIsPasting: (isPasting: boolean) => {\n          this.#isPasting = isPasting;\n        },\n      },\n    });\n  }\n\n  public isPasting(): boolean {\n    return this.#isPasting;\n  }\n\n  public destroy(): void {\n    if (this.#pasteMenu) {\n      unmount(this.#pasteMenu);\n    }\n  }\n}\n","<script lang=\"ts\">\n  import type { Editor } from \"../editor\";\n  import { debounce } from \"../util/event\";\n  import { getPanelItem } from \"../ui/item/registry\";\n  import { QuickActionItemElement } from \"../component\";\n\n  const {\n    editor,\n    quickAction,\n    options,\n  }: {\n    editor: Editor;\n    quickAction: string[];\n    options: Record<string, Record<string, unknown> | undefined | false>;\n  } = $props();\n\n  const buttonRefs: Record<string, HTMLElement> = {};\n  const buttons = quickAction\n    .map((name) => {\n      const [baseName, variant] = name.split(\":\");\n      return {\n        name,\n        variant,\n        elementName: getPanelItem(\"quick-action\", baseName),\n        aliases: [variant],\n        options: options[name] ?? {},\n      };\n    })\n    .filter((item) => item.elementName && item.options !== false) as {\n    name: string;\n    variant?: string;\n    elementName: string;\n    aliases: string[];\n    options: Record<string, unknown>;\n  }[];\n\n  let keyword = $state<string>(\"\");\n  const availableButtons = $derived(\n    keyword\n      ? buttons.filter((button) =>\n          button.aliases.some((alias: string) => alias.startsWith(keyword))\n        )\n      : buttons\n  );\n  const availableButtonsLength = $derived(availableButtons.length);\n\n  let selectedButtonIndex = $state<number>(0);\n  $effect(() => {\n    if (availableButtonsLength > 0) {\n      selectedButtonIndex = 0;\n    }\n  });\n\n  let isShow = false;\n  let quickActionRef: HTMLElement | null = null;\n  const updateVisibility = debounce(() => {\n    if (!quickActionRef) {\n      return;\n    }\n\n    isShow = false;\n    if (editor.tiptap.state.selection.empty) {\n      const node = editor.tiptap.state.selection.$head.parent;\n      isShow = node.type.name === \"paragraph\" && node.textContent?.startsWith(\"/\");\n      if (isShow) {\n        keyword = node.textContent?.slice(1);\n      }\n    }\n\n    if (!isShow) {\n      quickActionRef.style.display = \"\";\n      quickActionRef.style.transition = \"\";\n      return;\n    }\n\n    if (quickActionRef.style.display === \"\") {\n      quickActionRef.style.display = \"block\";\n      setTimeout(() => {\n        if (quickActionRef) {\n          quickActionRef.style.transition = \"left 0.2s ease-in-out\";\n        }\n      }, 100);\n    }\n    const viewRect = editor.tiptap.view.dom.getBoundingClientRect();\n    const { selection } = editor.tiptap.view.state;\n    const toCoords = editor.tiptap.view.coordsAtPos(selection.$to.pos);\n\n    quickActionRef.style.top = `${toCoords.bottom - viewRect.top + 10}px`;\n    // quickActionRef.style.left = `${toCoords.left - viewRect.left}px`;\n    quickActionRef.style.left = \"0px\";\n  }, 50);\n\n  $effect(() => {\n    editor.tiptap.on(\"selectionUpdate\", updateVisibility);\n    updateVisibility();\n    editor.tiptap.view.dom.addEventListener(\n      \"keydown\",\n      (ev: KeyboardEvent) => {\n        if (isShow) {\n          if (ev.key === \"Enter\") {\n            ev.preventDefault();\n            ev.stopPropagation();\n            ev.stopImmediatePropagation();\n            buttonRefs[availableButtons[selectedButtonIndex].name].click();\n          } else if (ev.key === \"ArrowDown\") {\n            ev.preventDefault();\n            ev.stopPropagation();\n            ev.stopImmediatePropagation();\n            selectedButtonIndex = (selectedButtonIndex + 1) % availableButtons.length;\n          } else if (ev.key === \"ArrowUp\") {\n            ev.preventDefault();\n            ev.stopPropagation();\n            ev.stopImmediatePropagation();\n            selectedButtonIndex =\n              (selectedButtonIndex - 1 + availableButtons.length) % availableButtons.length;\n          }\n        }\n      },\n      { capture: true }\n    );\n  });\n\n  function bindRef(node: QuickActionItemElement | HTMLElement, key: string) {\n    buttonRefs[key] = node;\n    if (\"onEditorInit\" in node) {\n      node.onEditorInit(editor, (options[key] as Record<string, unknown> | undefined) ?? {});\n    }\n    if (\"aliases\" in node) {\n      const button = buttons.find((button) => button.name === key);\n      if (button) {\n        button.aliases = node.aliases as string[];\n      }\n    }\n    return {\n      destroy() {\n        delete buttonRefs[key];\n      },\n    };\n  }\n</script>\n\n<div class=\"mt-rich-text-editor-quick-action\" bind:this={quickActionRef}>\n  {#each availableButtons as button, index (button.name)}\n    <div\n      class=\"mt-rich-text-editor-quick-action-button {index === selectedButtonIndex\n        ? 'selected'\n        : ''}\"\n    >\n      <svelte:element\n        this={button.elementName}\n        data-mt-rich-text-editor-panel-item-variant={button.variant}\n        use:bindRef={button.name}\n      />\n    </div>\n  {/each}\n</div>\n\n<style>\n  .mt-rich-text-editor-quick-action {\n    position: absolute;\n    z-index: 1;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    background: #fff;\n    display: none;\n  }\n\n  .mt-rich-text-editor-quick-action-button {\n    padding: 10px;\n    display: block;\n    &.selected,\n    &:hover {\n      background: #f0f0f0;\n    }\n  }\n</style>\n","import type { Editor } from \"../editor\";\nimport QuickActionUI from \"./QuickAction.svelte\";\nimport { mount, unmount } from \"svelte\";\n\ninterface QuickActionOptions {\n  target: HTMLDivElement;\n  editor: Editor;\n  quickAction: string[];\n  options: Record<string, Record<string, unknown> | undefined | false>;\n}\n\nexport class QuickAction {\n  #quickActionMenu: ReturnType<typeof mount> | undefined;\n\n  constructor({ target, editor, quickAction, options }: QuickActionOptions) {\n    if (quickAction.length === 0) {\n      return;\n    }\n\n    this.#quickActionMenu = mount(QuickActionUI, {\n      target,\n      props: {\n        editor,\n        quickAction,\n        options,\n      },\n    });\n  }\n\n  public destroy(): void {\n    if (this.#quickActionMenu) {\n      unmount(this.#quickActionMenu);\n    }\n  }\n}\n","<script lang=\"ts\" module>\n  export interface StructureData {\n    readonly id: string;\n    readonly className: string;\n    readonly style: string;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { t } from \"../i18n\";\n  import { Modal, ModalContent } from \"@movabletype/svelte-components\";\n\n  let {\n    structureData,\n    onSubmit,\n    onClose,\n  }: {\n    structureData: StructureData;\n    onSubmit: (structureData: StructureData) => void;\n    onClose: () => void;\n  } = $props();\n\n  let id = $state(structureData.id);\n  let className = $state(structureData.className);\n  let style = $state(structureData.style);\n\n  let idInput: HTMLInputElement;\n  $effect(() => {\n    idInput?.focus();\n  });\n\n  let self: Modal;\n\n  // eslint-disable-next-line svelte/no-unused-svelte-ignore\n  // svelte-ignore non_reactive_update FIXME:\n  let close: () => void;\n</script>\n\n<Modal on:close={onClose} bind:this={self}>\n  <ModalContent bind:close>\n    <svelte:fragment slot=\"title\">{t(\"Edit attributes\")}</svelte:fragment>\n    <svelte:fragment slot=\"body\">\n      <div class=\"form-group mb-3\">\n        <label for=\"structure-id\" class=\"form-label\">{t(\"ID\")}</label>\n        <input\n          type=\"text\"\n          id=\"structure-id\"\n          class=\"form-control\"\n          bind:value={id}\n          bind:this={idInput}\n        />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"structure-class-name\" class=\"form-label\">{t(\"Class name\")}</label>\n        <input type=\"text\" id=\"structure-class-name\" class=\"form-control\" bind:value={className} />\n      </div>\n      <div class=\"form-group mb-3\">\n        <label for=\"structure-style\" class=\"form-label\">{t(\"Style\")}</label>\n        <input type=\"text\" id=\"structure-style\" class=\"form-control\" bind:value={style} />\n      </div>\n    </svelte:fragment>\n    <svelte:fragment slot=\"footer\">\n      <button\n        type=\"button\"\n        title={t(\"Insert (s)\")}\n        class=\"action primary button btn btn-primary\"\n        onclick={() => {\n          onSubmit({ id, className, style });\n          close();\n        }}\n      >\n        {t(\"Insert\")}\n      </button>\n      <button\n        type=\"button\"\n        title={t(\"Cancel (x)\")}\n        class=\"cancel action button mt-close-dialog btn btn-default\"\n        onclick={close}\n      >\n        {t(\"Cancel\")}\n      </button>\n    </svelte:fragment>\n  </ModalContent>\n</Modal>\n","import { mount, unmount } from \"svelte\";\nimport type { Editor } from \"../editor\";\nimport type { EditorEvents } from \"@tiptap/core\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport type { StructureData } from \"./StructureModal.svelte\";\nimport StructureModal from \"./StructureModal.svelte\";\n\nexport class StructureMode {\n  #editor: Editor;\n  #onUpdateCallback: (event: EditorEvents[\"update\"]) => void;\n  #style: HTMLStyleElement;\n  #clickCallback: (event: MouseEvent) => void;\n  #modal: ReturnType<typeof mount> | null = null;\n  #selector = \"section, div, p, ul, ol, li, h1, h2, h3, h4, h5, h6\";\n\n  constructor(editor: Editor) {\n    this.#editor = editor;\n    this.#onUpdateCallback = this.onUpdate.bind(this);\n\n    this.#clickCallback = (event: MouseEvent) => {\n      const domNode = event.currentTarget as HTMLElement;\n      if (event.target !== domNode) {\n        return;\n      }\n\n      const rect = domNode.getBoundingClientRect();\n      if (event.clientY - rect.top > 13) {\n        return;\n      }\n\n      this.#modal = mount(StructureModal, {\n        target: document.body,\n        props: {\n          structureData: {\n            id: domNode.id,\n            className: domNode.className,\n            style: domNode.style.cssText,\n          },\n          onSubmit: (structureData: StructureData) => {\n            const pos = this.#editor.tiptap.view.posAtDOM(domNode, 0);\n            const node = this.#editor.tiptap.state.doc.nodeAt(pos - 1);\n            if (!node) {\n              return;\n            }\n            const newAttrs = { ...node.attrs.MTRichTextEditorHTMLAttributes };\n            const attrNameMap = {\n              className: \"class\",\n            } as Record<keyof StructureData, string>;\n            ([\"id\", \"className\", \"style\"] as (keyof StructureData)[]).forEach((attr) => {\n              newAttrs[attrNameMap[attr] ?? attr] = structureData[attr] || undefined;\n            });\n            const transaction = this.#editor.tiptap.state.tr.setNodeAttribute(\n              pos - 1,\n              \"MTRichTextEditorHTMLAttributes\",\n              newAttrs\n            );\n            this.#editor.tiptap.view.dispatch(transaction);\n\n            if (this.#modal) {\n              unmount(this.#modal);\n              this.#modal = null;\n            }\n          },\n          onClose: () => {\n            if (this.#modal) {\n              unmount(this.#modal);\n              this.#modal = null;\n            }\n          },\n        },\n      });\n    };\n\n    this.#style = document.createElement(\"style\");\n    this.#editor.tiptap.view.dom.getRootNode().appendChild(this.#style);\n\n    this.#editor.tiptap.on(\"update\", this.#onUpdateCallback);\n    this.onUpdate();\n  }\n\n  public onUpdate(): void {\n    let style = \"\";\n\n    const domNodes = this.#editor.tiptap.view.dom.querySelectorAll<HTMLElement>(this.#selector);\n    for (const domNode of domNodes) {\n      domNode.removeEventListener(\"click\", this.#clickCallback);\n      domNode.addEventListener(\"click\", this.#clickCallback);\n\n      const selector = `${domNode.tagName.toLowerCase()}${domNode\n        .getAttributeNames()\n        .map((name) => {\n          if (name === \"data-mt-rich-text-editor-id\") {\n            return \"\";\n          }\n          if (![\"id\", \"class\", \"style\"].includes(name)) {\n            return \"\";\n          }\n          return `[${name}=\"${domNode.getAttribute(name)}\"]`;\n        })\n        .join(\"\")}`;\n      style += `${selector} {\n    outline: 1px solid rgba(0, 0, 0, 0.2);\n    padding: 0.5rem;\n    margin: 1rem 0;\n    border-radius: 0.5rem;\n    position: relative;\n    &:before {\n      content: \"${selector.replace(/\"/g, '\\\\\"')}\";\n      position: absolute;\n      top: -0.8rem;\n      left: 0.5rem;\n      display: block;\n      background-color: #fff;\n      padding: 0 0.5rem;\n      font-weight: normal;\n      font-size: 1rem;\n      cursor: pointer;\n    }\n  }\n      `;\n    }\n    this.#style.textContent = style;\n  }\n\n  public destroy(): void {\n    const domNodes = this.#editor.tiptap.view.dom.querySelectorAll<HTMLElement>(this.#selector);\n    for (const domNode of domNodes) {\n      domNode.removeEventListener(\"click\", this.#clickCallback);\n    }\n    this.#style.remove();\n    if (this.#modal) {\n      unmount(this.#modal);\n      this.#modal = null;\n    }\n    this.#editor.tiptap.off(\"update\", this.#onUpdateCallback);\n  }\n}\n","export const insertStylesheets = async (root: ShadowRoot, stylesheets: string[]): Promise<void> => {\n  for (let stylesheet of stylesheets) {\n    if (!stylesheet) {\n      continue;\n    }\n\n    if (/^blob:/.test(stylesheet)) {\n      try {\n        stylesheet = await (await fetch(stylesheet)).text();\n      } catch (e) {\n        console.error(e);\n        continue;\n      }\n    } else if (!/^https?:/.test(stylesheet) && /\\.css$/i.test(stylesheet)) {\n      // assumes `stylesheet` is relative URL\n      stylesheet = new URL(stylesheet, window.location.href).href;\n    }\n\n    if (/^https?:/.test(stylesheet)) {\n      const styleSheet = document.createElement(\"link\");\n      styleSheet.rel = \"stylesheet\";\n      styleSheet.href = stylesheet;\n      root.appendChild(styleSheet);\n    } else {\n      const styleSheet = document.createElement(\"style\");\n      styleSheet.textContent = stylesheet;\n      root.appendChild(styleSheet);\n    }\n  }\n};\n","export default \".ProseMirror {\\n  position: relative;\\n}\\n\\n.ProseMirror {\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n  white-space: break-spaces;\\n  -webkit-font-variant-ligatures: none;\\n  font-variant-ligatures: none;\\n  font-feature-settings: \\\"liga\\\" 0; /* the above doesn't seem to work in Edge */\\n}\\n\\n.ProseMirror pre {\\n  white-space: pre-wrap;\\n}\\n\\n.ProseMirror li {\\n  position: relative;\\n}\\n\\n.ProseMirror-hideselection *::selection { background: transparent; }\\n.ProseMirror-hideselection *::-moz-selection { background: transparent; }\\n.ProseMirror-hideselection { caret-color: transparent; }\\n\\n/* See https://github.com/ProseMirror/prosemirror/issues/1421#issuecomment-1759320191 */\\n.ProseMirror [draggable][contenteditable=false] { user-select: text }\\n\\n.ProseMirror-selectednode {\\n  outline: 2px solid #8cf;\\n}\\n\\n/* Make sure li selections wrap around markers */\\n\\nli.ProseMirror-selectednode {\\n  outline: none;\\n}\\n\\nli.ProseMirror-selectednode:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: -32px;\\n  right: -2px; top: -2px; bottom: -2px;\\n  border: 2px solid #8cf;\\n  pointer-events: none;\\n}\\n\\n/* Protect against generic img rules */\\n\\nimg.ProseMirror-separator {\\n  display: inline !important;\\n  border: none !important;\\n  margin: 0 !important;\\n}\\n\"","import { Editor as TiptapEditor, Extension as TiptapExtension, generateJSON } from \"@tiptap/core\";\nimport type { EditorView } from \"@tiptap/pm/view\";\nimport { Extension } from \"./tiptap/extension\";\nimport { Toolbar } from \"./toolbar\";\nimport { Statusbar } from \"./statusbar\";\nimport { PasteMenu } from \"./paste-menu\";\nimport { QuickAction } from \"./quick-action\";\nimport { StructureMode } from \"./structure-mode\";\nimport { preprocessHTML, normalizeHTML } from \"./util/html\";\nimport { insertStylesheets } from \"./util/dom\";\nimport prosemirrorCss from \"prosemirror-view/style/prosemirror.css?raw\";\nimport editorCss from \"./editor.css?inline\";\nimport contentCss from \"./content.css?inline\";\n\nexport interface ExtensionOptions {\n  [key: string]: unknown;\n  embedObject?: {\n    resolver?: (data: { url: string; maxwidth?: number; maxheight?: number }) => Promise<{\n      error?: {\n        message: string;\n      };\n      inline?: boolean;\n    }>;\n  };\n}\n\nexport interface EditorOptions {\n  inline?: boolean;\n  structure?: boolean;\n  height?: number | string;\n  stylesheets?: string[];\n  editorStylesheets?: string[];\n  /**\n   * toolbar definition\n   * @example\n   * [\n   *   // 1st row\n   *   [\n   *     // left side groups\n   *     [\n   *       [\"bold\", \"italic\", \"underline\"],\n   *       [\"orderedList\", \"bulletList\"],\n   *     ],\n   *     // right side groups\n   *     [\n   *       [\"source\"],\n   *     ],\n   *   ],\n   *   // 2nd row\n   *   [\n   *     // left side groups\n   *     [\n   *       [\"undo\", \"redo\"],\n   *     ],\n   *     // has no right side groups\n   *   ],\n   *   // more rows...\n   * ]\n   */\n  toolbar?: string[][][][];\n  toolbarContainer?: HTMLDivElement | null;\n  toolbarOptions?: Record<string, unknown>;\n  /**\n   * statusbar definition\n   * @example\n   * [\n   *   // left side items\n   *   [\"path\"],\n   *   // right side items\n   *   [\"wordCount\"],\n   * ]\n   */\n  statusbar?: string[][];\n  statusbarContainer?: HTMLDivElement | null;\n  statusbarOptions?: Record<string, unknown>;\n  extensions?: TiptapExtension[];\n  extensionOptions?: ExtensionOptions;\n  pasteMenu?: string[];\n  pasteMenuOptions?: ConstructorParameters<typeof PasteMenu>[0][\"options\"];\n  quickAction?: string[];\n  quickActionOptions?: ConstructorParameters<typeof QuickAction>[0][\"options\"];\n  autoFocus?: boolean;\n}\n\nconst DEFAULT_HEIGHT = 350;\nconst MIN_HEIGHT = 300;\n\nexport const EditorEl = Symbol(\"EditorEl\");\n\ntype OnPasteCallback = (view: EditorView, event: ClipboardEvent) => boolean;\n\nexport class Editor {\n  public id: string;\n  public tiptap: TiptapEditor;\n  public [EditorEl]: HTMLDivElement;\n  public options: EditorOptions;\n  #onPasteCallback: OnPasteCallback | undefined;\n  #containerEl: HTMLDivElement;\n  #textarea: HTMLTextAreaElement;\n  #editorContainerEl: HTMLDivElement;\n  #toolbar: Toolbar;\n  #statusbar: Statusbar;\n  #pasteMenu: PasteMenu;\n  #quickAction: QuickAction;\n  #structureMode: StructureMode | undefined;\n\n  constructor(textarea: HTMLTextAreaElement, options: EditorOptions) {\n    this.id = textarea.id;\n    this.#textarea = textarea;\n    this.options = options;\n\n    const inline = options.inline ?? false;\n    const height =\n      typeof options.height === \"number\"\n        ? `${options.height}px`\n        : (options.height ??\n          `${localStorage.getItem(\"mt-rich-text-editor-height\") ?? DEFAULT_HEIGHT}px`);\n\n    this.#containerEl = document.createElement(\"div\");\n    this.#containerEl.className = \"mt-rich-text-editor\";\n    if (!inline) {\n      this.#containerEl.style.height = height;\n    } else {\n      this.#containerEl.style.minHeight = height;\n    }\n    this.#containerEl.dataset.mtRichTextEditorId = textarea.id;\n    this.#textarea.parentNode?.insertBefore(this.#containerEl, this.#textarea);\n    this.#textarea.style.display = \"none\";\n\n    const editorShadow = this.#containerEl.attachShadow({ mode: \"open\" });\n    insertStylesheets(editorShadow, [editorCss, ...(options.editorStylesheets ?? [])]);\n    this[EditorEl] = document.createElement(\"div\");\n    this[EditorEl].classList.add(\"mt-rich-text-editor-editor\");\n    if (inline) {\n      this[EditorEl].classList.add(\"mt-rich-text-editor-editor--inline\");\n      this[EditorEl].style.minHeight = height;\n    }\n    editorShadow.appendChild(this[EditorEl]);\n\n    const initBarMount = (_container: EditorOptions[\"toolbarContainer\"], className: string) => {\n      const container =\n        _container ??\n        (() => {\n          const container = document.createElement(\"div\");\n          container.className = className;\n          if (inline) {\n            container.classList.add(`${className}--inline`);\n          }\n          this[EditorEl].appendChild(container);\n          return container;\n        })();\n      const shadow = container.attachShadow({ mode: \"open\" });\n      insertStylesheets(shadow, options.editorStylesheets ?? []);\n      const mount = document.createElement(\"div\");\n      shadow.appendChild(mount);\n      return mount;\n    };\n    const toolbarMount = initBarMount(\n      options.toolbarContainer,\n      options.toolbar?.length ? \"mt-rich-text-editor-toolbar\" : \"mt-rich-text-editor-toolbar--empty\"\n    );\n\n    this.#editorContainerEl = document.createElement(\"div\");\n    this.#editorContainerEl.className = \"mt-rich-text-editor-content\";\n    const shadow = this.#editorContainerEl.attachShadow({ mode: \"open\" });\n    insertStylesheets(shadow, [\n      prosemirrorCss + editorCss + contentCss,\n      ...(options.editorStylesheets ?? []),\n      ...(options.stylesheets ?? []),\n    ]);\n\n    const editorMount = document.createElement(\"div\");\n    editorMount.className = \"mt-rich-text-editor-content-root\";\n    shadow.appendChild(editorMount);\n    this[EditorEl].appendChild(this.#editorContainerEl);\n\n    const onPaste = (callback: OnPasteCallback): void => {\n      this.#onPasteCallback = callback;\n    };\n    const handlePaste = (...args: Parameters<OnPasteCallback>) => {\n      return this.#onPasteCallback?.(...args) ?? false;\n    };\n\n    const pasteMenuContainer = document.createElement(\"div\");\n    pasteMenuContainer.className = \"mt-rich-text-editor-paste-menu\";\n    shadow.appendChild(pasteMenuContainer);\n\n    this.tiptap = new TiptapEditor({\n      element: editorMount,\n      extensions: [Extension.configure(options.extensionOptions), ...(options.extensions ?? [])],\n      content: preprocessHTML(this.#textarea.value),\n      editorProps: {\n        handlePaste,\n      },\n    });\n    if (options.autoFocus ?? inline) {\n      this.focus();\n    }\n\n    this.#toolbar = new Toolbar({\n      target: toolbarMount,\n      editor: this,\n      toolbar: options.toolbar,\n      options: options.toolbarOptions ?? {},\n      inline: inline && !options.toolbarContainer,\n    });\n\n    const statusbarMount = initBarMount(\n      options.statusbarContainer,\n      options.statusbar?.length\n        ? \"mt-rich-text-editor-statusbar\"\n        : \"mt-rich-text-editor-statusbar--empty\"\n    );\n    this.#statusbar = new Statusbar({\n      target: statusbarMount,\n      editor: this,\n      statusbar: options.statusbar ?? [],\n      options: options.statusbarOptions ?? {},\n      inline: inline && !options.statusbarContainer,\n    });\n\n    const pasteMenuMount = initBarMount(pasteMenuContainer, \"mt-rich-text-editor-paste-menu\");\n    this.#pasteMenu = new PasteMenu({\n      target: pasteMenuMount,\n      editor: this,\n      onPaste,\n      pasteMenu: options.pasteMenu ?? [],\n      options: options.pasteMenuOptions ?? {},\n      inline,\n    });\n\n    const quickActionMount = document.createElement(\"div\");\n    shadow.appendChild(quickActionMount);\n    this.#quickAction = new QuickAction({\n      target: quickActionMount,\n      editor: this,\n      quickAction: options.quickAction ?? [],\n      options: options.quickActionOptions ?? {},\n    });\n\n    this.#initResizeHandle(this[EditorEl]);\n\n    if (options.structure) {\n      this.setStructureMode(true);\n    }\n  }\n\n  public save(): void {\n    this.#textarea.value = this.getContent();\n  }\n\n  public getContent(): string {\n    return normalizeHTML(this.tiptap.getHTML());\n  }\n\n  public setContent(content: string): void {\n    this.tiptap.commands.setContent(preprocessHTML(content));\n    this.#textarea.value = content;\n  }\n\n  public getHeight(): number {\n    return this.#containerEl.clientHeight;\n  }\n\n  public setHeight(height: number): void {\n    if (height === 0) {\n      return;\n    }\n    this.#containerEl.style.height = `${height}px`;\n    localStorage.setItem(\"mt-rich-text-editor-height\", height.toString());\n  }\n\n  public getStructureMode(): boolean {\n    return this.#structureMode !== undefined;\n  }\n\n  public setStructureMode(structureMode: boolean): void {\n    if (structureMode) {\n      this.#structureMode = new StructureMode(this);\n    } else {\n      this.#structureMode?.destroy();\n      this.#structureMode = undefined;\n    }\n  }\n\n  public focus(): void {\n    this.tiptap.commands.focus();\n  }\n\n  public destroy(): void {\n    this.#onPasteCallback = undefined;\n    this.#toolbar.destroy();\n    this.#statusbar.destroy();\n    this.#pasteMenu.destroy();\n    this.#structureMode?.destroy();\n    this.#quickAction.destroy();\n    this.tiptap.destroy();\n    this.#containerEl.remove();\n  }\n\n  public insertContent(html: string): void {\n    const json = generateJSON(preprocessHTML(html), this.tiptap.extensionManager.extensions);\n    this.tiptap.commands.insertContent(json);\n  }\n\n  public notify({ level, message }: { level: \"error\" | \"warning\"; message: string }): void {\n    alert(`${level}: ${message}`);\n  }\n\n  public isPasting(): boolean {\n    return this.#pasteMenu.isPasting();\n  }\n\n  #initResizeHandle(editor: HTMLDivElement): void {\n    const resizeHandle = document.createElement(\"div\");\n    resizeHandle.className = \"mt-rich-text-editor-resize-handle\";\n    editor.appendChild(resizeHandle);\n\n    let startY = 0;\n    let startHeight = 0;\n\n    const onMouseDown = (e: MouseEvent) => {\n      e.preventDefault();\n      startY = e.clientY;\n      startHeight = this.getHeight();\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", onMouseUp);\n    };\n\n    const onMouseMove = (e: MouseEvent) => {\n      const deltaY = e.clientY - startY;\n      const newHeight = Math.max(MIN_HEIGHT, startHeight + deltaY);\n      this.setHeight(newHeight);\n    };\n\n    const onMouseUp = () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", onMouseUp);\n    };\n\n    resizeHandle.addEventListener(\"mousedown\", onMouseDown);\n  }\n}\n","import { version } from \"../package.json\";\nimport i18n from \"./i18n\";\nimport { Editor } from \"./editor\";\nimport type { EditorOptions } from \"./editor\";\nimport \"./ui/item/registry\";\nimport * as TiptapCore from \"@tiptap/core\";\nimport * as Component from \"./component\";\nimport { getPanelItem } from \"./ui/item/registry\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype EventHandler = (...args: any[]) => void;\n\nexport interface EditorCreateOptions extends EditorOptions {\n  id: string;\n  language?: string;\n}\n\nexport class EditorManager {\n  public static version: string = version;\n  public static Editors: Record<string, Editor> = {};\n  public static Component = {\n    ...Component,\n    getPanelItem,\n  };\n  static #eventHandlers: Record<string, EventHandler[]> = {};\n\n  public static on(name: \"create\", handler: (options: EditorCreateOptions) => void): void;\n  public static on(name: \"init\", handler: (editor: Editor) => void): void;\n  public static on(name: string, handler: EventHandler): void {\n    if (!this.#eventHandlers[name]) {\n      this.#eventHandlers[name] = [];\n    }\n    this.#eventHandlers[name].push(handler);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static #emit(name: string, ...args: any[]): void {\n    const handlers = this.#eventHandlers[name] || [];\n    handlers.forEach((handler) => handler(...args));\n  }\n\n  public static async create(options: EditorCreateOptions): Promise<Editor> {\n    const { id, language } = options;\n\n    if (language && i18n.language !== language) {\n      i18n.changeLanguage(language);\n    }\n    if (EditorManager.Editors[id]) {\n      throw new Error(\"Editor already exists\");\n    }\n    const textarea = document.querySelector<HTMLTextAreaElement>(`#${id}`);\n    if (!textarea) {\n      throw new Error(\"Textarea not found\");\n    }\n\n    const editorCreateOptions = {\n      toolbar: [],\n      toolbarOptions: {},\n      statusbar: [[\"path\"]],\n      statusbarOptions: {},\n      pasteMenu: [\"embedInline\", \"embed\", \"html\", \"link\", \"text\", \"markdown\"],\n      pasteMenuOptions: {},\n      quickAction: [\"heading:1\", \"heading:2\", \"heading:3\", \"heading:4\", \"heading:5\", \"heading:6\"],\n      quickActionOptions: {},\n      extensions: [],\n      inline: false,\n      ...(options as EditorOptions & EditorCreateOptions),\n    } as EditorOptions & EditorCreateOptions;\n\n    this.#emit(\"create\", editorCreateOptions);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id: _, language: __, ...editorOptions } = editorCreateOptions;\n\n    const editor = new Editor(textarea, editorOptions);\n\n    this.#emit(\"init\", editor);\n\n    EditorManager.Editors[id] = editor;\n\n    return editor;\n  }\n\n  public static unload({ id }: { id: string }): void {\n    if (EditorManager.Editors[id]) {\n      EditorManager.Editors[id].destroy();\n      delete EditorManager.Editors[id];\n    }\n  }\n\n  public static get({ id }: { id: string }): Editor | undefined {\n    return EditorManager.Editors[id];\n  }\n\n  public static async save(): Promise<void> {\n    await Promise.all(Object.values(EditorManager.Editors).map((editor) => editor.save()));\n  }\n\n  public static async import(name: \"@tiptap/core\"): Promise<typeof import(\"@tiptap/core\")>;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public static async import(name: string): Promise<any> {\n    if (name === \"@tiptap/core\") {\n      return TiptapCore;\n    }\n    throw new Error(`Unknown module: ${name}`);\n  }\n}\n"],"names":["isString","obj","defer","res","rej","promise","resolve","reject","makeString","object","copy","a","s","t","m","lastOfPathSeparatorRegExp","cleanKey","key","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","stackIndex","setPath","newValue","k","e","p","last","pushPath","concat","getPath","getPathWithDefaults","data","defaultData","value","deepExtend","target","source","overwrite","prop","regexEscape","str","_entityMap","escape","RegExpCache","capacity","pattern","regExpFromCache","regExpNew","chars","looksLikeObjectPathRegExpCache","looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","c","matched","ki","deepFind","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","args","type","_b","_a","Logger","concreteLogger","options","_len","_key","_len2","_key2","_len3","_key3","_len4","_key4","lvl","prefix","debugOnly","moduleName","baseLogger","EventEmitter$1","events","listener","event","numListeners","_ref","observer","numTimesAdded","_ref2","ResourceStore","EventEmitter","ns","index","lng","ignoreJSONStructure","result","resources","deep","pack","v","postProcessor","module","processors","translator","processor","checkedLoadedFor","shouldHandleAsObject","Translator","services","resolved","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","parts","keys","lastKey","returnDetails","namespace","appendNamespaceToCIMode","resUsedKey","resExactUsedKey","noObject","joinArrays","handleAsObjectInI18nFormat","needsPluralHandling","hasDefaultValue","defaultValueSuffix","defaultValueSuffixOrdinalFallback","needsZeroSuffixLookup","defaultValue","resForObjHndl","handleAsObject","resType","r","resTypeIsArray","newKeyToUse","deepKey","usedDefault","usedKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","send","l","specificDefaultValue","defaultForMissing","language","suffixes","suffix","_this","skipOnVariables","nestBef","nb","na","nestAft","postProcess","postProcessorNames","found","exactUsedKey","usedLng","usedNS","extracted","needsContextHandling","codes","finalKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","possibleKey","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","formattedCode","cleanedLng","lngOnly","supportedLng","fallbacks","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","dummyRule","count","PluralResolver","languageUtils","cleanedCode","cacheKey","rule","lngPart","pluralCategory1","pluralCategory2","pluralCategory","deepFindWithDefaults","regexSafe","val","Interpolator","escape$1","escapeValue","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","getOrResetRegExp","existingRegExp","match","replaces","handleFormat","f","missingInterpolationHandler","todo","matchedVar","temp","safeValue","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","parseFormatStr","formatStr","formatName","formatOptions","optStr","opt","rest","trimmedKey","createCachedFormatter","fn","cache","optForCache","formatter","Formatter","name","format","formats","lastIndex","mem","formatted","valOptions","error","removePending","q","Connector","backend","store","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","err","loaded","loadedKeys","n","fcName","tried","wait","resolver","fallbackValue","isUpdate","clb","_d","_c","_e","opts","get","ret","transformOptions","noop","bindMemberFunctions","inst","I18n","defOpts","createClassOnDemand","ClassOrObject","lu","deferred","load","finish","usedCallback","append","li","lngInLngs","_this2","setLngProps","done","setLng","keyPrefix","_this3","fixedT","resultKey","_len5","_key5","fallbackLng","lastLng","loadNotPending","loadState","preResult","preloaded","newLngs","rtlLngs","forkResourceStore","mergedOptions","clone","clonedData","prev","acc","_len6","_key6","instance","i18next","ja","en","i18n","strings","values","OrderedMap","content","newKey","self","place","without","map","findDiffStart","b","pos","childA","childB","inner","findDiffEnd","posA","posB","iA","iB","size","same","minSize","Fragment","from","to","nodeStart","parent","child","end","start","blockSeparator","leafText","text","first","node","nodeText","other","otherPos","round","retIndex","curPos","cur","schema","array","joined","nodes","offset","compareDeep","Mark$1","Mark","attrs","set","placed","_","json","mark","marks","ReplaceError","Slice","openStart","openEnd","fragment","insertInto","removeRange","openIsolating","indexTo","offsetTo","dist","insert","replace","$from","$to","slice","replaceOuter","depth","close","prepareSliceForReplace","replaceThreeWay","replaceTwoWay","checkJoin","main","sub","joinable","$before","$after","addNode","addRange","$start","$end","startIndex","endIndex","$along","extra","ResolvedPos","parentOffset","dOff","tmp","after","pred","d","NodeRange","doc","rem","resolveCache","elt","ResolveCache","resolveCacheSize","emptyAttrs","Node$2","Node","startPos","includeParents","wrapMarks","replacement","one","two","TextNode","base","ContentMatch","validEnd","string","nodeTypes","stream","TokenStream","expr","parseExpr","dfa","nfa","checkForDeadEnds","frag","toEnd","seen","search","types","finished","tp","computed","active","scan","out","tok","exprs","parseExprSeq","parseExprSubscript","parseExprAtom","parseExprRange","parseNum","min","max","resolveName","typeName","connect","compile","edge","term","edges","loop","cmp","nullFrom","labeled","explore","states","state","work","dead","defaultAttrs","defaults","attrName","attr","computeAttrs","built","given","checkAttrs","initAttrs","Attribute","NodeType$1","NodeType","spec","group","before","markType","topType","validateType","MarkType","rank","Schema","instanceSpec","contentExprCache","contentExpr","markExpr","gatherMarks","excl","ok","isTagRule","isStyleRule","DOMParser$1","DOMParser","rules","matchedStyles","dom","context","ParseContext","matches","style","priority","blockTags","ignoreTags","listTags","OPT_PRESERVE_WS","OPT_PRESERVE_WS_FULL","OPT_OPEN_LEFT","wsOptionsFor","preserveWhitespace","NodeContext","solid","fill","wrap","parser","isOpen","topNode","topContext","topOptions","top","preserveWS","nodeBefore","domNodeBefore","matchAfter","outerWS","ruleID","normalizeList","sync","oldNeedsBlock","innerMarks","styles","continueAfter","nodeType","startIn","contentDOM","route","cx","block","nodeMarks","markMayApply","applyMarks","textNode","useRoot","minDepth","part","$context","deflt","prevItem","selector","DOMSerializer","keep","rendered","add","markDOM","renderSpec","inline","toDOM","structure","xmlNS","blockArraysIn","gatherToDOM","suspiciousAttributeCache","suspiciousAttributes","suspiciousAttributesInner","tagName","suspicious","space","innerContent","lower16","factor16","makeRecover","recoverIndex","recoverOffset","DEL_BEFORE","DEL_AFTER","DEL_ACROSS","DEL_SIDE","MapResult","delInfo","recover","StepMap","ranges","inverted","diff","assoc","simple","oldIndex","newIndex","oldSize","newSize","side","del","oldStart","newStart","Mapping","maps","mirror","mirrors","mapping","startSize","mirr","totalSize","inverse","corr","stepsByID","Step","id","stepClass","StepResult","failed","message","mapFragment","mapped","AddMarkStep","oldSlice","RemoveMarkStep","AddNodeMarkStep","updated","newSet","RemoveNodeMarkStep","ReplaceStep","contentBetween","ReplaceAroundStep","gapFrom","gapTo","gap","inserted","addMark","tr","removed","added","removing","adding","removeMark","step","toRemove","clearIncompatible","parentType","clearNewlines","replSteps","allowed","newline","canCut","liftTarget","range","lift","gapStart","gapEnd","splitting","findWrapping","innerRange","around","findWrappingOutside","findWrappingInside","withAttrs","outer","inside","innerMatch","wrappers","setBlockType","mapFrom","attrsHere","canChangeType","convertNewlines","pre","supportLinebreak","replaceLinebreaks","startM","endM","replaceNewlines","$pos","setNodeMarkup","newNode","canSplit","typesAfter","innerType","overrideChild","baseType","split","typeAfter","canJoin","canAppendWithSubstitutedLinebreaks","linebreakReplacement","joinPoint","dir","join","beforeType","$full","insertPoint","dropPoint","pass","bias","insertPos","fits","wrapping","replaceStep","fitsTrivially","Fitter","unplaced","fit","moveInline","placedSize","startDepth","sliceDepth","contentAt","frontierDepth","inject","openAtEnd","dropFromFragment","taken","openEndCount","closeNodeStart","addToFragment","level","contentAfterFits","dropInner","open","invalidMarks","definesContent","replaceRange","targetDepths","coveredDepths","preferredTarget","preferredTargetIndex","leftNodes","preferredDepth","leftNode","def","openDepth","targetDepth","expand","closeFragment","startSteps","oldOpen","newOpen","replaceRangeWith","point","deleteRange","covered","AttrStep","DocAttrStep","TransformError","Transform","classesById","Selection","$anchor","$head","SelectionRange","lastNode","lastParent","selectionToInsertionEnd","textOnly","TextSelection","findSelectionIn","AllSelection","cls","selectionClass","warnedAboutTextSelection","checkTextSelection","TextBookmark","anchor","head","dPos","NodeSelection","deleted","NodeBookmark","sel","AllBookmark","startLen","_from","_to","_newFrom","newTo","UPDATED_SEL","UPDATED_MARKS","UPDATED_SCROLL","Transaction","selection","time","inheritMarks","bind","FieldDesc","desc","baseFields","config","_marks","_old","Configuration","plugins","plugin","EditorState","ignore","rootTr","trs","newState","haveNew","oldState","newInstance","fields","field","$config","pluginFields","bindProps","Plugin","createKey","PluginKey","domIndex","parentNode","reusedRange","textRange","clearReusedRange","isEquivalentPosition","off","targetNode","targetOff","scanFor","atomElements","nodeSize","hasBlockDesc","textNodeBefore$1","textNodeAfter$1","isOnEdge","atStart","atEnd","selectionCollapsed","domSel","keyEvent","keyCode","deepActiveElement","caretFromPoint","x","y","nav","agent","ie_edge","ie_upto10","ie_11up","ie","ie_version","gecko","_chrome","chrome","chrome_version","safari","ios","mac","windows","android","webkit","webkit_version","windowRect","vp","getSide","clientRect","rect","scaleX","scaleY","scrollRectIntoView","view","startDOM","scrollThreshold","scrollMargin","atTop","bounding","moveX","moveY","startX","startY","dX","dY","storeScrollPos","refDOM","refTop","localRect","scrollStack","resetScrollPos","newRefTop","restoreScrollStack","dTop","left","preventScrollSupported","focusPreventScroll","stored","findOffsetInNode","coords","closest","dxClosest","coordsClosest","rowBot","rowTop","firstBelow","coordsBelow","childIndex","rects","dx","findOffsetInText","len","singleRect","inRect","targetKludge","posFromElement","posFromCaret","outsideBlock","sawBlock","elementFromPoint","element","box","startI","posAtCoords","caret","nonZero","BIDI","coordsAtPos","atom","supportEmptyRange","rectBefore","rectAfter","flattenV","takeSide","flattenH","withFlushedState","viewState","endOfTextblockVertical","nearest","boxes","maybeRTL","endOfTextblockHorizontal","oldNode","oldOff","anchorNode","anchorOffset","oldBidiLevel","parentDOM","newOff","cachedState","cachedDir","cachedResult","endOfTextblock","NOT_DIRTY","CHILD_DIRTY","CONTENT_DIRTY","NODE_DIRTY","ViewDesc","children","widget","outerDeco","innerDeco","nodeName","domBefore","domAfter","onlyNodes","nodeDOM","TrailingHackViewDesc","WidgetViewDesc","enter","fromOffset","toOffset","childBase","force","anchorDOM","headDOM","selRange","brKludge","domSelExtended","mutation","startInside","endInside","dirty","stop","CompositionViewDesc","textDOM","mut","MarkViewDesc","custom","replaceNodes","NodeViewDesc","descObj","applyOuterDeco","CustomNodeViewDesc","TextViewDesc","sameOuterDeco","composition","localComposition","compositionInChild","updater","ViewTreeUpdater","iterDeco","insideNode","compIndex","renderDescs","iosHacks","textPos","findTextInFragment","needsWrap","oldDOM","patchOuterDeco","computeOuterDeco","docViewDesc","docView","skip","descs","written","childDOM","rm","OuterDecoLevel","noDeco","outerDOM","prevComputed","curComputed","curDOM","deco","patchAttributes","prevList","curList","lock","preMatch","maxKeep","markDesc","targetDesc","domNode","nextDOM","locked","wrapper","ch","lastChild","hack","parentDesc","curDesc","descI","fI","compareSide","onWidget","onNode","locals","decoIndex","restNode","parentIndex","widgets","cutAt","oldCSS","childStart","selectionFromDOM","origin","nearestDesc","inWidget","nearestDescNode","selectionBetween","editorOwnsSelection","hasSelection","selectionToDOM","syncNodeSelection","curSel","selectCursorWrapper","resetEditableFrom","resetEditableTo","brokenSelectBetweenUneditable","temporarilyEditableNear","resetEditable","removeClassOnSelectionChange","setEditable","img","clearNodeSelection","hasFocusAndSelection","anchorInRightPlace","moveSelectionBlock","$side","apply","selectHorizontally","mods","$newHead","nodePos","nodeLen","isIgnorable","skipIgnoredNodes","skipIgnoredNodesBefore","skipIgnoredNodesAfter","moveNode","moveOffset","isBlockNode","setSelFocus","textNodeAfter","textNodeBefore","findDirection","mid","selectVertically","beyond","stopNativeHorizontalDelete","empty","nextNode","switchEditable","safariDownArrowBug","focusNode","focusOffset","getMods","captureKeyDown","serializeForClipboard","serializer","detachedDoc","firstChild","wrapMap","parseFromClipboard","html","plainText","inCode","asText","parsed","readHTML","restoreReplacedSpaces","contextNode","sliceData","inlineParents","addContext","closeSlice","normalizeSiblings","lastWrap","inLast","addToSibling","closeRight","wrapped","withWrappers","sibling","closeRange","_detachedDoc","_policy","maybeWrapTrusted","trustedTypes","metas","firstTag","handlers","editHandlers","passiveHandlers","InputState","initInput","handler","eventBelongsToView","runCustomHandler","ensureListeners","setSelectionOrigin","destroyInput","currentHandlers","dispatchEvent","_event","inOrNearComposition","now","eventCoords","isNear","click","dy","runHandlerOnContext","propName","updateSelection","selectClickedLeaf","selectClickedNode","selectedNode","selectAt","handleSingleClick","selectNode","handleDoubleClick","handleTripleClick","defaultTripleClick","forceDOMFlush","endComposition","selectNodeModifier","flushed","MouseDown","targetPos","timeoutComposition","scheduleComposeEnd","delay","clearComposition","timestampFromCustomEvent","findCompositionNode","textBefore","textAfter","descAfter","lastChanged","descBefore","restarting","captureCopy","brokenClipboardAPI","cut","sliceSingleNode","capturePaste","plain","doPaste","preferPlain","singleNode","getText","clipboardData","uris","Dragging","move","dragCopyModifier","mouseDown","draggedSlice","dragging","eventPos","$mouse","isNode","beforeInsert","domChangeCount","$cursor","compareObjs","WidgetType","noSpec","span","oldOffset","Decoration","InlineType","none","DecorationSet","local","decorations","buildTree","predicate","childOff","newLocal","mapChildren","byPos","childNode","childOffset","baseOffset","takeSpansForNode","moveSpans","withoutNulls","dec","localSet","DecorationGroup","removeOverlap","members","mappedDecos","member","sorted","oldChildren","moved","oldEnd","newEnd","dSize","mustRebuild","fromLocal","toLocal","mapAndGatherRemainingDecorations","spans","gather","hasNulls","localStart","subtree","working","insertAhead","viewDecorations","observeOptions","useCharData","SelectionState","DOMObserver","handleDOMChange","mutations","take","ancestors","container","newSel","typeOver","brs","br","blockParent","readSel","checkCSS","previousSibling","nextSibling","cssChecked","cssCheckWarned","rangeToSelectionRange","currentAnchor","safariShadowSelectionRange","read","parseBetween","from_","to_","find","startDoc","ruleFromNode","isInline","readDOMChange","addedNodes","compositionID","shared","parse","compare","preferredPos","preferredSide","change","findDiff","resolveSelection","$fromA","inlineChange","nextSel","looksLikeBackspace","chFrom","chTo","storedMarks","markChange","isMarkChange","parsedSel","curMarks","prevMarks","update","old","$newStart","$newEnd","skipClosingAndOpening","$next","fromEnd","mayOpen","endA","endB","adjust","isSurrogatePair","EditorView","props","checkStateComponent","getEditable","updateCursorWrapper","buildNodeViews","computeDocDeco","prevProps","redraw","updateSel","pluginsChanged","nodeViews","changedNodeViews","scroll","updateDoc","oldScrollPos","forceSelUpdate","selectionContextChanged","chromeKludge","prevState","pluginView","movedPos","cached","dispatchTransaction","sel1","sel2","nA","nB","shift","keyName","ignoreKey","normalizeKeyName","alt","ctrl","meta","mod","normalize","modifiers","keymap","bindings","keydownHandler","baseName","direct","noShift","fromCode","deleteSelection","dispatch","atBlockStart","joinBackward","$cut","findCutBefore","deleteBarrier","textblockAt","delStep","joinTextblockBackward","joinTextblocksAround","joinTextblockForward","atBlockEnd","findCutAfter","beforeText","beforePos","afterText","afterPos","only","selectNodeBackward","joinForward","selectNodeForward","joinUp","nodeSel","joinDown","newlineInCode","defaultBlockAt","exitCode","above","createParagraphNear","liftEmptyBlock","selectParentNode","joinMaybeClear","conn","isolated","canDelAfter","$joinAt","selAfter","at","afterDepth","selectTextblockSide","selectTextblockStart","selectTextblockEnd","wrapIn","applicable","wrapInList","listType","wrapRangeInList","doJoin","outerRange","$insert","doWrapInList","joinBefore","splitDepth","splitPos","liftListItem","itemType","liftToOuterList","liftOutOfList","endOfList","list","item","indexBefore","sinkListItem","nestedBefore","createChainableState","transaction","CommandManager","rawCommands","editor","command","startTr","shouldDispatch","callbacks","hasStartTransaction","run","chain","onceFn","getExtensionField","extension","splitExtensions","extensions","baseExtensions","nodeExtensions","markExtensions","getAttributesFromExtensions","extensionAttributes","nodeAndMarkExtensions","defaultAttribute","addGlobalAttributes","globalAttribute","attribute","addAttributes","attributes","mergedAttr","getNodeType","nameOrType","mergeAttributes","objects","items","mergedAttributes","valueClasses","existingClasses","insertClasses","valueClass","newStyles","existingStyles","styleMap","property","getRenderedAttributes","nodeOrMark","isFunction","callOrReturn","isEmptyObject","fromString","injectExtensionAttributesToParseRule","parseRule","oldAttributes","newAttributes","cleanUpSchemaItem","getSchemaByResolvedExtensions","allAttributes","extraNodeFields","extendNodeSchema","extensionAttribute","parseHTML","renderHTML","renderText","extraMarkFields","extendMarkSchema","getSchemaTypeByName","isExtensionRulesEnabled","enabled","enabledExtension","getHTMLFromFragment","documentFragment","getTextContentFromNodes","maxMatch","sliceEndPos","chunk","isRegExp","InputRule","inputRuleMatcherHandler","inputRuleMatch","run$1","commands","can","inputRulesPlugin","simulatedInputMeta","getType","isPlainObject","mergeDeep","output","extendedConfig","currentPos","currentMarks","isNumber","PasteRule","pasteRuleMatcherHandler","pasteRuleMatch","pasteEvent","dropEvent","resolvedFrom","resolvedTo","textToMatch","tiptapDragFromOtherEditor","createClipboardPasteEvent","pasteRulesPlugin","dragSourceElement","isPastedFromProseMirror","isDroppedFromProseMirror","processEvent","pasteEvt","chainableState","handleDragstart","handleDragend","dragFromOtherEditor","_view","transactions","isPaste","isDrop","simulatedPasteMeta","isSimulatedPaste","findDuplicates","filtered","el","ExtensionManager","resolvedExtensions","duplicatedNames","addExtensions","priorityA","priorityB","addCommands","inputRules","pasteRules","allPlugins","addKeyboardShortcuts","defaultBindings","shortcut","method","keyMapPlugin","addInputRules","addPasteRules","addProseMirrorPlugins","proseMirrorPlugins","addNodeView","nodeview","getPos","innerDecorations","HTMLAttributes","onBeforeCreate","onCreate","onUpdate","onSelectionUpdate","onTransaction","onFocus","onBlur","onDestroy","Extension$1","Extension","getTextBetween","startNode","textSerializers","textSerializer","getTextSerializersFromSchema","ClipboardTextSerializer","blur","clearContent","emitUpdate","clearNodes","$mappedFrom","$mappedTo","nodeRange","targetLiftDepth","defaultType","createParagraphNear$1","originRange","contentSlice","newPos","deleteCurrentNode","currentNode","deleteNode","typeOrName","deleteSelection$1","exitCode$1","objectIncludes","object1","object2","findMarkInSet","isMarkInSet","getMarkRange","endPos","getMarkType","extendMarkRange","newSelection","isTextSelection","minMax","resolveFocusPosition","position","selectionAtStart","selectionAtEnd","minPos","maxPos","isAndroid","isiOS","focus","delayedFocus","isSameSelection","forEach","insertContent","removeWhitespaces","elementFromString","wrappedValue","createNodeFromContent","Node$1","isJSONContent","isTextContent","hasInvalidContent","invalidContent","contentCheckSchema","isFragment","nodeOrFragment","insertContentAt","isOnlyTextContent","isOnlyBlockContent","newContent","joinUp$1","joinDown$1","joinBackward$1","joinForward$1","joinItemBackward","joinItemForward","joinTextblockBackward$1","joinTextblockForward$1","isMacOS","keyboardShortcut","capturedTransaction","newStep","isNodeActive","nodeRanges","relativeFrom","relativeTo","selectionRange","matchedNodeRanges","sum","lift$1","liftEmptyBlock$1","liftListItem$1","newlineInCode$1","getSchemaTypeNameByName","deleteProps","propOrProps","newObj","resetAttributes","schemaType","scrollIntoView","selectAll","selectNodeBackward$1","selectNodeForward$1","selectParentNode$1","selectTextblockEnd$1","selectTextblockStart$1","createDocument","parseOptions","setContent","document","getMarkAttributes","markItem","combineTransactionSteps","oldDoc","transform","findChildren","nodesWithPos","findChildrenInRange","findParentNodeClosestToPos","findParentNode","getSchema","generateHTML","contentNode","generateJSON","generateText","getNodeAttributes","nodeItem","getAttributes","removeDuplicates","by","simplifyChangedRanges","changes","uniqueChanges","otherChange","getChangedRanges","steps","stepMap","getDebugJSON","startOffset","increment","getMarksBetween","getNodeAtPosition","maxDepth","currentDepth","getSplittedAttributes","isMarkActive","markRanges","matchedRange","markRange","excludedRange","isActive","isAtEndOfNode","$parentPos","isAtStartOfNode","isList","isNodeEmpty","checkChildren","ignoreWhitespace","isContentEmpty","isNodeSelection","posToDOMRect","resolvedEnd","bottom","right","width","height","rewriteUnknownContentInner","validMarks","validNodes","rewrittenContent","rewriteUnknownContent","canSetMark","newMarkType","cursor","someNodeSupportsMark","_pos","parentAllowsMarkType","currentMarksAllowMarkType","otherMark","setMark","trimmedFrom","trimmedTo","setMeta","setNode","attributesToCopy","updatedState","setNodeSelection","setTextSelection","sinkListItem$1","ensureMarks","splittableMarks","filteredMarks","splitBlock","keepMarks","$first","splitListItem","overrideAttrs","grandParent","depthBefore","depthAfter","newNextTypeAttributes","nextType","newTypeAttributes","joinListBackwards","joinListForwards","nodeAfter","toggleList","listTypeOrName","itemTypeOrName","parentList","canWrapInList","toggleMark","extendEmptyMarkRange","toggleNode","toggleTypeOrName","toggleType","toggleWrap","undoInputRule","undoable","toUndo","unsetAllMarks","unsetMark","updateAttributes","lastPos","trimmedFrom2","trimmedTo2","wrapIn$1","wrapInList$1","Commands","Drop","Editable","FocusEvents","Keymap","handleBackspace","parentIsIsolating","parentPos","isAtStart","handleDelete","baseKeymap","pcKeymap","macKeymap","docChanges","ignoreTr","allFrom","allEnd","Paste","Tabindex","NodePos","isBlock","isNonTextAtom","childNodePos","nodeAttributes","attrKeys","firstItemOnly","childPos","createStyleTag","nonce","tiptapStyleTag","styleNode","editable","handlePlugins","nameOrPluginKeyToRemove","prevPlugins","nameOrPluginKey","allExtensions","ext","selectionHasChanged","nameOrAttributes","attributesOrUndefined","markInputRule","captureGroup","fullMatch","startSpaces","textStart","textEnd","markEnd","nodeInputRule","matchStart","lastChar","insertionStart","textblockTypeInputRule","textInputRule","cutOff","wrappingInputRule","blockRange","NodeView","component","_f","_g","dragHandle","domBox","handleBox","offsetX","offsetY","isDragEvent","isDropEvent","isEditable","isDragging","isDraggable","isSelectable","isCopyEvent","isPasteEvent","isCutEvent","isClickEvent","markPasteRule","escapeForRegEx","nodePasteRule","textPasteRule","Tracker","newPosition","mapResult","Document","Text","Subscript","Superscript","inputRegex","Image","src","title","HardBreak","starInputRegex","starPasteRegex","underscoreInputRegex","underscorePasteRegex","Italic","Underline","Blockquote","ListItemName","TextStyleName","BulletList","inputRule","Heading","HorizontalRule","$originFrom","$originTo","currentChain","posAfter","OrderedList","attributesWithoutStart","pasteRegex","Strike","dropCursor","editorView","DropCursorView","nodeRect","parentLeft","parentTop","timeout","disableDropCursor","disabled","Dropcursor","GapCursor","GapBookmark","closedBefore","closedAfter","override","mustMove","$cur","gapCursor","drawGapCursor","handleClick","handleKeyDown","beforeinput","arrow","axis","dirStr","$found","clickPos","Gapcursor","TextAlign","alignment","response","TextStyle","Color","color","readFromCache","addToCache","cachePos","TableMap","problems","leftA","rightA","topA","bottomA","leftB","rightB","topB","bottomB","row","col","table","rowStart","rowEnd","rowEndIndex","computeMap","findWidth","mapPos","colWidths","rowNode","cellNode","colspan","rowspan","colwidth","h","w","colW","widthIndex","expectedPos","missing","tableMap","badWidths","findBadColWidths","hasRowSpan","rowWidth","prevRow","cell","colWidth","freshColWidth","tableNodeTypes","role","tableEditingKey","cellAround","cellWrapping","isInTable","selectionCell","$cell","cellNear","pointsAtCell","moveCellForward","inSameTable","$cellA","$cellB","nextCell","tableStart","removeColSpan","addColSpan","columnIsHeader","headerCell","CellSelection","_CellSelection","$anchorCell","$headCell","cells","tableChanged","rows","rowContent","cellRect","extraLeft","extraRight","anchorTop","headTop","anchorBottom","headBottom","anchorRect","headRect","anchorLeft","headLeft","anchorRight","headRight","anchorCell","headCell","CellBookmark","_CellBookmark","drawCellSelection","isCellBoundarySelection","afterFrom","beforeTo","isTextSelectionAcrossCells","fromCellBoundaryNode","toCellBoundaryNode","normalizeSelection","allowTableNodeSelection","NodeSelection2","lastCell","fixTablesKey","PluginKey2","changedDescendants","curSize","fixTables","check","fixTable","tablePos","mustAdd","prob","selectedRect","addColumn","refColumn","addColumnBefore","addColumnAfter","removeColumn","mapStart","deleteColumn","rowIsHeader","addRow","rowPos","refRow","addRowBefore","addRowAfter","removeRow","nextRow","deleteRow","isEmpty","cellsOverlapRectangle","indexTop","indexLeft","indexBottom","indexRight","mergeCells","Fragment2","mergedPos","mergedCell","cellPos","splitCell","splitCellWithType","getCellType","baseAttrs","setCellAttr","deprecated_toggleHeader","isHeaderEnabledByType","cellPositions","toggleHeader","isHeaderRowEnabled","isHeaderColumnEnabled","selectionStartsAt","cellsRect","newType","relativeCellPos","toggleHeaderCell","findNextCell","goToNextCell","direction","TextSelection2","deleteTable","deleteCellSelection","baseContent","Slice2","pastedCells","fitSlice","Slice3","ensureRectangular","widths","Fragment3","clipCells","newWidth","newHeight","newRows","growTable","emptyHead","start2","header","emptyRow","isolateHorizontal","cellTop","cellLeft","isolateVertical","updatePos","insertCells","recomp","shiftArrow","maybeSetSelection","Selection2","atEndOfCell","cellSel","handlePaste","Fragment4","handleMouseDown","startEvent","startDOMCell","domInCell","setCellSelection","cellUnderMouse","$anchor2","starting","TextSelection3","mousePos","TableView","defaultCellMinWidth","updateColumnsOnResize","record","colgroup","overrideCol","overrideValue","totalWidth","fixedWidth","hasWidth","cssWidth","col2","columnResizingPluginKey","PluginKey3","columnResizing","handleWidth","cellMinWidth","View","lastColumnResizable","tableName","ResizeState","pluginState","handleMouseMove","handleMouseLeave","handleMouseDown2","handleDecorations","_ResizeState","activeHandle","action","handle","domCellAround","edgeCell","updateHandle","win","currentColWidth","event2","pluginState2","updateColumnWidth","draggedWidth","dragged","displayColumnWidth","domWidth","resizeMinWidth","mapIndex","zeroes","DecorationSet2","Decoration2","tableEditing","Plugin2","getColStyleDeclaration","minWidth","updateColumns","propertyKey","propertyValue","colElement","createColGroup","cols","tableWidth","tableMinWidth","createCell","cellType","cellContent","getTableNodeTypes","roles","createTable","rowsCount","colsCount","withHeaderRow","headerCells","isCellSelection","deleteTableWhenAllCellsSelected","cellCount","Table","TiptapTable","TableCell","TiptapTableCell","TableHeader","TiptapTableHeader","scope","TableRow","Indent","indent","setNodeIndentMarkup","delta","updateIndentLevel","applyIndent","Div","Span","Bold","TiptapBold","BlockLink","href","encodedTlds","encodedUtlds","assign","properties","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","groups","addToGroups","flags","flagsForToken","State","token","input","nextState","regex","exactOnly","inputs","regexp","templateState","allFlags","ta","ts","tt","WORD","UWORD","ASCIINUMERICAL","ALPHANUMERICAL","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL","OPENBRACE","CLOSEBRACE","OPENBRACKET","CLOSEBRACKET","OPENPAREN","CLOSEPAREN","OPENANGLEBRACKET","CLOSEANGLEBRACKET","FULLWIDTHLEFTPAREN","FULLWIDTHRIGHTPAREN","LEFTCORNERBRACKET","RIGHTCORNERBRACKET","LEFTWHITECORNERBRACKET","RIGHTWHITECORNERBRACKET","FULLWIDTHLESSTHAN","FULLWIDTHGREATERTHAN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","FULLWIDTHMIDDLEDOT","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","ASCII_LETTER","LETTER","EMOJI","DIGIT","SPACE","CR","LF","EMOJI_VARIATION","EMOJI_JOINER","OBJECT_REPLACEMENT","tlds","utlds","init$2","customSchemes","Start","decodeTlds","Num","Asciinumeric","Alphanumeric","Word","UWord","Nl","Cr","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","fastts","sch","iterable","stringToArray","charCount","charCursor","tokenLength","latestAccepting","sinceAccepts","charsSinceAccepts","second","char","defaultt","jr","encoded","words","digits","popDigitCount","popCount","Options","defaultRender","o","ignoredTags","uppercaseIgnoredTags","ir","operator","isCallable","MultiToken","truncate","protocol","formattedHref","className","rel","eventListeners","createTokenClass","Token","Email","Url","makeState","arg","init$1","qsAccepting","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","bracketPairs","OPEN","CLOSE","UrlOpen","UrlOpenQ","UrlOpenSyms","multis","textTokens","secondState","multiLength","initMultiToken","Multi","subtokens","startIdx","endIdx","warn","warnAdvice","INIT","reset","registerCustomProtocol","optionalSlashSlash","init","tokenize","isValidLinkStructure","autolink","preventAutolink","newRange","nodesInChangedRanges","textBlock","textBeforeWhitespace","wordsBeforeWhitespace","lastWordBeforeSpace","lastWordAndBlockOffset","linksBeforeSpace","link","clickHandler","els","pasteHandler","textContent","ATTR_WHITESPACE","isAllowedUri","uri","protocols","allowedProtocols","nextProtocol","Link","url","ctx","foundLinks","defaultProtocol","links","InlineLink","Paragraph","TiptapParagraph","MTRichTextEditorHTMLAttributes","textAlign","TextBlock","currentNodeContent","textBlockPos","Pre","Code","DescriptionList","DescriptionTerm","DescriptionDetails","Summary","ListItem","TiptapListItem","BackgroundColor","backgroundColor","Script","allowedOrigins","srcOrigin","iframe","EmbedObject","embedData","Markdown","GOOD_LEAF_SIZE","RopeSequence","Append","Leaf","prototypeAccessors","leftLen","max_empty_items","Branch","eventCount","preserveItems","remap","remaining","addAfter","addBefore","Item","histOptions","newItems","oldItems","lastItem","merged","overflow","DEPTH_OVERFLOW","cutOffEvents","mirrorPos","rebasedTransform","rebasedCount","rebasedItems","newUntil","iRebased","newMaps","branch","upto","newItem","cutPoint","mirrorOffset","HistoryState","undone","prevRanges","prevTime","prevComposition","applyTransaction","history","historyTr","historyKey","rebased","closeHistoryKey","appended","mustPreserveItems","rangesFor","newGroup","isAdjacentTo","mapRanges","adjacent","histTransaction","redo","pop","newHist","cachedPreserveItems","cachedPreserveItemsPlugins","hist","inputType","undo","buildCommand","undoDepth","redoDepth","History","TiptapHistory","eventAttrNames","Global","eventAttrs","ignoreAttributes","attributesStr","MTTag","MovableType","defaultLinkOptions","TiptapExtension","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","Iframe","_A","_B","_C","_D","_E","_F","_G","_H","_I","_J","_K","_L","_M","_N","_O","_P","_Q","_R","_S","if_block","elseif","hydrating","hydrate_next","consequent_effect","alternate_effect","condition","UNINITIALIZED","EFFECT_TRANSPARENT","has_branch","set_branch","flag","update_branch","new_condition","mismatch","is_else","HYDRATION_START_ELSE","remove_nodes","set_hydrate_node","set_hydrating","resume_effect","pause_effect","hydrate_node","pause_effects","controlled_anchor","items_map","transitions","length","pause_children","is_controlled","parent_node","clear_text_content","run_out_transitions","destroy_effect","each","get_collection","get_key","render_fn","fallback_fn","EACH_IS_CONTROLLED","get_first_child","create_text","fallback","was_empty","collection","is_array","array_from","HYDRATION_END","create_item","effect","active_reaction","reconcile","INERT","is_inert","is_animated","EACH_IS_ANIMATED","should_update","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","to_animate","stashed","child_anchor","update_item","to_destroy","destroy_length","queue_micro_task","active_effect","internal_set","reactive","mutable","EACH_ITEM_IMMUTABLE","mutable_source","DEV","collection_index","dest","next_node","get_next_sibling","check_hash","server_hash","hash","location","loc","dev_current_component_function","FILENAME","w.hydration_html_changed","sanitize_location","get_value","svg","mathml","skip_warning","w.hydration_mismatch","HYDRATION_ERROR","assign_nodes","create_fragment_from_html","slot","$$props","slot_props","slot_fn","is_interop","sanitize_slots","sanitized","get_tag","is_svg","get_namespace","was_hydrating","filename","component_context","tag","current_tag","next_tag","NAMESPACE_SVG","set_should_intro","is_raw_text_element","payload","untrack","inited","render_effect","deep_read_state","safe_not_equal","remove_input_defaults","already_removed","remove_defaults","set_attribute","checked","queue_idle_task","add_form_reset_listener","set_checked","set_selected","selected","check_src_in_dev_hydration","LOADING_ATTR_SYMBOL","get_setters","set_attributes","css_hash","preserve_attribute_case","is_custom_element","is_option_element","setters","prev_value","event_handle_key","event_name","delegated","is_delegated","is_capture_event","delegate","evt","create_event","autofocus","normalize_attribute","is_default","setters_cache","descriptors","proto","element_proto","get_descriptors","get_prototype_of","srcset_url_equal","src_url_equal","w.hydration_attribute_changed","element_src","split_srcset","srcset","element_urls","urls","set_class","prev_class_name","next_class_name","to_class","toggle_class","class_name","raf","run_tasks","task","fulfill","dispatch_event","css_property_to_camelcase","word","css_to_keyframe","css","keyframe","formatted_property","linear","transition","get_fn","get_params","is_intro","TRANSITION_IN","is_outro","TRANSITION_OUT","is_both","is_global","TRANSITION_GLOBAL","current_options","inert","intro","outro","get_options","previous_reaction","previous_effect","set_active_reaction","set_active_effect","animate","should_intro","BLOCK_EFFECT","EFFECT_RAN","counterpart","t2","on_finish","is_function","aborted","tick","easing","keyframes","get_t","animation","t1","duration","bind_value","runes","is_runes","listen_to_event_and_reset_event","is_reset","e.bind_invalid_checkbox_value","is_numberlike_input","to_number","bind_checked","select_option","select","mounting","select_options","option_value","get_option_value","is","init_select","bind_select_value","query","selected_option","is_bound_this","bound_value","element_or_component","STATE_SYMBOL","bind_this","get_parts","old_parts","preventDefault","immutable","version","derived","changed","user_pre_effect","observe_all","run_all","user_effect","fns","signal","bubble_event","onMount","lifecycle_outside_component","legacy_mode_flag","init_update_callbacks","cleanup","create_custom_event","detail","bubbles","cancelable","createEventDispatcher","active_component_context","debounce","timeoutId","objectTypes","root","freeExports","exports","freeModule","freeGlobal","global","maxSafeInteger","reOpera","objectProto","hasOwnProperty","toString","capitalize","cleanupOS","os","label","forOwn","trim","getClassOf","isHostType","qualify","reduce","accumulator","ua","isCustomContext","userAgent","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","phantomClass","java","rhino","beta","opera","operaClass","arch","description","prerelease","useFeatures","isSpecialCasedOS","layout","getLayout","getName","product","getProduct","manufacturer","getManufacturer","getOS","guesses","guess","getVersion","patterns","toStringPlatform","platform","this","labels","isMac","labelMap","setPlatform","_platform","toKeyboardShortcutLabel","insertHtmlIcon","enable_legacy_mode_flag","$.prop","constructor","$.mutable_state","$.bind_this","div","$$value","$.set","components","readiedCount","_components","onReady","$.get","$.each","node_1","$.derived_safe_equal","cubic_out","split_css_unit","fade","fly","opacity","target_opacity","od","x_value","x_unit","y_value","y_unit","u","quintOut","modalKey","setModalContext","setContext","getModalContext","getContext","describedby","labelledby","modalOpen","modalClose","$.transition","div_1","div_3","$$render","consequent","$$args","$$slots","totalPages","currentPage","pages","inDots","page","$.toggle_class","li_3","consequent_1","alternate","alternate_1","a_3","consequent_2","onSubmit","onClose","textarea","$.user_effect","$.template_effect","$.set_text","text_1","$.set_attribute","textarea_1","$.bind_value","button","text_2","button_1","text_3","sourceIcon","OutputLine","line","lastCheckedOutput","last_newline_index","IndentStringCache","baseIndentString","column","indent_level","Output","force_newline","eol","last_item","sweet_code","printable_token","output_length","eat_newlines","starts_with","ends_with","potentialEmptyLine","newlines","whitespace_before","baseASCIIidentifierStartChars","baseASCIIidentifierChars","nonASCIIidentifierStartChars","nonASCIIidentifierChars","unicodeEscapeOrCodePoint","identifierStart","identifierChars","merge_child_field","_mergeOpts","default_value","selection_list","allOptions","childFieldName","finalOpts","_normalizeOpts","convertedOpts","BaseOptions","require$$0","validPositionValues","raw_brace_style","brace_style_split","bs","regexp_has_sticky","InputScanner","input_string","pattern_match","starting_pattern","until_pattern","until_after","match_index","match_from","literal_string","testVal","inputscanner","parent_token","tokenstream","Pattern","input_scanner","WhitespacePattern","whitespace_chars","newline_chars","resulting_string","start_index","next_match","whitespacepattern","require$$1","require$$2","require$$3","TOKEN","Tokenizer","previous","open_token","open_stack","comments","previous_token","current_token","tokenizer","Directives","start_block_pattern","end_block_pattern","directives","directive_match","template_names","TemplatablePattern","peek1","templatablepattern","BaseTokenizer","BASETOKEN","acorn","require$$4","require$$5","in_array","what","arr","directives_core","number_pattern","digit","dot_pattern","positionable_operators","punct","punct_pattern","line_starters","reserved_words","reserved_word_pattern","in_html_comment","pattern_reader","templatable","sharp","comment","unescape_string","esc","in_char_class","xmlStr","rootTag","isCurlyRoot","isEndTag","isSingletonTag","escaped","input_scan","delimiter","allow_unescaped_newlines","start_sub","current_char","ltrim","generateMapFromStrings","reserved_word","reserved_array","special_words","OPERATOR_POSITION","OPERATOR_POSITION_BEFORE_OR_PRESERVE","MODE","remove_redundant_indentation","frame","split_linebreaks","idx","mode","is_expression","all_lines_start_with","lines","each_line_matches_indent","Beautifier","source_text","flags_base","next_indent_level","next_flags","preserve_statement_flags","keep_whitespace","comment_token","newline_restricted_tokens","force_linewrap","shouldPreserveOrForce","operatorLogicApplies","shouldPrintOperatorNewline","next_token","popped","next_mode","peek_back_two","peek_back_three","second_token","empty_braces","empty_anonymous_function","check_token","isGeneratorAsterisk","isUnary","space_before","space_after","in_ternary","isColon","isTernaryColon","isOtherColon","new_line_needed","javadoc","starless","lastIndent","lastIndentLength","beautifier","js_beautify","js_source_text","javascriptModule","space_around_selector_separator","lineBreak","allLineBreaks","whitespaceChar","whitespacePattern","block_comment_pattern","comment_pattern","endChars","allowAtLeastOneNewLine","newline_count","openParen","output_string","isAfterSpace","parenLevel","insideRule","insidePropertyValue","enteringConditionalGroup","insideNonNestedAtRule","insideScssMap","topCharacter","insideNonSemiColonValues","previous_ch","variable","variableOrRule","preserveQuoteSpace","space_needed","preserveAfterSpace","sweetCode","css_beautify","cssModule","templatable_reader","literal_regexp","opening_parentheses_count","closing_parentheses_count","next_char","tag_name","Printer","base_indent_string","non_breaking","raw_token","get_type_attribute","start_token","get_custom_beautifier_name","tag_check","typeAttribute","TagFrame","parser_token","TagStack","printer","new_frame","tag_list","stop_list","optionHtml","last_token","last_tag_token","TagOpenParserToken","_beautifier","script_indent_level","post","html_source","indentation","Child_options","child_options","white","peek_index","peek_token","tag_check_match","handlebar_starts","foundIfOnCurrentLine","do_end_expand","p_closers","p_parent_excludes","p_parent","style_html","htmlModule","html_beautify","js","get_beautify","beautify","boldIcon","italicIcon","underlineIcon","strikeIcon","bulletListIcon","orderedListIcon","horizontalRuleIcon","blockquoteIcon","unlinkIcon","undoIcon","redoIcon","removeFormatIcon","alignLeftIcon","alignCenterIcon","alignRightIcon","indentIcon","outdentIcon","fullScreenIcon","createButtonClass","icon","stateClass","checkState","ToolbarItemElement","__privateAdd","_button","__privateSet","__privateGet","tiptap","createTextAlignButtonClass","targetAlign","currentAlign","BoldButton","ItalicButton","UnderlineButton","StrikeButton","UnlinkButton","BulletListButton","OrderedListButton","BlockquoteButton","UndoButton","RedoButton","RemoveFormatButton","AlignLeftButton","AlignCenterButton","AlignRightButton","IndentButton","OutdentButton","HorizontalRuleButton","InsertHtmlButton","modal","mount","InsertHtmlModal","preprocessHTML","unmount","SourceButton","SourceModal","normalizeHTML","FullScreenButton","_styleElement","isFullScreen","EditorEl","extend","customElementConstructor","__publicField","toolbarItemStyle","extendToolbarItem","icon$a","targetNodeName","targetNodeTagName","viewDom","buttonRefs","buttons","getPanelItem","toolbarElement","showInBottom","$.proxy","updatePosition","tryUpdatePosition","viewRect","targetDom","resolvedPos","targetRect","toolbarWidth","toolbarHeight","targetWidth","topPosition","bottomPosition","bindRef","$.element","$$element","$$anchor","$.action","$$node","$$action_arg","LinkToolbar","_ui","Toolbar","linkData","$.state","urlInput","hasTextValue","onLinkTextChange","text_4","text_5","text_6","text_7","input_1","input_2","$.bind_select_value","text_8","text_9","onClickFunction","linkText","LinkModal","onClick","menu","tooltip","icon$9","icon$8","icon$7","icon$6","ImageToolbar","edit","icon$5","getSelectedImageElement","icon$4","icon$3","ev","onInsert","hoveredRows","hoveredCols","MAX_ROWS","MAX_COLS","DEFAULT_ROWS","DEFAULT_COLS","maxRows","$.derived","maxCols","handleCellHover","$.index","tableData","cellSpacing","borderWidth","widthInput","input_3","getCurrentTableData","tableNode","getTableNodePos","tablePropertiesModal","handleTableProperties","TablePropertiesPanel","cellData","horizontalAlign","verticalAlign","text_10","text_11","text_12","text_13","text_14","text_15","text_16","text_17","text_18","text_19","text_20","text_21","text_22","select_1","select_2","select_3","text_23","text_24","getCurrentCellData","getCellNodePos","cellPropertiesModal","handleCellProperties","CellPropertiesPanel","rowData","elementInput","toggleTableInsertPanel","isTableActive","canMergeCell","canSplitCell","tableRect","selectedCells","canSplitCellSelected","RECT_LOOP","handleInsert","handleClickOutside","showSubMenu","button_2","consequent_3","consequent_4","consequent_5","toggleDropdown","handleSelect","defaultBlocks","blocks","selectedBlock","dropdownElement","isInitialized","$.set_class","div_2","icon$2","onSelect","on_keydown","colors","toggleColorPanel","selectedColor","$.html","icon$1","defaultColor","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","construct","fun","thisValue","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","func","thisArg","addToSet","transformCaseFunc","lcElement","cleanArray","newObject","lookupGetter","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","purifyHostElement","ATTR_NAME","policyName","scriptUrl","_createHooksMap","createDOMPurify","window","DOMPurify","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Element","NodeFilter","NamedNodeMap","HTMLFormElement","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parentTagName","_forceRemove","_removeAttribute","_initDocument","leadingWhitespace","dirtyPayload","body","_createNodeIterator","_isClobbered","_isNode","_executeHooks","hook","_sanitizeElements","_isBasicCustomElement","childNodes","childCount","childClone","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","namespaceURI","attrValue","_sanitizeShadowDOM","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","entryPoint","hookFunction","purify","onChange","selectedBoilerplate","updateSelectedBoilerplate","boilerplates","selectedBoilerplateDescription","boilerplate","Modal","toolbar","File","Structure","Block","ForegroundColor","Boilerplate","PreviewLink","EditLink","DeleteImage","EditImage","nodeToTagMap","getHTMLTag","PathItem","StatusbarItemElement","statusbar","pasteMenuItemStyle","extendPasteMenuItem","PasteMenuItemElement","toggleAll","styleAttributes","toggleAllData","__1","dataAttributes","htmlDocument","styleAttr","ul","$$index","$.bind_checked","$.set_checked","ul_1","$$index_1","disabledAttributes","disabledData","toggleDetailPanel","modalComponent","unmountModal","HtmlModal","maxwidth","maxheight","targetDomNode","EmbedModal","AsText","encoder","pasteMenu","Html","Embed","EmbedInline","h1Icon","h2Icon","h3Icon","h4Icon","h5Icon","h6Icon","icons","QuickActionItemElement","quickAction","systemItems","lowerName","elementName","elementConstructor","toolbarRef","groupSides","updateToolbarVisibility","isShow","isNewLine","toCoords","fromCoords","_toolbar","ToolbarUI","Statusbar","_statusbar","StatusbarUI","clipboardIcon","on_click","isMenuOpen","onPaste","setIsPasting","isInTransaction","menuElement","isAvailableMap","byScroll","newTop","newLeft","updateNodePosition","resizeObserver","tmpTop","applyName","htmlText","availablePromiseMap","cb","maxPriority","availableRes","closeMenuByClickOutside","node_2","PasteMenu","_pasteMenu","_isPasting","PasteMenuUI","isPasting","variant","keyword","availableButtons","alias","availableButtonsLength","selectedButtonIndex","quickActionRef","updateVisibility","QuickAction","_quickActionMenu","QuickActionUI","structureData","idInput","StructureMode","_editor","_onUpdateCallback","_style","_clickCallback","_modal","_selector","StructureModal","newAttrs","attrNameMap","domNodes","insertStylesheets","stylesheets","stylesheet","styleSheet","prosemirrorCss","DEFAULT_HEIGHT","MIN_HEIGHT","Editor","_Editor_instances","_onPasteCallback","_containerEl","_textarea","_editorContainerEl","_quickAction","_structureMode","editorShadow","editorCss","initBarMount","_container","shadow","toolbarMount","contentCss","editorMount","pasteMenuContainer","TiptapEditor","statusbarMount","pasteMenuMount","quickActionMount","__privateMethod","initResizeHandle_fn","structureMode","resizeHandle","startHeight","onMouseDown","onMouseMove","onMouseUp","deltaY","_EditorManager","_eventHandlers","editorCreateOptions","_EditorManager_static","emit_fn","__","editorOptions","TiptapCore","Component","EditorManager"],"mappings":"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","x_google_ignoreList":[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,39,41,45,48,49,51,60,66,67,68,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,190,225]}