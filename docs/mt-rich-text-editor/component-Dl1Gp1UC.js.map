{"version":3,"file":"component-Dl1Gp1UC.js","sources":["../../../node_modules/svelte/src/version.js","../../../node_modules/svelte/src/internal/disclose-version.js","../../../node_modules/svelte/src/constants.js","../../../node_modules/svelte/src/utils.js","../../../node_modules/esm-env/dev-fallback.js","../../../node_modules/svelte/src/internal/shared/utils.js","../../../node_modules/svelte/src/internal/client/constants.js","../../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../../node_modules/svelte/src/internal/client/errors.js","../../../node_modules/svelte/src/internal/flags/index.js","../../../node_modules/svelte/src/internal/client/dev/tracing.js","../../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../../node_modules/svelte/src/internal/client/warnings.js","../../../node_modules/svelte/src/internal/client/dom/hydration.js","../../../node_modules/svelte/src/internal/client/dev/ownership.js","../../../node_modules/svelte/src/internal/client/proxy.js","../../../node_modules/svelte/src/internal/client/dev/equality.js","../../../node_modules/svelte/src/internal/client/dom/operations.js","../../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../../node_modules/svelte/src/internal/client/dom/task.js","../../../node_modules/svelte/src/internal/shared/errors.js","../../../node_modules/svelte/src/internal/client/runtime.js","../../../node_modules/svelte/src/internal/client/dev/css.js","../../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../../node_modules/svelte/src/internal/client/dom/template.js","../../../node_modules/svelte/src/internal/client/render.js","../../../node_modules/svelte/src/internal/client/dom/css.js","../../../node_modules/svelte/src/internal/client/reactivity/store.js","../../../node_modules/svelte/src/internal/client/reactivity/props.js","../../../node_modules/svelte/src/legacy/legacy-client.js","../../../node_modules/svelte/src/internal/client/dom/elements/custom-element.js","../src/util/html.ts","../src/tooltip/Tooltip.svelte","../src/tooltip/index.ts","../src/ui/item/element.ts","../src/toolbar/item/element.css?raw","../src/toolbar/item/element.ts","../src/statusbar/item/element.ts","../src/paste-menu/item/element.css?raw","../src/paste-menu/item/element.ts","../src/quick-action/item/element.css?raw","../src/quick-action/item/element.ts"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '5.15.0';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'inert',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","const node_env = globalThis.process?.env?.NODE_ENV;\nif (!node_env) {\n\tconsole.warn('If bundling, conditions should include development or production. If not bundling, conditions or NODE_ENV should include development or production. See https://www.npmjs.com/package/esm-env for tips on setting conditions in popular bundlers and runtimes.');\n}\n\nexport default node_env && !node_env.toLowerCase().includes('prod');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","/** @import { Derived, Reaction, Signal, Value } from '#client' */\nimport { UNINITIALIZED } from '../../../constants.js';\nimport { snapshot } from '../../shared/clone.js';\nimport { define_property } from '../../shared/utils.js';\nimport { DERIVED, STATE_SYMBOL } from '../constants.js';\nimport { effect_tracking } from '../reactivity/effects.js';\nimport { active_reaction, captured_signals, set_captured_signals, untrack } from '../runtime.js';\n\n/** @type { any } */\nexport let tracing_expressions = null;\n\n/**\n * @param { Value } signal\n * @param { { read: Error[] } } [entry]\n */\nfunction log_entry(signal, entry) {\n\tconst debug = signal.debug;\n\tconst value = signal.v;\n\n\tif (value === UNINITIALIZED) {\n\t\treturn;\n\t}\n\n\tif (debug) {\n\t\tvar previous_captured_signals = captured_signals;\n\t\tvar captured = new Set();\n\t\tset_captured_signals(captured);\n\t\ttry {\n\t\t\tuntrack(() => {\n\t\t\t\tdebug();\n\t\t\t});\n\t\t} finally {\n\t\t\tset_captured_signals(previous_captured_signals);\n\t\t}\n\t\tif (captured.size > 0) {\n\t\t\tfor (const dep of captured) {\n\t\t\t\tlog_entry(dep);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst type = (signal.f & DERIVED) !== 0 ? '$derived' : '$state';\n\tconst current_reaction = /** @type {Reaction} */ (active_reaction);\n\tconst status =\n\t\tsignal.version > current_reaction.version || current_reaction.version === 0 ? 'dirty' : 'clean';\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupCollapsed(\n\t\t`%c${type}`,\n\t\tstatus !== 'clean'\n\t\t\t? 'color: CornflowerBlue; font-weight: bold'\n\t\t\t: 'color: grey; font-weight: bold',\n\t\ttypeof value === 'object' && STATE_SYMBOL in value ? snapshot(value, true) : value\n\t);\n\n\tif (type === '$derived') {\n\t\tconst deps = new Set(/** @type {Derived} */ (signal).deps);\n\t\tfor (const dep of deps) {\n\t\t\tlog_entry(dep);\n\t\t}\n\t}\n\n\tif (signal.created) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.created);\n\t}\n\n\tif (signal.updated) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.updated);\n\t}\n\n\tconst read = entry?.read;\n\n\tif (read && read.length > 0) {\n\t\tfor (var stack of read) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(stack);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupEnd();\n}\n\n/**\n * @template T\n * @param {() => string} label\n * @param {() => T} fn\n */\nexport function trace(label, fn) {\n\tvar previously_tracing_expressions = tracing_expressions;\n\ttry {\n\t\ttracing_expressions = { entries: new Map(), reaction: active_reaction };\n\n\t\tvar start = performance.now();\n\t\tvar value = fn();\n\t\tvar time = (performance.now() - start).toFixed(2);\n\n\t\tif (!effect_tracking()) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cran outside of an effect (${time}ms)`, 'color: grey');\n\t\t} else if (tracing_expressions.entries.size === 0) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cno reactive dependencies (${time}ms)`, 'color: grey');\n\t\t} else {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.group(`${label()} %c(${time}ms)`, 'color: grey');\n\n\t\t\tvar entries = tracing_expressions.entries;\n\n\t\t\ttracing_expressions = null;\n\n\t\t\tfor (const [signal, entry] of entries) {\n\t\t\t\tlog_entry(signal, entry);\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\tif (previously_tracing_expressions !== null) {\n\t\t\tfor (const [signal, entry] of tracing_expressions.entries) {\n\t\t\t\tvar prev_entry = previously_tracing_expressions.get(signal);\n\n\t\t\t\tif (prev_entry === undefined) {\n\t\t\t\t\tpreviously_tracing_expressions.set(signal, entry);\n\t\t\t\t} else {\n\t\t\t\t\tprev_entry.read.push(...entry.read);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} finally {\n\t\ttracing_expressions = previously_tracing_expressions;\n\t}\n}\n\n/**\n * @param {string} label\n */\nexport function get_stack(label) {\n\tlet error = Error();\n\tconst stack = error.stack;\n\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = ['\\n'];\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tif (line === 'Error') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (line.includes('validate_each_keys')) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\n\t\tif (new_lines.length === 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\n\t\tdefine_property(error, 'name', {\n\t\t\t// 'Error' suffix is required for stack traces to be rendered properly\n\t\t\tvalue: `${label}Error`\n\t\t});\n\t}\n\treturn error;\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tcomponent_context,\n\tactive_reaction,\n\tnew_deps,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\tversion: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tsource.v = value;\n\t\tsource.version = increment_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (new_deps !== null && new_deps.includes(source)) {\n\t\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\t\tschedule_effect(active_effect);\n\t\t\t} else {\n\t\t\t\tif (untracked_writes === null) {\n\t\t\t\t\tset_untracked_writes([source]);\n\t\t\t\t} else {\n\t\t\t\t\tuntracked_writes.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : \"The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value\"}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : \"Hydration failed because the initial UI does not match what was rendered on the server\"}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : \"Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\"}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { ProxyMetadata } from '#client' */\n/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL_METADATA } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function } from '../runtime.js';\nimport { get_prototype_of } from '../../shared/utils.js';\nimport * as w from '../warnings.js';\nimport { FILENAME } from '../../../constants.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nexport function get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.end == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any} owner\n * @param {boolean} [global]\n * @param {boolean} [skip_warning]\n */\nexport function add_owner(object, owner, global = false, skip_warning = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL_METADATA];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner[FILENAME] !== component[FILENAME] && !skip_warning) {\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n * @param {boolean} [skip_warning]\n */\nexport function add_owner_effect(get_object, Component, skip_warning = false) {\n\tuser_pre_effect(() => {\n\t\tadd_owner(get_object(), Component, false, skip_warning);\n\t});\n}\n\n/**\n * @param {ProxyMetadata | null} from\n * @param {ProxyMetadata} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function} owner\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL_METADATA]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif ('owners' in metadata && metadata.owners != null) {\n\t\t\tmetadata.owners.add(owner);\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\t\tif (ADD_OWNER in object && object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\nlet skip = false;\n\n/**\n * @param {() => any} fn\n */\nexport function skip_ownership_validation(fn) {\n\tskip = true;\n\tfn();\n\tskip = false;\n}\n\n/**\n * @param {ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tif (skip) return;\n\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original[FILENAME] !== component[FILENAME]) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\t}\n}\n","/** @import { ProxyMetadata, ProxyStateObject, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, component_context, active_effect } from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t/** @type {Error | null} */\n\tvar stack = null;\n\tif (DEV && tracing_mode_flag) {\n\t\tstack = get_stack('CreatedAt');\n\t}\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value, stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined, stack);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","import * as w from '../warnings.js';\nimport { get_proxied_value } from '../proxy.js';\n\nexport function init_array_prototype_warnings() {\n\tconst array_prototype = Array.prototype;\n\t// The REPL ends up here over and over, and this prevents it from adding more and more patches\n\t// of the same kind to the prototype, which would slow down everything over time.\n\t// @ts-expect-error\n\tconst cleanup = Array.__svelte_cleanup;\n\tif (cleanup) {\n\t\tcleanup();\n\t}\n\n\tconst { indexOf, lastIndexOf, includes } = array_prototype;\n\n\tarray_prototype.indexOf = function (item, from_index) {\n\t\tconst index = indexOf.call(this, item, from_index);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = from_index ?? 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.indexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.lastIndexOf = function (item, from_index) {\n\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\tconst index = lastIndexOf.call(this, item, from_index ?? this.length - 1);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = 0; i <= (from_index ?? this.length - 1); i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.lastIndexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.includes = function (item, from_index) {\n\t\tconst has = includes.call(this, item, from_index);\n\n\t\tif (!has) {\n\t\t\tfor (let i = 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.includes(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn has;\n\t};\n\n\t// @ts-expect-error\n\tArray.__svelte_cleanup = () => {\n\t\tarray_prototype.indexOf = indexOf;\n\t\tarray_prototype.lastIndexOf = lastIndexOf;\n\t\tarray_prototype.includes = includes;\n\t};\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function strict_equals(a, b, equal = true) {\n\t// try-catch needed because this tries to read properties of `a` and `b`,\n\t// which could be disallowed for example in a secure context\n\ttry {\n\t\tif ((a === b) !== (get_proxied_value(a) === get_proxied_value(b))) {\n\t\t\tw.state_proxy_equality_mismatch(equal ? '===' : '!==');\n\t\t}\n\t} catch {}\n\n\treturn (a === b) === equal;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function equals(a, b, equal = true) {\n\tif ((a == b) !== (get_proxied_value(a) == get_proxied_value(b))) {\n\t\tw.state_proxy_equality_mismatch(equal ? '==' : '!=');\n\t}\n\n\treturn (a == b) === equal;\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_version,\n\tset_active_effect,\n\tcomponent_context\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\n\tif (active_effect === null) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tchildren: null,\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\tif (parent_derived !== null) {\n\t\t(parent_derived.children ??= []).push(signal);\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tvar children = derived.children;\n\n\tif (children !== null) {\n\t\tderived.children = null;\n\n\t\tfor (var i = 0; i < children.length; i += 1) {\n\t\t\tvar child = children[i];\n\t\t\tif ((child.f & DERIVED) !== 0) {\n\t\t\t\tdestroy_derived(/** @type {Derived} */ (child));\n\t\t\t} else {\n\t\t\t\tdestroy_effect(/** @type {Effect} */ (child));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.version = increment_version();\n\t}\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived(derived) {\n\tdestroy_derived_children(derived);\n\tremove_reactions(derived, 0);\n\tset_signal_status(derived, DESTROYED);\n\n\tderived.v = derived.children = derived.deps = derived.ctx = derived.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcomponent_context,\n\tactive_effect,\n\tactive_reaction,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { destroy_derived } from './deriveds.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & EFFECT_HAS_DERIVED) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.children ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null) {\n\t\treturn false;\n\t}\n\n\t// If it's skipped, that's because we're inside an unowned\n\t// that is not being tracked by another reaction\n\treturn !skip_reaction;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn block(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_effect_deriveds(signal) {\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tdestroy_effect_deriveds(effect);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\tupdate_effect(effect);\n\t}\n\n\t// Ensure we toggle the flag after possibly updating the effect so that\n\t// each block logic can correctly operate on inert items\n\teffect.f ^= INERT;\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nexport const request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\tdestroy_effect_deriveds,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { internal_set, set, source } from './reactivity/sources.js';\nimport { destroy_derived, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/** @type {number} Used by sources and deriveds for handling updates to unowned deriveds it starts from 1 to differentiate between a created effect and a run one for tracing */\nlet current_version = 1;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_version() {\n\treturn ++current_version;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\n\t\t\tif ((flags & DISCONNECTED) !== 0) {\n\t\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t(dependencies[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !skip_reaction)\n\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t// is linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\tif (\n\t\t\t\t\tis_unowned &&\n\t\t\t\t\tactive_effect !== null &&\n\t\t\t\t\t!skip_reaction &&\n\t\t\t\t\t!dependency?.reactions?.includes(reaction)\n\t\t\t\t) {\n\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\tif (dependency.version > reaction.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction = !is_flushing_effect && (flags & UNOWNED) !== 0;\n\tderived_sources = null;\n\tcomponent_context = reaction.ctx;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tcomponent_context = previous_component_context;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\t\tdestroy_effect_deriveds(effect);\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.version = current_version;\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\n\t\t// If the signal is accessing the same dependencies in the same\n\t\t// order as it did last time, increment `skipped_deps`\n\t\t// rather than updating `new_deps`, which creates GC cost\n\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\tskipped_deps++;\n\t\t} else if (new_deps === null) {\n\t\t\tnew_deps = [signal];\n\t\t} else {\n\t\t\tnew_deps.push(signal);\n\t\t}\n\n\t\tif (\n\t\t\tuntracked_writes !== null &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tuntracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\tschedule_effect(active_effect);\n\t\t}\n\t} else if (is_derived && /** @type {Derived} */ (signal).deps === null) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\t\tvar target = derived;\n\n\t\twhile (parent !== null) {\n\t\t\t// Attach the derived to the nearest parent effect, if there are deriveds\n\t\t\t// in between then we also need to attach them too\n\t\t\tif ((parent.f & DERIVED) !== 0) {\n\t\t\t\tvar parent_derived = /** @type {Derived} */ (parent);\n\n\t\t\t\ttarget = parent_derived;\n\t\t\t\tparent = parent_derived.parent;\n\t\t\t} else {\n\t\t\t\tvar parent_effect = /** @type {Effect} */ (parent);\n\n\t\t\t\tif (!parent_effect.deriveds?.includes(target)) {\n\t\t\t\t\t(parent_effect.deriveds ??= []).push(target);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = active_reaction;\n\ttry {\n\t\tactive_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tactive_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(signal, d = 1) {\n\tvar value = get(signal);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(signal, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(signal, d = 1) {\n\tvar value = get(signal);\n\n\t// @ts-expect-error\n\treturn set(signal, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","/** @type {Map<String, Set<HTMLStyleElement>>} */\nvar all_styles = new Map();\n\n/**\n * @param {String} hash\n * @param {HTMLStyleElement} style\n */\nexport function register_style(hash, style) {\n\tvar styles = all_styles.get(hash);\n\n\tif (!styles) {\n\t\tstyles = new Set();\n\t\tall_styles.set(hash, styles);\n\t}\n\n\tstyles.add(style);\n}\n\n/**\n * @param {String} hash\n */\nexport function cleanup_styles(hash) {\n\tvar styles = all_styles.get(hash);\n\tif (!styles) return;\n\n\tfor (const style of styles) {\n\t\tstyle.remove();\n\t}\n\n\tall_styles.delete(hash);\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, component_context, active_effect } from './runtime.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","import { DEV } from 'esm-env';\nimport { queue_micro_task } from './task.js';\nimport { register_style } from '../dev/css.js';\n\n/**\n * @param {Node} anchor\n * @param {{ hash: string, code: string }} css\n */\nexport function append_styles(anchor, css) {\n\t// Use `queue_micro_task` to ensure `anchor` is in the DOM, otherwise getRootNode() will yield wrong results\n\tqueue_micro_task(() => {\n\t\tvar root = anchor.getRootNode();\n\n\t\tvar target = /** @type {ShadowRoot} */ (root).host\n\t\t\t? /** @type {ShadowRoot} */ (root)\n\t\t\t: /** @type {Document} */ (root).head ?? /** @type {Document} */ (root.ownerDocument).head;\n\n\t\t// Always querying the DOM is roughly the same perf as additionally checking for presence in a map first assuming\n\t\t// that you'll get cache hits half of the time, so we just always query the dom for simplicity and code savings.\n\t\tif (!target.querySelector('#' + css.hash)) {\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.id = css.hash;\n\t\t\tstyle.textContent = css.code;\n\n\t\t\ttarget.appendChild(style);\n\n\t\t\tif (DEV) {\n\t\t\t\tregister_style(css.hash, style);\n\t\t\t}\n\t\t}\n\t});\n}\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\tif (entry.store !== store) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {StoreReferencesContainer}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tteardown(() => {\n\t\tfor (var store_name in stores) {\n\t\t\tconst ref = stores[store_name];\n\t\t\tref.unsubscribe();\n\t\t}\n\t});\n\n\treturn stores;\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport {\n\tactive_effect,\n\tget,\n\tcaptured_signals,\n\tset_active_effect,\n\tuntrack,\n\tupdate\n} from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport {\n\tBRANCH_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tLEGACY_PROPS,\n\tROOT_EFFECT,\n\tSTATE_SYMBOL\n} from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nfunction with_parent_branch(fn) {\n\tvar effect = active_effect;\n\tvar previous_effect = active_effect;\n\n\twhile (effect !== null && (effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n\t\teffect = effect.parent;\n\t}\n\ttry {\n\t\tset_active_effect(effect);\n\t\treturn fn();\n\t} finally {\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\tget_descriptor(props, key)?.set ??\n\t\t(is_entry_props && bindable && key in props ? (v) => (props[key] = v) : undefined);\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = with_parent_branch(() =>\n\t\t\t(immutable ? derived : derived_safe_equal)(() => /** @type {V} */ (props[key]))\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = with_parent_branch(() =>\n\t\tderived(() => {\n\t\t\tvar parent_value = getter();\n\t\t\tvar child_value = get(inner_current_value);\n\n\t\t\tif (from_child) {\n\t\t\t\tfrom_child = false;\n\t\t\t\twas_from_child = true;\n\t\t\t\treturn child_value;\n\t\t\t}\n\n\t\t\twas_from_child = false;\n\t\t\treturn (inner_current_value.v = parent_value);\n\t\t})\n\t);\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, LEGACY_PROPS, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport {\n\tactive_effect,\n\tcomponent_context,\n\tdev_current_component_function,\n\tflush_sync,\n\tget,\n\tset_signal_status\n} from '../internal/client/runtime.js';\nimport { lifecycle_outside_component } from '../internal/shared/errors.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Support using the component as both a class and function during the transition period\n * @typedef  {{new (o: ComponentConstructorOptions): SvelteComponent;(...args: Parameters<Component<Record<string, any>>>): ReturnType<Component<Record<string, any>, Record<string, any>>>;}} LegacyComponentType\n */\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is incremented on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\t// Necessary to not throw \"invalid binding\" validation errors on the component side\n\t\t\t\t\tif (prop === LEGACY_PROPS) return true;\n\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tanchor: options.anchor,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flush_sync for custom element wrappers or if the user doesn't want it\n\t\tif (!options?.props?.$$host || options.sync === false) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n","import { createClassComponent } from '../../../../legacy/legacy-client.js';\nimport { destroy_effect, effect_root, render_effect } from '../../reactivity/effects.js';\nimport { append } from '../template.js';\nimport { define_property, get_descriptor, object_keys } from '../../../shared/utils.js';\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n/** @type {any} */\nlet SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** @type {any} The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** @type {Record<string, any>} Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, EventListenerOrEventListenerObject[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<EventListenerOrEventListenerObject, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\t\t/** @type {any} The managed render effect for reflecting attributes */\n\t\t$$me;\n\n\t\t/**\n\t\t * @param {*} $$componentCtor\n\t\t * @param {*} $$slots\n\t\t * @param {*} use_shadow_dom\n\t\t */\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/** @param {string} name */\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {Element} anchor\n\t\t\t\t\t */\n\t\t\t\t\treturn (anchor) => {\n\t\t\t\t\t\tconst slot = document.createElement('slot');\n\t\t\t\t\t\tif (name !== 'default') slot.name = name;\n\n\t\t\t\t\t\tappend(anchor, slot);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\tif (name === 'default' && !this.$$d.children) {\n\t\t\t\t\t\t\tthis.$$d.children = create_slot(name);\n\t\t\t\t\t\t\t$$slots.default = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$$slots[name] = create_slot(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = createClassComponent({\n\t\t\t\t\tcomponent: this.$$ctor,\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$host: this\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tthis.$$me = effect_root(() => {\n\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\t\tfor (const key of object_keys(this.$$c)) {\n\t\t\t\t\t\t\tif (!this.$$p_d[key]?.reflect) continue;\n\t\t\t\t\t\t\tthis.$$d[key] = this.$$c[key];\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$$r = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\n\t\t/**\n\t\t * @param {string} attr\n\t\t * @param {string} _oldValue\n\t\t * @param {string} newValue\n\t\t */\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$me();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} attribute_name\n\t\t */\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tobject_keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @param {HTMLElement} element\n */\nfunction get_custom_elements_slots(element) {\n\t/** @type {Record<string, true>} */\n\tconst result = {};\n\telement.childNodes.forEach((node) => {\n\t\tresult[/** @type {Element} node */ (node).slot || 'default'] = true;\n\t});\n\treturn result;\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {any} Component  A Svelte component function\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} exports  Explicitly exported values, other than props\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\texports,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn object_keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tobject_keys(props_definition).forEach((prop) => {\n\t\tdefine_property(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tvar component = this.$$c;\n\n\t\t\t\tif (component) {\n\t\t\t\t\t// // If the instance has an accessor, use that instead\n\t\t\t\t\tvar setter = get_descriptor(component, prop)?.get;\n\n\t\t\t\t\tif (setter) {\n\t\t\t\t\t\tcomponent[prop] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomponent.$set({ [prop]: value });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\texports.forEach((property) => {\n\t\tdefine_property(Class.prototype, property, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[property];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ Class;\n\treturn Class;\n}\n","export const preprocessHTML = (html: string): string => {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(`<body>${html}</body>`, \"text/html\");\n  const body = doc.body;\n\n  body.querySelectorAll(\"a\").forEach((a) => {\n    if (a.querySelector(\"div\")) {\n      a.dataset.mtRichTextEditorBlock = \"true\";\n    }\n  });\n\n  body.querySelectorAll(\"script\").forEach((script) => {\n    const element = document.createElement(\"mt-rich-text-editor-script\");\n    element.textContent = script.textContent;\n    Array.from(script.attributes).forEach((attr) => {\n      element.setAttribute(attr.name, attr.value);\n    });\n    script.parentNode?.replaceChild(element, script);\n  });\n\n  body.querySelectorAll(\"div, blockquote, main, article\").forEach((div) => {\n    const hasDirectTextNode = Array.from(div.childNodes).some(\n      (node) =>\n        node instanceof HTMLImageElement ||\n        (node.nodeType === Node.TEXT_NODE && node.textContent?.trim())\n    );\n\n    if (hasDirectTextNode) {\n      const textBlock = document.createElement(\"mt-text-block\");\n      let content = \"\";\n\n      const nodesToProcess = Array.from(div.childNodes).filter(\n        (node) =>\n          node instanceof HTMLImageElement ||\n          node.nodeType === Node.TEXT_NODE ||\n          (node.nodeType === Node.ELEMENT_NODE && node.nodeName === \"BR\")\n      );\n\n      const encoder = document.createElement(\"div\");\n      nodesToProcess.forEach((node) => {\n        if (node.nodeType === Node.TEXT_NODE) {\n          encoder.textContent = node.textContent;\n          content += encoder.innerHTML;\n        } else if (node.nodeName === \"BR\") {\n          content += \"<br>\";\n        } else if (node instanceof HTMLImageElement) {\n          content += node.outerHTML;\n        }\n      });\n\n      textBlock.innerHTML = content;\n\n      nodesToProcess.forEach((node) => node.remove());\n\n      div.appendChild(textBlock);\n    }\n  });\n\n  // body.querySelectorAll(\"td, th\").forEach((td) => {\n  //   if (td.childNodes.length === 0) {\n  //     td.appendChild(document.createElement(\"mt-text-block\"));\n  //   }\n  // });\n\n  return body.innerHTML;\n};\n\nexport const normalizeHTML = (html: string): string => {\n  if (/^<p[^>]*><\\/p>$/i.test(html)) {\n    return \"\";\n  }\n\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, \"text/html\");\n\n  doc.body.querySelectorAll(\"mt-text-block\").forEach((textBlock) => {\n    const parent = textBlock.parentNode;\n    if (!parent) return;\n\n    while (textBlock.firstChild) {\n      parent.insertBefore(textBlock.firstChild, textBlock);\n    }\n    textBlock.remove();\n  });\n\n  doc.body.querySelectorAll(`[textalign=\"\"]`).forEach((element) => {\n    element.removeAttribute(\"textalign\");\n  });\n\n  doc.body.querySelectorAll(`[data-mt-indent]`).forEach((element) => {\n    element.removeAttribute(\"data-mt-indent\");\n  });\n\n  doc.body\n    .querySelectorAll<HTMLElement>(`[data-mt-rich-text-editor-event-attributes]`)\n    .forEach((element) => {\n      const eventAttrs = JSON.parse(\n        element.dataset.mtRichTextEditorEventAttributes ?? \"{}\"\n      ) as Record<string, string>;\n      Object.entries(eventAttrs).forEach(([key, value]) => {\n        element.setAttribute(key, value);\n      });\n      element.removeAttribute(\"data-mt-rich-text-editor-event-attributes\");\n    });\n\n  doc.body\n    .querySelectorAll<HTMLElement>(`[data-mt-rich-text-editor-content]`)\n    .forEach((element) => {\n      element.innerHTML = element.getAttribute(\"data-mt-rich-text-editor-content\") ?? \"\";\n      element.removeAttribute(\"data-mt-rich-text-editor-content\");\n    });\n\n  const res = doc.body.innerHTML;\n  if (/^<p[^>]*><\\/p>$/i.test(res)) {\n    return \"\";\n  }\n  return res;\n};\n","<script lang=\"ts\">\n  const { title }: { title: string } = $props();\n</script>\n\n<div id=\"mt-rich-text-editor-tooltip\" class=\"mt-rich-text-editor-tooltip\">\n  {title}\n</div>\n\n<style>\n  div {\n    position: absolute;\n    top: 110%;\n    left: 50%;\n    transform: translateX(-50%);\n    color: white;\n    background: black;\n    padding: 4px;\n    border-radius: 5px;\n    width: max-content;\n    max-width: 200px;\n    white-space: nowrap;\n    font-size: 90%;\n    z-index: 1;\n  }\n</style>\n","import { mount, unmount } from \"svelte\";\nimport Tooltip from \"./Tooltip.svelte\";\n\nconst DEFAULT_SHOW_DELAY = 1000; // time before tooltip appears in undisplayed state (ms)\nconst ACTIVE_SHOW_DELAY = 10; // time before tooltip appears once displayed (ms)\nconst RESET_DELAY = 1000; // time until display state is reset after mouse release (ms)\n\nlet showCount = 0;\nlet showDelay = DEFAULT_SHOW_DELAY;\nlet resetTimerId: ReturnType<typeof setTimeout> | undefined;\n\nexport const tooltip = (node: HTMLElement, title?: string) => {\n  let tooltipMount: ReturnType<typeof mount> | undefined;\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  if (title) {\n    node.title = title;\n  } else {\n    title = node.title;\n  }\n  if (!title) {\n    return;\n  }\n  node.addEventListener(\"mouseenter\", () => {\n    clearTimeout(timerId);\n    timerId = setTimeout(() => {\n      if (tooltipMount) {\n        return;\n      }\n      node.title = \"\";\n      node.setAttribute(\"aria-describedby\", \"mt-rich-text-editor-tooltip\");\n      tooltipMount = mount(Tooltip, {\n        target: node,\n        props: {\n          title,\n        },\n      });\n      showCount++;\n      showDelay = ACTIVE_SHOW_DELAY;\n    }, showDelay);\n  });\n  node.addEventListener(\"mouseleave\", () => {\n    clearTimeout(timerId);\n\n    if (!tooltipMount) {\n      return;\n    }\n    node.title = title;\n    node.removeAttribute(\"aria-describedby\");\n    unmount(tooltipMount);\n    tooltipMount = undefined;\n    showCount--;\n\n    clearTimeout(resetTimerId);\n    resetTimerId = setTimeout(() => {\n      if (showCount === 0) {\n        showDelay = DEFAULT_SHOW_DELAY;\n      }\n    }, RESET_DELAY);\n  });\n};\n","import type { Editor as TiptapEditor } from \"@tiptap/core\";\nimport type { Editor } from \"../../editor\";\n\nexport class PanelItemElement<\n  Options extends Record<string, any> = Record<string, any>,\n> extends HTMLElement {\n  get shadowRoot(): ShadowRoot {\n    return super.shadowRoot!;\n  }\n\n  editor: Editor | undefined;\n  options: Options = {} as Options;\n  get tiptap(): TiptapEditor | undefined {\n    return this.editor?.tiptap;\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n  }\n\n  onEditorInit(editor: Editor, options: Options) {\n    this.editor = editor;\n    this.options = options;\n  }\n\n  onEditorUpdate() {}\n}\n","export default \":host > button {\\n  width: 34px;\\n  height: 34px;\\n  background: none;\\n  border: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer;\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 4px;\\n\\n  & svg {\\n    width: 24px;\\n    height: 24px;\\n  }\\n\\n  &:not(.is-disabled):hover,\\n  &.is-active {\\n    background: #dee0e2;\\n  }\\n}\\n\\n:host > button.tooltip-disabled .mt-rich-text-editor-tooltip {\\n  display: none;\\n}\\n\\n:host > button:disabled *:not(.mt-rich-text-editor-tooltip) {\\n  opacity: 0.5;\\n  cursor: default;\\n}\\n\"","import { tooltip } from \"../../tooltip\";\nimport { PanelItemElement } from \"../../ui/item/element\";\nimport css from \"./element.css?raw\";\n\nconst toolbarItemStyle = document.createElement(\"style\");\ntoolbarItemStyle.textContent = css;\n\n/**\n * Base class for toolbar item\n *\n * @example\n *\n *  customElements.define(\n *    \"mt-rich-text-editor-toolbar-item-myitem\",\n *    class extends ToolbarItemElement {\n *      constructor() {\n *        super();\n *        const button = document.createElement(\"button\");\n *        button.title = \"My Item\";\n *        button.textContent = \"My Item\";\n *        this.shadowRoot.appendChild(button);\n *      }\n *\n *      connectedCallback() {\n *        super.connectedCallback();\n *        this.addEventListener(\"click\", () => {\n *          this.tiptap?.commands.insertContent(\"<p>Hello</p>\");\n *        });\n *      }\n *    }\n *  );\n */\nexport class ToolbarItemElement<\n  Options extends Record<string, any> = Record<string, any>,\n> extends PanelItemElement<Options> {\n  constructor() {\n    super();\n    this.shadowRoot.appendChild(toolbarItemStyle.cloneNode(true));\n  }\n\n  connectedCallback() {\n    const button = this.shadowRoot.querySelector(\"button\");\n    if (button) {\n      tooltip(button);\n    }\n  }\n}\n","import { PanelItemElement } from \"../../ui/item/element\";\n\n/**\n * Base class for statusbar item\n *\n * @example\n *\n *  customElements.define(\n *    \"mt-rich-text-editor-statusbar-item-myitem\",\n *    class extends StatusbarItemElement {\n *      constructor() {\n *        super();\n *        const button = document.createElement(\"button\");\n *        button.textContent = \"My Item\";\n *        this.shadowRoot.appendChild(button);\n *      }\n *\n *      onEditorUpdate() {\n *        const tiptap = this.tiptap;\n *        // update the item\n *      }\n *    }\n *  );\n */\nexport class StatusbarItemElement<\n  Options extends Record<string, any> = Record<string, any>,\n> extends PanelItemElement<Options> {}\n","export default \":host > button {\\n  background: none;\\n  border: none;\\n  padding: 0;\\n  margin: 0;\\n  display: flex;\\n  align-items: center;\\n  font-size: initial;\\n  padding: 5px 10px 5px 30px;\\n  width: 100%;\\n\\n  & svg {\\n    width: 12px;\\n    height: 12px;\\n  }\\n\\n  &:not(.is-disabled):hover {\\n    background: #dee0e2;\\n  }\\n}\\n\"","import { PanelItemElement } from \"../../ui/item/element\";\nimport { preprocessHTML } from \"../../util/html\";\nimport css from \"./element.css?raw\";\n\nconst pasteMenuItemStyle = document.createElement(\"style\");\npasteMenuItemStyle.textContent = css;\n\nexport const PasteMenuItemPriority = {\n  Default: 1,\n  High: 2,\n} as const;\nexport type PasteMenuItemPriorityValue =\n  (typeof PasteMenuItemPriority)[keyof typeof PasteMenuItemPriority];\n\n/**\n * Base class for paste menu item\n *\n * @example\n *\n *  customElements.define(\n *    \"mt-rich-text-editor-paste-menu-item-myitem\",\n *    class extends PasteMenuItemElement {\n *      constructor() {\n *        super();\n *        const button = document.createElement(\"button\");\n *        button.textContent = \"My Paste Item\";\n *        this.shadowRoot.appendChild(button);\n *      }\n *\n *      isEditorItemAvailable() {\n *        return /^https?:\\/\\//.test(this.content?.plainText);\n *      }\n *\n *      async onEditorPaste() {\n *        this.insertContent(this.content?.plainText);\n *      }\n *\n *      connectedCallback() {\n *        this.addEventListener('click', () => {\n *          this.onEditorPaste();\n *        });\n *      }\n *    }\n *  );\n */\nexport abstract class PasteMenuItemElement<\n  Options extends Record<string, any> = Record<string, any>,\n> extends PanelItemElement<Options> {\n  static Priority = PasteMenuItemPriority;\n  public content?:\n    | {\n        plainText: string;\n        htmlDocument: Document | null;\n        targetDomNode: HTMLElement | null;\n        clipboardData: DataTransfer;\n        transaction: (cb: () => void | Promise<void>) => void;\n      }\n    | undefined = undefined;\n\n  constructor() {\n    super();\n    this.shadowRoot.appendChild(pasteMenuItemStyle.cloneNode(true));\n  }\n\n  isEditorItemAvailable():\n    | boolean\n    | PasteMenuItemPriorityValue\n    | Promise<boolean | PasteMenuItemPriorityValue> {\n    return Promise.resolve(PasteMenuItemPriority.Default);\n  }\n\n  onEditorSetPasteContent(content: {\n    plainText: string;\n    htmlDocument: Document | null;\n    targetDomNode: HTMLElement | null;\n    clipboardData: DataTransfer;\n    transaction: (cb: () => void | Promise<void>) => void;\n  }) {\n    this.content = content;\n  }\n\n  insertContent(content: string) {\n    this.content?.transaction(() => {\n      this.tiptap?.chain().undo().focus().run();\n      this.tiptap?.commands.insertContent(\n        typeof content === \"string\" ? preprocessHTML(content) : content\n      );\n    });\n    this.parentElement?.dispatchEvent(new Event(\"paste-menu-item-applied\"));\n  }\n\n  onEditorPaste() {\n    throw new Error(\"onEditorPaste is not implemented\");\n  }\n}\n\ndeclare global {\n  namespace svelteHTML {\n    interface HTMLAttributes<T> {\n      \"onpaste-menu-item-applied\"?: (event: CustomEvent) => void;\n    }\n  }\n}\n","export default \":host > button {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  background: none;\\n  border: none;\\n  margin: 0;\\n  padding: 0;\\n  cursor: pointer;\\n  font-size: inherit;\\n\\n  .icon:not(svg) {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 4px;\\n  }\\n}\\n\"","import { PanelItemElement } from \"../../ui/item/element\";\nimport css from \"./element.css?raw\";\n\n/**\n * QuickActionItemElement\n */\nconst quickActionItemStyle = document.createElement(\"style\");\nquickActionItemStyle.textContent = css;\nexport class QuickActionItemElement extends PanelItemElement {\n  aliases?: string[];\n  variant?: string;\n\n  constructor() {\n    super();\n    this.shadowRoot.appendChild(quickActionItemStyle.cloneNode(true));\n  }\n\n  connectedCallback() {\n    this.variant = this.dataset.mtRichTextEditorPanelItemVariant;\n  }\n\n  insertContent(content: string) {\n    this.tiptap\n      ?.chain()\n      .focus()\n      .selectParentNode()\n      // .deleteSelection()\n      .insertContent(content)\n      .run();\n  }\n}\n"],"names":["PUBLIC_VERSION","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_IS_CONTROLLED","EACH_IS_ANIMATED","EACH_ITEM_IMMUTABLE","PROPS_IS_IMMUTABLE","PROPS_IS_RUNES","PROPS_IS_UPDATED","PROPS_IS_BINDABLE","PROPS_IS_LAZY_INITIAL","TRANSITION_IN","TRANSITION_OUT","TRANSITION_GLOBAL","TEMPLATE_FRAGMENT","TEMPLATE_USE_IMPORT_NODE","HYDRATION_START","HYDRATION_START_ELSE","HYDRATION_END","HYDRATION_ERROR","UNINITIALIZED","FILENAME","NAMESPACE_SVG","regex_return_characters","hash","str","i","is_capture_event","name","DELEGATED_EVENTS","is_delegated","event_name","ATTRIBUTE_ALIASES","normalize_attribute","PASSIVE_EVENTS","is_passive_event","RAW_TEXT_ELEMENTS","is_raw_text_element","sanitize_location","location","_a","_b","node_env","DEV","is_array","array_from","object_keys","define_property","get_descriptor","get_descriptors","object_prototype","array_prototype","get_prototype_of","is_function","thing","noop","run","fn","run_all","arr","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","INSPECT_EFFECT","HEAD_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","STATE_SYMBOL_METADATA","LEGACY_PROPS","LOADING_ATTR_SYMBOL","equals","value","safe_not_equal","a","b","safe_equals","bind_invalid_checkbox_value","error","derived_references_self","effect_in_teardown","rune","effect_in_unowned_derived","effect_orphan","effect_update_depth_exceeded","hydration_failed","props_invalid_value","key","rune_outside_svelte","state_descriptors_fixed","state_prototype_fixed","state_unsafe_local_read","state_unsafe_mutation","legacy_mode_flag","tracing_mode_flag","enable_legacy_mode_flag","tracing_expressions","get_stack","label","stack","lines","new_lines","line","inspect_effects","set_inspect_effects","v","source","signal","state","push_derived_source","mutable_source","initial_value","immutable","s","component_context","mutable_state","active_reaction","derived_sources","set_derived_sources","set","is_runes","e.state_unsafe_mutation","internal_set","increment_version","mark_reactions","active_effect","new_deps","set_signal_status","schedule_effect","untracked_writes","set_untracked_writes","inspects","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","effect","check_dirtiness","update_effect","status","reactions","runes","length","reaction","flags","bold","normal","hydration_attribute_changed","attribute","html","hydration_html_changed","hydration_mismatch","lifecycle_double_unmount","ownership_invalid_binding","parent","child","owner","ownership_invalid_mutation","component","state_proxy_equality_mismatch","operator","hydrating","set_hydrating","hydrate_node","set_hydrate_node","node","w.hydration_mismatch","hydrate_next","get_next_sibling","reset","next","count","remove_nodes","depth","data","boundaries","chrome_pattern","firefox_pattern","entries","match","get_component","entry","modules","module","ADD_OWNER","add_owner","object","global","skip_warning","dev_current_component_function","metadata","has_owner","original","get_owner","w.ownership_invalid_binding","add_owner_to_object","widen_ownership","from","to","seen","render_effect","proto","check_ownership","w.ownership_invalid_mutation","proxy","prev","prototype","sources","is_proxied_array","version","_","prop","descriptor","e.state_descriptors_fixed","target","ls","n","update_version","receiver","exists","get","prop_metadata","has","other_s","own_keys","e.state_prototype_fixed","d","get_proxied_value","is","init_array_prototype_warnings","cleanup","indexOf","lastIndexOf","includes","item","from_index","index","w.state_proxy_equality_mismatch","$window","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","create_text","get_first_child","is_text","text","first_child","fragment","first","sibling","next_sibling","last_sibling","type","clear_text_content","derived","parent_derived","derived_safe_equal","destroy_derived_children","children","destroy_derived","destroy_effect","get_derived_parent_effect","execute_derived","prev_active_effect","set_active_effect","prev_inspect_effects","e.derived_references_self","update_reaction","update_derived","skip_reaction","remove_reactions","validate_effect","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","push_effect","parent_effect","parent_last","create_effect","sync","push","is_root","e","inert","teardown","user_effect","defer","context","user_pre_effect","effect_root","component_root","options","fulfil","pause_effect","legacy_pre_effect","deps","token","untrack","legacy_pre_effect_reset","template_effect","block","branch","execute_effect_teardown","previously_destroying_effect","previous_reaction","set_is_destroying_effect","set_active_reaction","destroy_effect_deriveds","deriveds","destroy_effect_children","remove_dom","destroy_block_effect_children","removed","end","transitions","transition","unlink_effect","callback","pause_children","run_out_transitions","remaining","check","local","transparent","resume_effect","resume_children","request_idle_callback","cb","is_micro_task_queued","is_idle_task_queued","current_queued_micro_tasks","current_queued_idle_tasks","process_micro_tasks","tasks","process_idle_tasks","queue_micro_task","queue_idle_task","flush_tasks","lifecycle_outside_component","FLUSH_MICROTASK","FLUSH_SYNC","handled_errors","is_throwing_error","scheduler_mode","last_scheduled_effect","queued_root_effects","flush_count","dev_effect_stack","skipped_deps","current_version","dependencies","is_unowned","dependency","propagate_error","current","should_rethrow_error","handle_error","previous_effect","component_stack","effect_name","current_context","filename","file","indent","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","prev_derived_sources","previous_component_context","result","remove_reaction","new_length","start_index","previous_component_fn","log_effect_stack","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","collected_effects","process_effects","flush_queued_effects","effects","process_deferred","previous_queued_root_effects","current_effect","main_loop","is_branch","is_skippable_branch","parent_sibling","flush_sync","previous_scheduler_mode","is_derived","e.state_unsafe_local_read","STATUS_MASK","getContext","get_or_init_context_map","setContext","get_parent_context","context_map","props","pop","context_stack_item","component_effects","component_effect","deep_read_state","deep_read","visited","descriptors","throw_rune_error","e.rune_outside_svelte","all_styles","register_style","style","styles","autofocus","dom","body","remove_textarea_child","listening_to_form_reset","add_form_reset_listener","evt","without_reactive_context","listen_to_event_and_reset_event","element","event","handler","on_reset","all_registered_events","root_event_handles","create_event","target_handler","handle_event_propagation","capture","passive","delegate","events","handler_element","owner_document","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","create_fragment_from_html","elem","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","clone","comment","frag","anchor","append","should_intro","set_should_intro","set_text","mount","_mount","hydrate","was_hydrating","previous_hydrate_node","instance","e.hydration_failed","document_listeners","Component","intro","registered_events","event_handle","unmount","anchor_node","ctx","mounted_components","w.lifecycle_double_unmount","append_styles","css","root","is_store_binding","capture_store_binding","previous_is_store_binding","with_parent_branch","fallback","bindable","lazy","is_store_sub","prop_value","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","getter","derived_getter","legacy_parent","mutation","from_child","was_from_child","inner_current_value","current_value","parent_value","child_value","new_value","createClassComponent","Svelte4Component","_events","_instance","__privateAdd","add_source","__privateSet","__privateGet","args","SvelteElement","$$componentCtor","$$slots","use_shadow_dom","__publicField","listener","unsub","create_slot","slot","existing_slots","get_custom_elements_slots","get_custom_element_value","attribute_value","attr","_oldValue","newValue","attribute_name","props_definition","transform","create_custom_element","slots","exports","extend","Class","property","preprocessHTML","script","div","textBlock","nodesToProcess","encoder","normalizeHTML","doc","eventAttrs","res","title","$.prop","$$props","DEFAULT_SHOW_DELAY","ACTIVE_SHOW_DELAY","RESET_DELAY","showCount","showDelay","resetTimerId","tooltip","tooltipMount","timerId","Tooltip","PanelItemElement","editor","css$2","toolbarItemStyle","ToolbarItemElement","button","StatusbarItemElement","css$1","pasteMenuItemStyle","PasteMenuItemPriority","PasteMenuItemElement","quickActionItemStyle","QuickActionItemElement"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]}